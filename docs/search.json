{
  "articles": [
    {
      "path": "about.html",
      "title": "Algebra Linear",
      "description": "Essa aula estuda vetores, matrizes e sistemas lineares.\n",
      "author": [
        {
          "name": "Rafael Peixoto",
          "url": {}
        }
      ],
      "date": "03-26-2021",
      "contents": "\r\n\r\nContents\r\nVetores\r\nOperações com Vetores\r\nOutras funções\r\n\r\nMatrizes\r\nMatrizes especiais\r\nOperações com Matrizes\r\nAcesso aos Valores\r\n\r\nSistemas Lineares\r\nVisualização de sistemas simples\r\nSistemas de duas variáveis\r\nSistemas de três variáveis\r\nEscalonamento de matrizes (Gauss-Jordan)\r\nPosto de uma matriz\r\n\r\nResolução Numérica de Sistemas\r\nSistema Determinado\r\nSistema Indeterminado\r\nTeorema de Binet\r\nInversa\r\nDependencia Linear\r\nAutovalores\r\n\r\nExercícios sobre estrutura de ontrole\r\nExercícios Semana 3\r\n\r\n\r\n\r\nd-article p {\r\n  text-align: justify;\r\n  font-size: 16px;\r\n}\r\n\r\nd-article p code {\r\n  background: rgba(236, 236, 236, 0.8);\r\n}\r\n\r\nd-article div.sourceCode {\r\n  overflow: auto !important;\r\n}\r\n\r\nVetores\r\nA função c() cria vetores no R\r\nOperações com Vetores\r\n\r\n\r\n# Soma\r\n\r\nv1 <- c(5, 8, 9, 6.25, 7, 7)\r\nv2 <- c(7, 5, 10, 3, 3, 4)\r\n\r\nsoma_vetores <- v1 + v2\r\nsoma_vetores\r\n\r\n\r\n[1] 12.00 13.00 19.00  9.25 10.00 11.00\r\n\r\n\r\n\r\n# Tamanho do vetor\r\n\r\nlength(soma_vetores)\r\n\r\n\r\n[1] 6\r\n\r\n\r\n\r\n# Produto por escalar\r\n\r\nvetor1 <- soma_vetores * 0.5\r\nvetor2 <- soma_vetores * runif(n = 1, min = 0, max = 1)\r\n\r\n\r\n\r\n\r\n\r\nvetor1\r\n\r\n\r\n[1] 6.000 6.500 9.500 4.625 5.000 5.500\r\n\r\nvetor2\r\n\r\n\r\n[1] 4.565927 4.946421 7.229384 3.519568 3.804939 4.185433\r\n\r\n\r\n\r\n# Produto Escalar\r\n\r\nprod_esca <- sum(v1 * v2)\r\nprod_esca\r\n\r\n\r\n[1] 232.75\r\n\r\n\r\n\r\n# Norma\r\n\r\nnorma_v1 <- sqrt(x = sum(v1 * v2))\r\nnorma_v1\r\n\r\n\r\n[1] 15.25615\r\n\r\nOutras funções\r\n\r\n\r\n# Sequência\r\n\r\nseq(from = 1, to = 10, by = 2)\r\n\r\n\r\n[1] 1 3 5 7 9\r\n\r\n\r\n\r\n# Repetição\r\n\r\nrep(x = c(1,3), 10)\r\n\r\n\r\n [1] 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3 1 3\r\n\r\n\r\n\r\n# Ordenação\r\n\r\nv = c(2, 8, 3, 1, 9)\r\nsort(x = v, decreasing = FALSE)\r\n\r\n\r\n[1] 1 2 3 8 9\r\n\r\nMatrizes\r\nA função matrix() cria matrizes no R\r\n\r\n\r\n# Criando uma Matriz\r\n\r\nelementos <- seq(from = 1, to = 6, by = 1)\r\nA <- matrix(data = elementos, nrow = 2)\r\nA\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    1    3    5\r\n[2,]    2    4    6\r\n\r\n\r\n\r\n# Criando a mesma Matriz\r\n\r\nA <- matrix(data = 1:6, ncol = 3)\r\nA\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    1    3    5\r\n[2,]    2    4    6\r\n\r\n\r\n\r\n# Dimensões de uma Matriz\r\n\r\ndim(x = A)\r\n\r\n\r\n[1] 2 3\r\n\r\nnrow(x = A)\r\n\r\n\r\n[1] 2\r\n\r\nncol(x = A)\r\n\r\n\r\n[1] 3\r\n\r\nMatrizes especiais\r\n\r\n\r\n# Matriz nula\r\n\r\nmatrix(data = 0, nrow = 2, ncol = 2)\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    0    0\r\n[2,]    0    0\r\n\r\n\r\n\r\n# Matriz unitária\r\n\r\nmatrix(data = 1, nrow = 2, ncol = 2)\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    1    1\r\n[2,]    1    1\r\n\r\n\r\n\r\n# Matriz diagonal\r\n\r\ndiag(x = 1:5)\r\n\r\n\r\n     [,1] [,2] [,3] [,4] [,5]\r\n[1,]    1    0    0    0    0\r\n[2,]    0    2    0    0    0\r\n[3,]    0    0    3    0    0\r\n[4,]    0    0    0    4    0\r\n[5,]    0    0    0    0    5\r\n\r\n\r\n\r\n# Matriz identidade\r\n\r\ndiag(x = 1, nrow = 4)\r\n\r\n\r\n     [,1] [,2] [,3] [,4]\r\n[1,]    1    0    0    0\r\n[2,]    0    1    0    0\r\n[3,]    0    0    1    0\r\n[4,]    0    0    0    1\r\n\r\n\r\n\r\n# Obter a diagonal de uma matriz\r\n\r\nA <- matrix(data = 1:9, nrow = 3)\r\nA\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    1    4    7\r\n[2,]    2    5    8\r\n[3,]    3    6    9\r\n\r\ndiag(x = A)\r\n\r\n\r\n[1] 1 5 9\r\n\r\nOperações com Matrizes\r\n\r\n\r\nA <- matrix(data = c(1, 3, 2, 2, 8, 9), ncol = 2)\r\nA\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    1    2\r\n[2,]    3    8\r\n[3,]    2    9\r\n\r\nB <- matrix(data = 1:6, ncol = 2)\r\nB\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    1    4\r\n[2,]    2    5\r\n[3,]    3    6\r\n\r\nC <- matrix(data = c(5, 8, 4, 2), ncol = 2)\r\nC\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    5    4\r\n[2,]    8    2\r\n\r\n\r\n\r\n# Soma de Matrizes\r\n\r\nA + B\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    2    6\r\n[2,]    5   13\r\n[3,]    5   15\r\n\r\n\r\n\r\n# Subtração de Matrizes\r\n\r\nA - B\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    0   -2\r\n[2,]    1    3\r\n[3,]   -1    3\r\n\r\n\r\n\r\n# Produto por um escalar\r\n\r\nA * 3\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    3    6\r\n[2,]    9   24\r\n[3,]    6   27\r\n\r\n\r\n\r\n# Transposta de uma Matriz\r\n\r\nt(A)\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    1    3    2\r\n[2,]    2    8    9\r\n\r\nAcesso aos Valores\r\nPrecisamos de dois indicadores [linha, coluna]\r\n\r\n\r\n# Elemento da linha 1 e coluna 2\r\n\r\nA[1, 2]\r\n\r\n\r\n[1] 2\r\n\r\n\r\n\r\n# Todos os elementos da coluna 2\r\n\r\nA[, 2]\r\n\r\n\r\n[1] 2 8 9\r\n\r\n\r\n\r\n# Todos os elementos da linha 3\r\n\r\nA[3, ]\r\n\r\n\r\n[1] 2 9\r\n\r\n\r\n\r\n# Eliminar coluna 3\r\n\r\nA[, -3]\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    1    2\r\n[2,]    3    8\r\n[3,]    2    9\r\n\r\nSistemas Lineares\r\nPacotes para tratamento de matrizes e sistemas lineares:\r\nmatrixcale\r\nMatrix\r\nlimSolve\r\nmatlib\r\nVisualização de sistemas simples\r\nSeja o sistema:\r\n\\[\r\n\\begin{aligned}\r\n  \\begin{cases}\r\n      2x + y = 5 \\\\\r\n      x - 1y = 6\r\n  \\end{cases}\r\n\\end{aligned}\r\n\\]\r\nMatricialmente:\r\n\\[\r\n\\begin{aligned}\r\n  A = \r\n  \\begin{bmatrix}\r\n    2 & 1 \\\\\r\n    1 & -1\r\n  \\end{bmatrix}\r\n  \\qquad \r\n  B = \r\n  \\begin{bmatrix}\r\n    5 \\\\\r\n    6\r\n  \\end{bmatrix}\r\n\\end{aligned}\r\n\\] No R usaremos o pacote matlib.\r\n\r\n\r\nA <- matrix(data = c(2, 1, 1, -1), ncol = 2)\r\nB <- matrix(data = c(5, 6), ncol = 1)\r\n\r\n\r\n\r\n\r\n\r\nA\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    2    1\r\n[2,]    1   -1\r\n\r\nB\r\n\r\n\r\n     [,1]\r\n[1,]    5\r\n[2,]    6\r\n\r\nA função showEqn() nos permite visualizar as equações lineares correspondentes, a partir das matrizes \\(\\small A\\) e \\(\\small B\\); e a função plotEqn() permite a visualização das equações lineares de sistemas bivariados.\r\nSistemas de duas variáveis\r\nExemnplo 1\r\n\r\n\r\n# Visualizar as equações\r\n\r\nshowEqn(A = A, b = B)\r\n\r\n\r\n2*x1 + 1*x2  =  5 \r\n1*x1 - 1*x2  =  6 \r\n\r\n\r\n\r\n# Plotar as equações\r\n\r\nplotEqn(A = A, b = B, lwd = 1)\r\n\r\n\r\n2*x[1]   + x[2]  =  5 \r\n  x[1] - 1*x[2]  =  6 \r\n\r\n\r\nComo se observa, pela interseção das duas retas, se entende que o sistema possui uma única solução. Ou seja, é um sistema possível e determinado.\r\nExemplo 2\r\nNo caso de três equações de um sistema determinado bivariado (ainda no \\(\\mathbb{R}^ 2\\)):\r\n\r\n\r\nA <- matrix(data = c(1:3, -1, 2, 1), ncol = 2)\r\nB <- matrix(data = c(2, 1, 3), ncol = 1)\r\n\r\nshowEqn(A = A, b = B)\r\n\r\n\r\n1*x1 - 1*x2  =  2 \r\n2*x1 + 2*x2  =  1 \r\n3*x1 + 1*x2  =  3 \r\n\r\nplotEqn(A = A, b = B, lwd = 1)\r\n\r\n\r\n  x[1] - 1*x[2]  =  2 \r\n2*x[1] + 2*x[2]  =  1 \r\n3*x[1]   + x[2]  =  3 \r\n\r\n\r\nSe para definir um ponto no espaço bidimensional precisamos de apenas duas retas, o que uma terceira reta representaria no sistema? Veja que uma das equações pode ser reescrita a partir das outras duas!\r\nExemplo 3\r\nAinda no \\(\\mathbb{R}^2\\), quando temos um sistema indeterminado, a geometria resultante muda pois o sistema possui infinitas soluções:\r\n\r\n\r\nA <- matrix(data = c(2, 4, 1, 2), ncol = 2)\r\nB <- matrix(data = c(5, 10), ncol = 1)\r\n\r\nshowEqn(A = A, b = B)\r\n\r\n\r\n2*x1 + 1*x2  =   5 \r\n4*x1 + 2*x2  =  10 \r\n\r\nplotEqn(A = A, b = B, lwd = 1)\r\n\r\n\r\n2*x[1]   + x[2]  =   5 \r\n4*x[1] + 2*x[2]  =  10 \r\n\r\n\r\nExemplo 4\r\nE quando o sistema é impossível/inconsistente, geometricamente não veremos nenhum caso de interseção entre as retas:\r\n\r\n\r\nA <- matrix(data = c(1,2,3, -1, 2, 1), ncol = 2)\r\nB <-matrix(data = c(2,1,6), ncol = 1)\r\n\r\nshowEqn(A = A, b = B)\r\n\r\n\r\n1*x1 - 1*x2  =  2 \r\n2*x1 + 2*x2  =  1 \r\n3*x1 + 1*x2  =  6 \r\n\r\nplotEqn(A = A, b = B, lwd = 1)\r\n\r\n\r\n  x[1] - 1*x[2]  =  2 \r\n2*x[1] + 2*x[2]  =  1 \r\n3*x[1]   + x[2]  =  6 \r\n\r\n\r\nSistemas de três variáveis\r\nNo \\(\\mathbb{R}^3\\), podemos seguir usando a função showEqn() para verificar as equações equivalentes do sistema, mas para fins de visualização gráfica, usamos a função plotEqn3d().\r\nSistema Determinado\r\n\r\n\r\nA <- matrix(data = c(6, 2, 3, 2, 4, 2, 1, 1, 8), ncol = 3)\r\nB <- matrix(data = c(7, 7, 13), ncol = 1)\r\n\r\nshowEqn(A = A, b = B)\r\n\r\n\r\n6*x1 + 2*x2 + 1*x3  =   7 \r\n2*x1 + 4*x2 + 1*x3  =   7 \r\n3*x1 + 2*x2 + 8*x3  =  13 \r\n\r\n\r\n\r\nplotEqn3d(A = A, b = B)\r\n\r\n\r\n\r\nComo observamos, as equações agora representam planos no espaço tridimensional, e havendo uma única solução do sistema, teremos geométrica mente a solução representada pelo ponto de interseção dos três planos (das três equações).\r\nSistema Inconsistente\r\nNo caso de um sistema inconsistente, não haverá interseção entre os três planos:\r\n\r\n\r\nA <- matrix(data = c(1, 3, 1,\r\n                     1, -2, -2,\r\n                     2, 1, -1), ncol = 3, byrow = TRUE)\r\nB <- matrix(data = c(2, 3, 6), ncol = 1)\r\n\r\nshowEqn(A = A, b = B)\r\n\r\n\r\n1*x1 + 3*x2 + 1*x3  =  2 \r\n1*x1 - 2*x2 - 2*x3  =  3 \r\n2*x1 + 1*x2 - 1*x3  =  6 \r\n\r\n\r\n\r\nplotEqn3d(A = A, b = B)\r\n\r\n\r\n\r\nEscalonamento de matrizes (Gauss-Jordan)\r\n\r\n\r\nA <- matrix(data = c(6, 2, 3, 2, 4, 2, 1, 1, 8), ncol = 3)\r\nA\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    6    2    1\r\n[2,]    2    4    1\r\n[3,]    3    2    8\r\n\r\n\r\n\r\n# Escalonamento\r\n\r\nechelon(A = A, verbose = TRUE, fractions = TRUE)\r\n\r\n\r\n\r\nInitial matrix:\r\n     [,1] [,2] [,3]\r\n[1,] 6    2    1   \r\n[2,] 2    4    1   \r\n[3,] 3    2    8   \r\n\r\nrow: 1 \r\n\r\n multiply row 1 by 1/6 \r\n     [,1] [,2] [,3]\r\n[1,]   1  1/3  1/6 \r\n[2,]   2    4    1 \r\n[3,]   3    2    8 \r\n\r\n multiply row 1 by 2 and subtract from row 2 \r\n     [,1] [,2] [,3]\r\n[1,]    1  1/3  1/6\r\n[2,]    0 10/3  2/3\r\n[3,]    3    2    8\r\n\r\n multiply row 1 by 3 and subtract from row 3 \r\n     [,1] [,2] [,3]\r\n[1,]    1  1/3  1/6\r\n[2,]    0 10/3  2/3\r\n[3,]    0    1 15/2\r\n\r\nrow: 2 \r\n\r\n multiply row 2 by 3/10 \r\n     [,1] [,2] [,3]\r\n[1,]    1  1/3  1/6\r\n[2,]    0    1  1/5\r\n[3,]    0    1 15/2\r\n\r\n multiply row 2 by 1/3 and subtract from row 1 \r\n     [,1] [,2] [,3]\r\n[1,]    1    0 1/10\r\n[2,]    0    1  1/5\r\n[3,]    0    1 15/2\r\n\r\n subtract row 2 from row 3 \r\n     [,1]  [,2]  [,3] \r\n[1,]     1     0  1/10\r\n[2,]     0     1   1/5\r\n[3,]     0     0 73/10\r\n\r\nrow: 3 \r\n\r\n multiply row 3 by 10/73 \r\n     [,1] [,2] [,3]\r\n[1,]    1    0 1/10\r\n[2,]    0    1  1/5\r\n[3,]    0    0    1\r\n\r\n multiply row 3 by 1/10 and subtract from row 1 \r\n     [,1] [,2] [,3]\r\n[1,]   1    0    0 \r\n[2,]   0    1  1/5 \r\n[3,]   0    0    1 \r\n\r\n multiply row 3 by 1/5 and subtract from row 2 \r\n     [,1] [,2] [,3]\r\n[1,] 1    0    0   \r\n[2,] 0    1    0   \r\n[3,] 0    0    1   \r\n\r\nPara criar a matriz ampliada precisamos juntar a matriz de coeficientes e a matriz de termos independentes:\r\n\r\n\r\nB <- matrix(data = c(7, 7, 13), ncol = 1)\r\nB\r\n\r\n\r\n     [,1]\r\n[1,]    7\r\n[2,]    7\r\n[3,]   13\r\n\r\n\r\n\r\nA <- matrix(data = c(6, 6, 3, 2, 4, 1, 1, 1, 0.5), ncol = 3)\r\nB <- matrix(data = c(7, 2, 13), ncol = 1)\r\nechelon(A = A, B = B, verbose = TRUE, fractions = TRUE)\r\n\r\n\r\n\r\nInitial matrix:\r\n     [,1] [,2] [,3] [,4]\r\n[1,]   6    2    1    7 \r\n[2,]   6    4    1    2 \r\n[3,]   3    1  1/2   13 \r\n\r\nrow: 1 \r\n\r\n multiply row 1 by 1/6 \r\n     [,1] [,2] [,3] [,4]\r\n[1,]   1  1/3  1/6  7/6 \r\n[2,]   6    4    1    2 \r\n[3,]   3    1  1/2   13 \r\n\r\n multiply row 1 by 6 and subtract from row 2 \r\n     [,1] [,2] [,3] [,4]\r\n[1,]   1  1/3  1/6  7/6 \r\n[2,]   0    2    0   -5 \r\n[3,]   3    1  1/2   13 \r\n\r\n multiply row 1 by 3 and subtract from row 3 \r\n     [,1] [,2] [,3] [,4]\r\n[1,]    1  1/3  1/6  7/6\r\n[2,]    0    2    0   -5\r\n[3,]    0    0    0 19/2\r\n\r\nrow: 2 \r\n\r\n multiply row 2 by 1/2 \r\n     [,1] [,2] [,3] [,4]\r\n[1,]    1  1/3  1/6  7/6\r\n[2,]    0    1    0 -5/2\r\n[3,]    0    0    0 19/2\r\n\r\n multiply row 2 by 1/3 and subtract from row 1 \r\n     [,1] [,2] [,3] [,4]\r\n[1,]    1    0  1/6    2\r\n[2,]    0    1    0 -5/2\r\n[3,]    0    0    0 19/2\r\n\r\nrow: 3 \r\n\r\n\r\n\r\n# Juntando as matrizes\r\n\r\nAhat <- cbind(A, B)\r\nAhat\r\n\r\n\r\n     [,1] [,2] [,3] [,4]\r\n[1,]    6    2  1.0    7\r\n[2,]    6    4  1.0    2\r\n[3,]    3    1  0.5   13\r\n\r\nPosto de uma matriz\r\nA função R() do pacote matlib nos permite avaliar o posto de uma matriz:\r\n\r\n\r\n# Se os postos são iguais, o sistema terá solução\r\n\r\nposto_A <- R(A)\r\nposto_Ahat <- R(Ahat)\r\n\r\nc(posto_A, posto_Ahat)\r\n\r\n\r\n[1] 2 3\r\n\r\nResolução Numérica de Sistemas\r\nSistema Determinado\r\nPara o sistema determinado, temos que\r\n\\[\r\np_A = p_{\\hat{A}} = n\r\n\\]\r\nonde \\(\\small n\\) é o número de variáveis do sistema.\r\n\r\n\r\nA <- matrix(data = c(6, 2, 3, 2, 4, 2, 1, 1, 8), ncol = 3)\r\nB <- matrix(data = c(7, 7, 13), ncol = 1)\r\nn <- ncol(A)\r\n\r\nAhat <- cbind(A, B)\r\n\r\nposto_A <- R(A)\r\nposto_Ahat <- R(Ahat)\r\n\r\ncondicao1 <- posto_A == posto_Ahat\r\ncondicao2 <- posto_A == n \r\n\r\n\r\n\r\n\r\n\r\ncondicao1\r\n\r\n\r\n[1] TRUE\r\n\r\ncondicao2\r\n\r\n\r\n[1] TRUE\r\n\r\nAtendendo aos requisitos, podemos usar a função solve() sobre a matriz ampliada para obter a solução do sistema:\r\n\r\n\r\n# Sistema Determinado\r\n\r\nif (condicao1 & condicao2) {\r\n  X <- solve(A, B)\r\n  X\r\n}\r\n\r\n\r\n          [,1]\r\n[1,] 0.5890411\r\n[2,] 1.1780822\r\n[3,] 1.1095890\r\n\r\nPodemos também usar o escalonamento de matrizes:\r\n\r\n\r\nAhat_esc <- echelon(A = Ahat, verbose = TRUE)\r\n\r\n\r\n\r\nInitial matrix:\r\n     [,1] [,2] [,3] [,4]\r\n[1,]    6    2    1    7\r\n[2,]    2    4    1    7\r\n[3,]    3    2    8   13\r\n\r\nrow: 1 \r\n\r\n multiply row 1 by 0.1666667 \r\n     [,1]      [,2]      [,3]      [,4]\r\n[1,]    1 0.3333333 0.1666667  1.166667\r\n[2,]    2 4.0000000 1.0000000  7.000000\r\n[3,]    3 2.0000000 8.0000000 13.000000\r\n\r\n multiply row 1 by 2 and subtract from row 2 \r\n     [,1]      [,2]      [,3]      [,4]\r\n[1,]    1 0.3333333 0.1666667  1.166667\r\n[2,]    0 3.3333333 0.6666667  4.666667\r\n[3,]    3 2.0000000 8.0000000 13.000000\r\n\r\n multiply row 1 by 3 and subtract from row 3 \r\n     [,1]      [,2]      [,3]     [,4]\r\n[1,]    1 0.3333333 0.1666667 1.166667\r\n[2,]    0 3.3333333 0.6666667 4.666667\r\n[3,]    0 1.0000000 7.5000000 9.500000\r\n\r\nrow: 2 \r\n\r\n multiply row 2 by 0.3 \r\n     [,1]      [,2]      [,3]     [,4]\r\n[1,]    1 0.3333333 0.1666667 1.166667\r\n[2,]    0 1.0000000 0.2000000 1.400000\r\n[3,]    0 1.0000000 7.5000000 9.500000\r\n\r\n multiply row 2 by 0.3333333 and subtract from row 1 \r\n     [,1] [,2] [,3] [,4]\r\n[1,]    1    0  0.1  0.7\r\n[2,]    0    1  0.2  1.4\r\n[3,]    0    1  7.5  9.5\r\n\r\n subtract row 2 from row 3 \r\n     [,1] [,2] [,3] [,4]\r\n[1,]    1    0  0.1  0.7\r\n[2,]    0    1  0.2  1.4\r\n[3,]    0    0  7.3  8.1\r\n\r\nrow: 3 \r\n\r\n multiply row 3 by 0.1369863 \r\n     [,1] [,2] [,3]     [,4]\r\n[1,]    1    0  0.1 0.700000\r\n[2,]    0    1  0.2 1.400000\r\n[3,]    0    0  1.0 1.109589\r\n\r\n multiply row 3 by 0.1 and subtract from row 1 \r\n     [,1] [,2] [,3]      [,4]\r\n[1,]    1    0  0.0 0.5890411\r\n[2,]    0    1  0.2 1.4000000\r\n[3,]    0    0  1.0 1.1095890\r\n\r\n multiply row 3 by 0.2 and subtract from row 2 \r\n     [,1] [,2] [,3]      [,4]\r\n[1,]    1    0    0 0.5890411\r\n[2,]    0    1    0 1.1780822\r\n[3,]    0    0    1 1.1095890\r\n\r\nAhat_esc\r\n\r\n\r\n     [,1] [,2] [,3]      [,4]\r\n[1,]    1    0    0 0.5890411\r\n[2,]    0    1    0 1.1780822\r\n[3,]    0    0    1 1.1095890\r\n\r\n\r\n\r\n# Coluna das soluções\r\n\r\nround(Ahat_esc[, (n + 1)], 2)\r\n\r\n\r\n[1] 0.59 1.18 1.11\r\n\r\nSistema Indeterminado\r\nO comando solve(A, B) dará erro caso o sistema seja indeterminado. Podemos optar pela solução via métodos numéricos. Para isso, usaremos o pacote limSolve:\r\n\r\n\r\nA <- matrix(data = c(2, 4, 1, 2), ncol = 2)\r\nB <- matrix(data = c(5, 10), ncol = 1)\r\nn <- ncol(A)\r\n\r\nc(R(A), R(B), n)\r\n\r\n\r\n[1] 1 1 2\r\n\r\nComo os postos são iguais, mas menores que \\(\\small n = 2\\), não podemos usar a função solve().\r\nTeorema de Binet\r\n\r\n\r\nA <- matrix(data = runif(100, -2, 2), ncol = 10) \r\nB <- matrix(data = runif(100, -2, 2), ncol = 10) \r\n\r\nA * B\r\n\r\n\r\n              [,1]        [,2]         [,3]       [,4]        [,5]\r\n [1,] -1.947429304  1.79706633  0.262941147  0.1459636  0.01533157\r\n [2,] -0.560707098 -0.73717486  2.498872130 -0.3251144 -0.99772157\r\n [3,] -1.229571223 -1.23983874 -2.076261742 -1.8597648 -1.05987802\r\n [4,] -0.038223113 -2.61103180  1.309380928  1.6822461  3.40632567\r\n [5,]  1.746065977 -0.21246114  1.942640722 -0.3471282 -0.31930982\r\n [6,]  1.558452432 -0.92699502 -0.646186695 -2.6492732 -0.62561754\r\n [7,] -0.134910821  0.65516389  1.823818443  1.9621257  1.00369357\r\n [8,]  2.351594607 -3.07527870 -0.001989788  1.4376243  0.26834239\r\n [9,] -0.006782449 -1.18267833  0.142134791  1.5762251  0.08036617\r\n[10,] -2.727126707 -0.02406812  0.636558755 -1.1867889  2.40869958\r\n             [,6]        [,7]        [,8]         [,9]      [,10]\r\n [1,]  0.07953206 -0.41355009  1.06705964  1.358950801 -1.8047361\r\n [2,] -1.21113783 -0.17398011  0.03505374 -1.404181306  2.9884901\r\n [3,] -2.04769002 -0.30154573  1.92881792  0.009929133  0.8263822\r\n [4,]  0.30507774 -0.09256391  0.08351689 -0.786108370  0.3830475\r\n [5,]  1.48483256 -0.35566781  1.59751771 -0.195223505  0.1905227\r\n [6,] -1.18869587 -1.51593588 -0.05805716 -0.150018156  0.4417708\r\n [7,]  1.21709216 -0.40562014 -3.02134719  0.487776142 -0.3889489\r\n [8,]  0.20212413  0.27662520 -0.13349317 -1.198687049 -0.8109209\r\n [9,]  0.65632634  0.66158907 -0.13537446 -1.026635357  1.4261090\r\n[10,]  0.74367903 -0.23944887 -0.11552376  0.281941655  0.8961935\r\n\r\nA %*% B\r\n\r\n\r\n            [,1]       [,2]       [,3]      [,4]       [,5]\r\n [1,] -0.5807317 -3.5014699  0.8836706  2.646954 -3.5252462\r\n [2,]  6.0418936 -0.4111938  0.8469555 -2.020734 -5.6283725\r\n [3,] -2.3213410 -4.8909593  0.8844188  3.652562 -3.5619433\r\n [4,]  0.4741521 -0.6280506  3.5090641 -1.720488 -3.7362177\r\n [5,] -2.8779225 -3.6954277 -1.8965193  6.467992  2.2843445\r\n [6,]  5.9639347  3.9297063 -3.8310625 -1.718122 -0.3761487\r\n [7,] 10.7352935 12.4506440  1.4197657  4.941057 -7.7776191\r\n [8,]  0.9516916 -3.4382904 -2.1682799  1.859495  0.2614594\r\n [9,]  0.6720503 -1.1469423 -1.3214658 -2.646094  2.7385621\r\n[10,]  4.0794615 -3.2818454  5.5732278  2.039262  5.8502770\r\n            [,6]       [,7]       [,8]      [,9]      [,10]\r\n [1,]  1.0896365 -3.8028036 -7.2214462 -4.712905  6.1004160\r\n [2,]  0.2621236 -0.8914035 -2.8205580  4.780950  0.8269352\r\n [3,]  2.8380469 -3.0428326 -0.3699182 -3.293378 -3.7110898\r\n [4,]  3.1754542  3.7242294  3.9157424  2.718198 -4.3529266\r\n [5,]  9.5632903 -1.8136571 -4.8728094 -3.314955  5.7766428\r\n [6,] -2.0881404 -0.9438482 -0.7675157  8.599713  1.8890321\r\n [7,] -6.0757462 -4.4857163  1.0378154  4.554196  3.0534535\r\n [8,] -3.4308363 -4.6095457 -6.1005074 -1.808813  7.6329996\r\n [9,]  5.2042920  3.0195585  0.1056261  5.880083 -1.7904886\r\n[10,]  2.6312401  3.3628938 -0.0140932  1.224354  3.2001459\r\n\r\nC = A %*% B\r\ndet(C) == det(A %*% B)\r\n\r\n\r\n[1] TRUE\r\n\r\ndet(A + B) == (det(A) + det(B))\r\n\r\n\r\n[1] FALSE\r\n\r\nInversa\r\n\r\n\r\nA <- matrix(data = c(6, 2, 3, 2, 4, 2, 1, 1, 8), ncol = 3)\r\ndet(A)\r\n\r\n\r\n[1] 146\r\n\r\ninv(A)\r\n\r\n\r\n            [,1]        [,2]        [,3]\r\n[1,]  0.20547945 -0.09589041 -0.01369863\r\n[2,] -0.08904110  0.30821918 -0.02739726\r\n[3,] -0.05479452 -0.04109589  0.13698630\r\n\r\nDependencia Linear\r\n\r\n\r\nv1 <- c(1, -1, 0, 0)\r\nv2 <- c(0, 0, 1, 1)\r\nv3 <- c(-2, 2, 1, 1)\r\nv4 <- c(1, 0, 0, 0)\r\n\r\nA <- matrix(data = cbind(v1, v2, v3, v4), ncol = 4)\r\n# Se o determinante de A for 0, os vetores são linearmente dependentes\r\ndet(A)\r\n\r\n\r\n[1] 0\r\n\r\nv5 <- c(2, -3, 2, 2)\r\nAhat <- cbind(A, v5)\r\nAhat\r\n\r\n\r\n               v5\r\n[1,]  1 0 -2 1  2\r\n[2,] -1 0  2 0 -3\r\n[3,]  0 1  1 0  2\r\n[4,]  0 1  1 0  2\r\n\r\n# Como os postos são iguais (p = 3), o sistema é possivel.\r\n# Como o número de variáveis é maior que o posto (n > p), o sistema é indetemrinado.\r\n# Assim, v5 é combinação linear dos outros vetores.\r\nechelon(Ahat)\r\n\r\n\r\n              v5\r\n[1,] 1 0 -2 0  3\r\n[2,] 0 1  1 0  2\r\n[3,] 0 0  0 1 -1\r\n[4,] 0 0  0 0  0\r\n\r\nAutovalores\r\n\r\n\r\neigen(A)\r\n\r\n\r\neigen() decomposition\r\n$values\r\n[1]  2.2469796 -0.8019377  0.5549581  0.0000000\r\n\r\n$vectors\r\n           [,1]       [,2]       [,3]          [,4]\r\n[1,]  0.3913958 -0.2354615 -0.8346812 -8.164966e-01\r\n[2,] -0.6086042  0.7645385  0.1653188  4.082483e-01\r\n[3,] -0.4880626 -0.4242869 -0.3714681 -4.082483e-01\r\n[4,] -0.4880626 -0.4242869 -0.3714681  1.281975e-16\r\n\r\neigen(A)$vectors %>%\r\n  zapsmall(digits = 1)\r\n\r\n\r\n     [,1] [,2] [,3] [,4]\r\n[1,]  0.4 -0.2 -0.8 -0.8\r\n[2,] -0.6  0.8  0.2  0.4\r\n[3,] -0.5 -0.4 -0.4 -0.4\r\n[4,] -0.5 -0.4 -0.4  0.0\r\n\r\neigen(A)$values %>%\r\n  zapsmall(digits = 1)\r\n\r\n\r\n[1]  2.2 -0.8  0.6  0.0\r\n\r\nExercícios sobre estrutura de ontrole\r\nExercício 1\r\nElabore uma função que verifique que uma matriz é quadrada e que seja singular antes de calcular a sua inversa. Não atendendo a uma das condições, a função deverá mostrar uma mensagem alertando o problema. Além de pode usar a estrutura de conotrle if-else, há também uma função chamada ifelse() para processos condicionados curtos.\r\n\r\n\r\nA <- matrix(data = c(1, 5, 0, 0, 4, 2, 0, 0, 2), ncol = 3)\r\nB <- matrix(data = c(1, 5, 0, 0, 4, 2, 0, 0, 0), ncol = 3)\r\nC <- matrix(data = c(1, 5, 0, 0, 4, 2, 0, 0, 2), ncol = 2)\r\ndet(A)\r\n\r\n\r\n[1] 8\r\n\r\ndet(B)\r\n\r\n\r\n[1] 0\r\n\r\ndet(C)\r\n\r\n\r\nError in determinant.matrix(x, logarithm = TRUE, ...): 'x' must be a square matrix\r\n\r\ninversa <- function(A) {\r\n  \r\n  cond1 <- dim(A)[1] == dim(A)[2]\r\n\r\n  if (!cond1) {\r\n    stop(\"Matriz não quadrada\")\r\n  }\r\n  else\r\n    \r\n    cond2 <- det(A) != 0\r\n  \r\n    if (!cond2) {\r\n      stop(\"Matriz singular\")\r\n    }\r\n    else\r\n      matlib::inv(A)\r\n  \r\n}\r\n\r\ninversa(A)\r\n\r\n\r\n      [,1]  [,2] [,3]\r\n[1,]  1.00  0.00  0.0\r\n[2,] -1.25  0.25  0.0\r\n[3,]  1.25 -0.25  0.5\r\n\r\ninversa(B)\r\n\r\n\r\nError in inversa(B): Matriz singular\r\n\r\ninversa(C)\r\n\r\n\r\nError in inversa(C): Matriz não quadrada\r\n\r\nExercício 2\r\nTemos uma lista de n=100 pessoas, cujas notas de desempenho possuem uma média de 500 e um desvio padrão de 20. Com uma nota maior que 500, o candidato é considerado aprovado (“A”) e apto para o emprego, caso contrário, o seu status é de reprovado (“R”). Gere um vetor com as notas e a partir dele, usando a função ifelse(), gere um vetor com o resultado final para cada candidato (“A” ou “R”). O vetor com as notas pode ser produzido com a função rnorm().\r\n\r\n\r\nnotas <- rnorm(n = 100, mean = 500, sd = 20)\r\nnotas\r\n\r\n\r\n  [1] 495.9732 522.0435 499.6650 503.2358 540.4952 485.9261 519.2158\r\n  [8] 535.8097 478.7167 500.3527 492.2018 490.1833 479.0856 482.0758\r\n [15] 525.3877 511.8768 515.5127 531.1474 492.6920 516.3311 498.7873\r\n [22] 489.9724 518.5213 500.7388 478.6760 495.2309 529.9045 523.4432\r\n [29] 470.8459 501.9011 516.9533 467.5127 528.1713 489.1648 505.5733\r\n [36] 496.1205 531.5232 470.4890 497.1078 480.9359 508.1309 544.5852\r\n [43] 469.7101 498.7659 497.0546 530.8319 480.3629 509.9316 533.9390\r\n [50] 494.7853 485.8814 496.7764 510.0264 479.7292 532.2950 500.1128\r\n [57] 441.9020 477.8567 530.9513 480.4634 497.9699 500.8530 468.0656\r\n [64] 509.8193 508.4321 537.4781 520.6903 501.6362 498.3495 512.1215\r\n [71] 482.2516 502.1084 507.0575 511.0079 477.3134 529.2470 514.0423\r\n [78] 550.1422 462.1995 488.2037 465.7100 491.5800 506.2028 534.0514\r\n [85] 491.1323 476.0281 493.8524 512.4211 503.6380 526.3680 494.0218\r\n [92] 467.0356 519.0300 477.7375 512.3393 510.2699 507.3892 534.4779\r\n [99] 495.8771 473.7161\r\n\r\nresultado <- ifelse(test = notas > 500, yes = \"A\", no = \"R\")\r\nresultado\r\n\r\n\r\n  [1] \"R\" \"A\" \"R\" \"A\" \"A\" \"R\" \"A\" \"A\" \"R\" \"A\" \"R\" \"R\" \"R\" \"R\" \"A\" \"A\"\r\n [17] \"A\" \"A\" \"R\" \"A\" \"R\" \"R\" \"A\" \"A\" \"R\" \"R\" \"A\" \"A\" \"R\" \"A\" \"A\" \"R\"\r\n [33] \"A\" \"R\" \"A\" \"R\" \"A\" \"R\" \"R\" \"R\" \"A\" \"A\" \"R\" \"R\" \"R\" \"A\" \"R\" \"A\"\r\n [49] \"A\" \"R\" \"R\" \"R\" \"A\" \"R\" \"A\" \"A\" \"R\" \"R\" \"A\" \"R\" \"R\" \"A\" \"R\" \"A\"\r\n [65] \"A\" \"A\" \"A\" \"A\" \"R\" \"A\" \"R\" \"A\" \"A\" \"A\" \"R\" \"A\" \"A\" \"A\" \"R\" \"R\"\r\n [81] \"R\" \"R\" \"A\" \"A\" \"R\" \"R\" \"R\" \"A\" \"A\" \"A\" \"R\" \"R\" \"A\" \"R\" \"A\" \"A\"\r\n [97] \"A\" \"A\" \"R\" \"R\"\r\n\r\nExercício 3\r\nElabore uma função que calcule o cofator Aij de uma matriz A de ordem n.\r\n\r\n\r\nA <- matrix(data = c(1, 5, 0, 0, 4, 2, 0, 0, 2), ncol = 3)\r\nA\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    1    0    0\r\n[2,]    5    4    0\r\n[3,]    0    2    2\r\n\r\n\r\n\r\nmcof <- function(A) {\r\n  C <- matrix(nrow = dim(A)[1], ncol = dim(A)[2])\r\n  \r\n  for (i in 1:dim(A)[1]) {\r\n    for (j in 1:dim(A)[2]) {\r\n      B <- A[-i, -j]\r\n      C[i, j] <- det(B)*(-1)^outer(X = i, Y = j, FUN = \"+\")\r\n    }\r\n  }\r\n  return(C)\r\n}\r\nmcof(A)\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    8  -10   10\r\n[2,]    0    2   -2\r\n[3,]    0    0    4\r\n\r\n\r\n\r\nmcof <- function(A) {\r\n  C <- matrix(nrow = dim(A)[1], ncol = dim(A)[2])\r\n  \r\n  for (i in 1:dim(A)[1]) {\r\n    for (j in 1:dim(A)[2]) {\r\n      B <- A[-i, -j]\r\n      C[i, j] <- det(B)*(-1)^(i + j)\r\n    }\r\n  }\r\n  return(C)\r\n\r\n}\r\nmcof(A)\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    8  -10   10\r\n[2,]    0    2   -2\r\n[3,]    0    0    4\r\n\r\n\r\n\r\nmcof2 <- function(A) {\r\n  C <- matrix(nrow = dim(A)[1], ncol = dim(A)[2])\r\n  \r\n  for (i in 1:dim(A)[1]) {\r\n    for (j in 1:dim(A)[2]) {\r\n      C[i, j] <- cofactor(A, i, j)\r\n    }\r\n  }\r\n  return(C)\r\n}\r\nmcof2(A)\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    8  -10   10\r\n[2,]    0    2   -2\r\n[3,]    0    0    4\r\n\r\nExercícios Semana 3\r\nExercício 4\r\n\r\n\r\nA <- matrix(data = c(1, 5, 0, 0, 4, 2, 0, 0, 2), ncol = 3)\r\nA\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    1    0    0\r\n[2,]    5    4    0\r\n[3,]    0    2    2\r\n\r\nCalcule o determinante de A:\r\n\r\n\r\ndet(A)\r\n\r\n\r\n[1] 8\r\n\r\nObtenha a diagonal de A e calcule o produto dos seus elementos, usando a função prod().\r\n\r\n\r\ndiag(A)\r\n\r\n\r\n[1] 1 4 2\r\n\r\nprod(diag(A))\r\n\r\n\r\n[1] 8\r\n\r\nCompare os resultados de A) e B)\r\n\r\n\r\nc(det(A), prod(diag(A)))\r\n\r\n\r\n[1] 8 8\r\n\r\nPodemos afirmar que A é inversível?\r\n\r\nSim. Pois \\(det(A) \\ne 0\\)\r\n\r\n\r\ninv(A)\r\n\r\n\r\n      [,1]  [,2] [,3]\r\n[1,]  1.00  0.00  0.0\r\n[2,] -1.25  0.25  0.0\r\n[3,]  1.25 -0.25  0.5\r\n\r\nExercício 5\r\nGere duas matrizes de ordem n = 10, com valores inteiros aleatorios de distribuição uniforme no intervalo [−10, 10]. Verifique o teorema de Binet (a falsidade da propriedade distributiva da soma para o determinante de matrizes).\r\n\r\n\r\nA <- matrix(data = runif(n = 100, min = -10, max = 10), ncol = 10)\r\nB <- matrix(data = runif(n = 100, min = -10, max = 10), ncol = 10)\r\n\r\ndet(A)\r\n\r\n\r\n[1] -11825619308\r\n\r\ndet(B)\r\n\r\n\r\n[1] 23544437382\r\n\r\ndet(A + B)\r\n\r\n\r\n[1] -4.60806e+11\r\n\r\ndet(A + B) == (det(A) + det(B))\r\n\r\n\r\n[1] FALSE\r\n\r\nExercício 6\r\nDetermine os autovalores e autovetores das matrizes a seguir:\r\n\r\n\r\n\r\nA <- matrix(data = c(3, 0, 0, -3, 3, 0, -4, 5, -1), ncol = 3)\r\nA\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    3   -3   -4\r\n[2,]    0    3    5\r\n[3,]    0    0   -1\r\n\r\neigen(A)\r\n\r\n\r\neigen() decomposition\r\n$values\r\n[1]  3  3 -1\r\n\r\n$vectors\r\n     [,1]         [,2]        [,3]\r\n[1,]    1 1.000000e+00  0.03901372\r\n[2,]    0 2.220446e-16 -0.78027431\r\n[3,]    0 0.000000e+00  0.62421945\r\n\r\ncbind(eigen(A)$values, diag(A))\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    3    3\r\n[2,]    3    3\r\n[3,]   -1   -1\r\n\r\nCompare os autovalores obtidos com a diagonal principal da matriz triangular superior. Por que acontece o observado?\r\nR: Porque a matriz é triangular, portanto o produto da diagonal princial é o único termo do determinante que não se anula.\r\n\r\n\r\n\r\nA <- matrix(data = c(-1, 2, 2, -4, -7, -4, 14, 14, 11), ncol = 3)\r\nA\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]   -1   -4   14\r\n[2,]    2   -7   14\r\n[3,]    2   -4   11\r\n\r\neigen(A)\r\n\r\n\r\neigen() decomposition\r\n$values\r\n[1]  9 -3 -3\r\n\r\n$vectors\r\n          [,1]       [,2]        [,3]\r\n[1,] 0.5773503 -0.9622504  0.09350413\r\n[2,] 0.5773503  0.1924501 -0.95370329\r\n[3,] 0.5773503  0.1924501 -0.28584439\r\n\r\ncbind(eigen(A)$values, diag(A))\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    9   -1\r\n[2,]   -3   -7\r\n[3,]   -3   11\r\n\r\nC )\r\n\r\n\r\nA <- matrix(data = c(1, -1, 1, 0, 0, 1, 2, 1, 2), ncol = 3)\r\nA\r\n\r\n\r\n     [,1] [,2] [,3]\r\n[1,]    1    0    2\r\n[2,]   -1    0    1\r\n[3,]    1    1    2\r\n\r\neigen(A)\r\n\r\n\r\neigen() decomposition\r\n$values\r\n[1]  3 -1  1\r\n\r\n$vectors\r\n             [,1]       [,2]          [,3]\r\n[1,] 7.071068e-01  0.4082483  7.071068e-01\r\n[2,] 2.840404e-16  0.8164966 -7.071068e-01\r\n[3,] 7.071068e-01 -0.4082483 -1.727306e-16\r\n\r\ncbind(eigen(A)$values, diag(A))\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    3    1\r\n[2,]   -1    0\r\n[3,]    1    2\r\n\r\n\r\n\r\n\r\nA <- matrix(data = c(3, 0, 0, -3, 3, 0, -4, 5, -1), ncol = 3)\r\nB <- matrix(data = c(-1, 2, 2, -4, -7, -4, 14, 14, 11), ncol = 3)\r\nC <- matrix(data = c(1, -1, 1, 0, 0, 1, 2, 1, 2), ncol = 3)\r\n\r\navecA <- eigen(A)$vector\r\navecB <- eigen(B)$vector\r\navecC <- eigen(C)$vector\r\n\r\navecA\r\n\r\n\r\n     [,1]         [,2]        [,3]\r\n[1,]    1 1.000000e+00  0.03901372\r\n[2,]    0 2.220446e-16 -0.78027431\r\n[3,]    0 0.000000e+00  0.62421945\r\n\r\ndet(avecA)\r\n\r\n\r\n[1] 1.386046e-16\r\n\r\navecB\r\n\r\n\r\n          [,1]       [,2]        [,3]\r\n[1,] 0.5773503 -0.9622504  0.09350413\r\n[2,] 0.5773503  0.1924501 -0.95370329\r\n[3,] 0.5773503  0.1924501 -0.28584439\r\n\r\ndet(avecB)\r\n\r\n\r\n[1] 0.4452393\r\n\r\navecC\r\n\r\n\r\n             [,1]       [,2]          [,3]\r\n[1,] 7.071068e-01  0.4082483  7.071068e-01\r\n[2,] 2.840404e-16  0.8164966 -7.071068e-01\r\n[3,] 7.071068e-01 -0.4082483 -1.727306e-16\r\n\r\ndet(avecC)\r\n\r\n\r\n[1] -0.8164966\r\n\r\nOs determinantes são diferentes de 0, portanto os autovetores são linearmente independentes.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-06-17T11:03:18-03:00"
    },
    {
      "path": "cobweb.html",
      "title": "Cobweb",
      "description": "Essa aula estuda o modelo de Cobweb e Expectativas adaptativas.\n",
      "author": [
        {
          "name": "Rafael Peixoto",
          "url": {}
        }
      ],
      "date": "04-23-2021",
      "contents": "\r\n\r\nContents\r\nCobweb\r\nExpectativas Adaptativas\r\nExercícios\r\n\r\n\r\n\r\nd-article p {\r\n  text-align: justify;\r\n  font-size: 16px;\r\n}\r\n\r\nd-article p code {\r\n  background: rgba(236, 236, 236, 0.8);\r\n}\r\n\r\nd-article div.sourceCode {\r\n  overflow: auto !important;\r\n}\r\n\r\nCobweb\r\nSe trata de um modelo cássico de oferta e demanda baseado nas seguintes hipóteses:\r\nFunções lineares;\r\nA oferta reage ao preço com um atraso de um período: a produção requer de um período fixo de tempo (agricultura);\r\nOs produtores acreditam que o preço se manterá no período seguinte e assim, a nova “safra” de produção será iniciada a partir desse preço:\r\n\\[\r\nS_t = a_1 + b_1 p_{t-1}\r\n\\]\r\nA demanda depende do preço atual:\r\n\\[\r\nD_t = a + b p_t\r\n\\]\r\nMarket clearing: a cada período o mercado determina o preço tal que a demanda absorva o produto ofertado:\r\n\\[\r\nD_t = S_t\r\n\\]\r\nCom isso, substituindo as duas primeiras equações na terceira, chegamos a uma equação emdiferença de primeira ordem em p:\r\n\\[\r\na + b p_t = a_1 + b_1 p_{t-1}\r\n\\]\r\nReescrevendo essa equação nos termos que estamos utilizando aqui (\\(p_t = y_t\\)):\r\n\\[\r\ny_{t+1} = \\frac{b_1}{b} \\times y_t + \\frac{a_1 - a}{b}\r\n\\]\r\nEssa equação possui a mesma forma que a equação não-homogêna (sem trend) que vimos anteriormente:\r\n\\[\r\ny_{t+1} = - a_0 \\times y_t + b\r\n\\]\r\nUtilizaremos, portanto, a função orbita:\r\n\r\n\r\n# Função que calcula a orbita de cada Eq em diferença\r\norbita <- function(a0, y0, b, t) {\r\n  \r\n  out <- vector(mode = \"numeric\", length = t)\r\n  out[1] <- y0\r\n  for (i in 1:t) {\r\n    out[i+1] <- ((-a0*out[i]) + b)\r\n  }\r\n  \r\n  return(out[-1])\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Exemplo\r\norbita(a0 = 0.8, y0 = 1, b = 2, t = 20) %>%\r\n  ts() %>%\r\n  autoplot()\r\n\r\n\r\n\r\n\r\nVoltando ao modelo de Cobweb, vejamos um exemplo com os seguintes parâmetros:\r\n\r\n\r\na <- 0.2\r\nb <- -1\r\na1 <- 0.1\r\nb1 <- 0.5\r\np0 <- 1\r\nt <- 20\r\n\r\n\r\n\r\n\r\n\r\n# Plot\r\norbita(a0 = -(b1/b), y0 = p0, b = (a1 - a)/b, t = t) %>%\r\n  ts() %>%\r\n  autoplot()\r\n\r\n\r\n\r\n\r\nLembrando que estamos considerando \\(p_t = y_t\\), portanto esse gráfico diz respeito ao comportamento dos preços. Podemos também analisar o comportamento da oferta e da demanda, incluindo essas na função junto ao preço:\r\n\r\n\r\ncobweb <- function(a, b, a1, b1, p0, t) {\r\n  \r\n  p1 <- (b1/b)*p0 + (a1 - a)/b\r\n  \r\n  p <- vector(mode = \"numeric\", length = t)\r\n  p[1] <- p1\r\n  D <- vector(mode = \"numeric\", length = t)\r\n  D[1] <- a + b*p[1]\r\n  S <- vector(mode = \"numeric\", length = t)\r\n  S[1] <- a1 + b1*p0\r\n  \r\n  for (i in 1:t) {\r\n    p[i+1] <- (b1/b)*p[i] + (a1 - a)/b\r\n    D[i+1] <- a + b*p[i+1]\r\n    S[i+1] <- a1 + b1*p[i]\r\n  }\r\n  \r\n  cobweb <- cbind(p, D, S)\r\n  colnames(cobweb) <- c(\"Preço\", \"Demanda\", \"Oferta\")\r\n  \r\n  return(cobweb)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Exemplo\r\ncobweb(a = a, b = b, a1 = a1, b1 = b1, p0 = p0, t = t) %>%\r\n  ts() %>%\r\n  autoplot()\r\n\r\n\r\n\r\n\r\nAjustando o gráfico:\r\n\r\n\r\n# Exemplo\r\ncobweb(a = a, b = b, a1 = a1, b1 = b1, p0 = p0, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n    ggtitle(\"Modelo Cobweb\") + \r\n    xlab(\"t\") +\r\n    ylab(\"\") +\r\n    theme_hc() +\r\n    theme(plot.title = element_text(size = 15, hjust = 0.5, colour = \"black\"),\r\n          plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n          legend.position = \"top\") +\r\n    scale_colour_discrete(\"\") +\r\n    scale_x_continuous(breaks = seq(from = 0, to = 20, by = 2)) +\r\n    scale_y_continuous(breaks = seq(from = -1, to = 1, by = 0.2))\r\n\r\n\r\n\r\n\r\nNo gráfico com as três séries juntas, como a demanda e a oferta são iguais (pressuposto do modelo), elas se sobepõem.\r\nExpectativas Adaptativas\r\nNeste caso, como já visto, realizamos um refinamento do modelo anterior. Os produtores têm uma expectativa de preço \\(p^e\\), a partir da qual determinam os seus níveis de produção:\r\n\\[\r\nS_t = a_1 + b_1 \\times p_t^e\r\n\\]\r\nEstas expectativas são ajustadas a cada período de acordo com a discrepância entre o valor observado (realizado) e o valor esperado, com regra de variação dada por:\r\n\\[\r\np_t^e = \\beta p_{t-1} + (1 - \\beta) p_{t-1}^e \r\n\\]\r\nVimos que a solução analítica para \\(p^e_t\\) não é arbitrária. Mas, podemos analisar a dinâmica o modelo por simulação, contemplando assim, a todas as variáveis na análise numérica.\r\nPAra implementar esse modelo, basta adicionarmos essa equação à função cobweb que ja havíamos criado (além de modificar a equação do preço):\r\n\r\n\r\nexpec_adap <- function(a, b, a1, b1, p0, pe0, beta, t) {\r\n  \r\n  pe <- vector(mode = \"numeric\", length = t)\r\n  pe[1] <- pe0\r\n  \r\n  p1 <- (1 + beta*(b1/b - 1))*p0 + (a1 - a)*beta/b\r\n  \r\n  p <- vector(mode = \"numeric\", length = t)\r\n  p[1] <- p1\r\n  D <- vector(mode = \"numeric\", length = t)\r\n  D[1] <- a + b*p[1]\r\n  S <- vector(mode = \"numeric\", length = t)\r\n  S[1] <- a1 + b1*p0\r\n  \r\n  for (i in 1:t) {\r\n    p[i+1] <- (1 + beta*(b1/b - 1))*p[i] + (a1 - a)*beta/b\r\n    pe[i+1] <- beta*p[i] + (1-beta)*pe[i]\r\n    D[i+1] <- a + b*p[i+1]\r\n    S[i+1] <- a1 + b1*pe[i+1]\r\n  }\r\n  \r\n  expec_adap <- cbind(p, pe, D, S)\r\n  colnames(expec_adap) <- c(\"Preço\", \"Exp Preço\", \"Demanda\", \"Oferta\")\r\n  \r\n  return(expec_adap)\r\n  \r\n}\r\n\r\n\r\n\r\nVejamos um exemplo com os seguintes parâmetros:\r\n\r\n\r\na <- 0.2\r\nb <- -1\r\na1 <- 0.1\r\nb1 <- 0.5\r\np0 <- 2\r\nt <- 10\r\npe0 <- 3\r\nbeta <- 0.6\r\n\r\n\r\n\r\n\r\n\r\n# Exemplo\r\nexpec_adap(a = a, b = b, a1 = a1, b1 = b1, p0 = p0, pe0 = pe0, beta = beta, t = t) %>%\r\n  ts() %>%\r\n  autoplot()\r\n\r\n\r\n\r\n\r\nAjustando o gráfico:\r\n\r\n\r\nexpec_adap(a = a, b = b, a1 = a1, b1 = b1, p0 = p0, pe0 = pe0, beta = beta, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n    ggtitle(\"Exepctativas Adaptativas\") + \r\n    xlab(\"t\") +\r\n    ylab(\"\") +\r\n    theme_hc() +\r\n    theme(plot.title = element_text(size = 15, hjust = 0.5, colour = \"black\"),\r\n          plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n          legend.position = \"top\") +\r\n    scale_colour_discrete(\"\") +\r\n    scale_x_continuous(breaks = seq(from = 0, to = t, by = 1)) +\r\n    scale_y_continuous(breaks = seq(from = -1, to = 3, by = 0.5))\r\n\r\n\r\n\r\n\r\nExercícios\r\n1.\r\nSimule o modelo Cobweb considerando o preço normal. Pode por exemplo, testar os valores dos exercícios numéricos do Shone e do Gandolfo.\r\nComo, nesse modelo, o \\(a_0\\) é representado por \\(- \\frac{b_1}{b}\\), essa fração precisa ser menor, em módulo, que 1, para que o sistema não seja explosivo:\r\n\r\n\r\ncobweb(a = 2, b = -2, a1 = 1, b1 = 1.8, p0 = 4, t = 50) %>%\r\n  ts() %>%\r\n  autoplot(facets = F)\r\n\r\n\r\n\r\n\r\n\r\n\r\ncobweb(a = 2, b = -2, a1 = 1, b1 = 2, p0 = 4, t = 50) %>%\r\n  ts() %>%\r\n  autoplot(facets = F)\r\n\r\n\r\n\r\n\r\n\r\n\r\ncobweb(a = 2, b = -2, a1 = 1, b1 = 2.2, p0 = 4, t = 50) %>%\r\n  ts() %>%\r\n  autoplot(facets = F)\r\n\r\n\r\n\r\n\r\n2.\r\nSe sugere analisar as simulações com outros conjuntos de parâmetros e inicializações.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-06-17T11:03:29-03:00"
    },
    {
      "path": "diferencial.html",
      "title": "Equações Diferenciais",
      "description": "Essa aula estuda Equações Diferenciais.\n",
      "author": [
        {
          "name": "Rafael Peixoto",
          "url": {}
        }
      ],
      "date": "04-30-2021",
      "contents": "\r\n\r\nContents\r\nEquação de Bernoulli\r\nEquação de Ordem 1\r\nEquação de Ordem 2\r\nSistema linear de 2 × 2\r\nSistema não linear de 3 × 3\r\n\r\n\r\n\r\n\r\n\r\nvar btn = $('#button');\r\n\r\n$(window).scroll(function() {\r\n  if ($(window).scrollTop() > 300) {\r\n    btn.addClass('show');\r\n  } else {\r\n    btn.removeClass('show');\r\n  }\r\n});\r\n\r\nbtn.on('click', function(e) {\r\n  e.preventDefault();\r\n  $('html, body').animate({scrollTop:0}, '300');\r\n});\r\n\r\n\r\n\r\n\r\n#button {\r\n  display: inline-block;\r\n  background-color: #e8eeeb;\r\n  width: 50px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-radius: 4px;\r\n  position: fixed;\r\n  bottom: 30px;\r\n  right: 30px;\r\n  transition: background-color .3s, \r\n    opacity .5s, visibility .5s;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  z-index: 1000;\r\n}\r\n#button::after {\r\n  content: \"\\f077\";\r\n  font-family: FontAwesome;\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  font-size: 2em;\r\n  line-height: 50px;\r\n  color: #fff;\r\n}\r\n#button:hover {\r\n  cursor: pointer;\r\n  background-color: #333;\r\n}\r\n#button:active {\r\n  background-color: #555;\r\n}\r\n#button.show {\r\n  opacity: 0.5;\r\n  visibility: visible;\r\n}\r\n\r\n\r\n\r\n\r\nd-article p {\r\n  text-align: justify;\r\n  font-size: 16px;\r\n}\r\n\r\nd-article p code {\r\n  background: rgba(230, 230, 230, 1);\r\n}\r\n\r\nspan.math.inline {\r\n  background: rgba(230, 230, 230, 1);\r\n  font-size: 15px;\r\n}\r\n\r\nd-article div.sourceCode {\r\n  overflow: auto !important;\r\n}\r\n\r\n\r\nEquação de Bernoulli\r\nSeja a equação diferencial:\r\n\\[\r\n\\frac{dy}{dt} = r \\cdot y(1- \\frac{y}{k})\r\n\\]\r\nComo se observa, se trata de uma equação diferencial não linear. Contudo, equações de Bernoulli possuem uma forma analítica que se presta para uma transformação de variáveis, visando a obtenção de uma equação linear (veremos mais adiante).\r\nA solução explícita é dada por:\r\n\\[\\begin{equation}\r\n  y = \\dfrac{K \\cdot y_0e^{rt}}{K+y_0(e^{rt}-1)}\r\n\\end{equation}\\]\r\nPodemos criar uma função para essa equação:\r\n\r\n\r\nmodel <- function(t, r, K, y0) {\r\n  \r\n  y <- K * y0 * exp(r * t) / (K + y0 * (exp(r * t) - 1))\r\n  \r\n  return(y)\r\n  \r\n}\r\n\r\n\r\n\r\nDados os parâmetros e condições inicias:\r\n\r\n\r\nt <- seq(0, 150, 1)\r\nr <- 0.1\r\nK <- 10\r\ny0 <- 0.1\r\n\r\n\r\n\r\nPodemos simular:\r\n\r\n\r\nmodel(t = t, r = r, K = K, y0 = y0) %>%\r\n  ts() %>%\r\n  autoplot() +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 150, 10)) +\r\n  scale_y_continuous(breaks = seq(0, 10, 2))\r\n\r\n\r\n\r\n\r\nImplementaremos primeiro a solução numérica para analisar o comportamento da série ao longo do tempo. A função ode do pacote deSolve exige os seguintes parâmetros, que precisamos fornecer:\r\n\r\n\r\nargs(ode)\r\n\r\n\r\nfunction (y, times, func, parms, method = c(\"lsoda\", \"lsode\", \r\n    \"lsodes\", \"lsodar\", \"vode\", \"daspk\", \"euler\", \"rk4\", \"ode23\", \r\n    \"ode45\", \"radau\", \"bdf\", \"bdf_d\", \"adams\", \"impAdams\", \"impAdams_d\", \r\n    \"iteration\"), ...) \r\nNULL\r\n\r\nVamos começar criando uma função para a equação diferencial. Como a funcção ode trabalha com listas, vamos retornar sempre listas.\r\n\r\n\r\nmodel <- function(t, y, params) {\r\n  \r\n  r <- params[\"r\"]\r\n  k <- params[\"k\"]\r\n  \r\n  dy <- r * y * (1 - y / k)\r\n  \r\n  return(list(dy))\r\n  \r\n}\r\n\r\n\r\n\r\nParâmetros e condições inicias:\r\n\r\n\r\nparams <- c(r = 0.1, k = 10)\r\ny <- c(y = 0.1)\r\nt <- seq(0, 150, 1)\r\n\r\n\r\n\r\nAplicando a ode:\r\n\r\n\r\node(y = y, times = t, func = model, parms = params) %>%\r\n  head() \r\n\r\n\r\n     time         y\r\n[1,]    0 0.1000000\r\n[2,]    1 0.1104022\r\n[3,]    2 0.1218708\r\n[4,]    3 0.1345160\r\n[5,]    4 0.1484538\r\n[6,]    5 0.1638111\r\n\r\n\r\n\r\node(y = y, times = t, func = model, parms = params)[,2] %>%\r\n  ts() %>%\r\n  autoplot() +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 150, 10)) +\r\n  scale_y_continuous(breaks = seq(0, 10, 2))\r\n\r\n\r\n\r\n\r\nEquação de Ordem 1\r\nA simulação de uma equação diferencial de ordem 1 também faz uso da função ode pois não tempos como ter o cálculo exato das derivadas, mesmo sendo contínuas.\r\nSeja a equação:\r\n\\[\r\ny' -3y = 9\r\n\\]\r\nAssim como no caso anterior, optamos pelos seguintes passos:\r\nEspecificamos o modelo (a equação que define a primeira derivada: \\(y' = 3y + 9\\));\r\nIdentificamos os parâmetros e condições iniciais;\r\nResolvemos a equação com a função ode.\r\n(1)\r\n\r\n\r\nmodel <- function(t, y, params) {\r\n  \r\n  a0 <- params[\"a0\"]\r\n  g <- params[\"g\"]\r\n  \r\n  dy <- -a0 * y + g\r\n  \r\n  return(list(dy))\r\n  \r\n}\r\n\r\n\r\n\r\n(2)\r\n\r\n\r\nparams <- c(a0 = -3, g = 9)\r\ny <- c(y = 0.1)\r\nt <- seq(0, 10, 0.1)\r\n\r\n\r\n\r\n(3)\r\n\r\n\r\node(y = y, times = t, func = model, parms = params)[,2] %>%\r\n  ts(frequency = 10) %>%\r\n  autoplot() +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 10, 1))\r\n\r\n\r\n\r\n\r\nVemos que a série apresenta uma trajetória explosiva. Analisando o seu coeficiente, sabemos que, ao \\(a0 = −3 < 0\\), a solução homogênea \\(y^h(t) = A \\cdot exp^{3t}\\) apresenta um comportamento explosivo/instável no longo prazo. O estado estacionário se dá quando \\(y_0 = 0\\). Logo, \\(0 − 3y^∗ = 9\\). Portanto \\(y^∗= −3\\) será um repulsor.\r\nEquação de Ordem 2\r\nOs sistemas lineares (ou não lineares) segue o mesmo formato adotado para o caso de equações diferenciais. Temos duas alternativas:\r\nA solução analítica (ou matemática);\r\nA resolução numérica por métodos numéricos: neste caso, usamos o pacote deSolve, que requer que sigamos os passos seguintes:\r\nDefinimos uma função que especifique as equações para cada taxa de variação;\r\nInicializamos os parâmetros da simulação e demais vetores, incluindo o período de tempo;\r\nFazemos uso do comando ode para a resolução numérica.\r\n\r\nSistema linear de 2 × 2\r\nSeja o sistema homogêneo de duas variáveis \\(Z' = A \\cdot Z\\), cuja a matriz de coeficientes é dada por:\r\n\\[\r\nA = \r\n  \\begin{bmatrix}\r\n    1 & -1 \\\\\r\n    5 & -3\r\n  \\end{bmatrix};\r\n  \\qquad\r\nZ(0) = \r\n  \\begin{bmatrix}\r\n    x(0) \\\\\r\n    y(0)\r\n  \\end{bmatrix}\r\n  =\r\n  \\begin{bmatrix}\r\n    1 \\\\\r\n    2\r\n  \\end{bmatrix}\r\n\\]\r\nAssim como no caso anterior, optamos pelos seguintes passos:\r\nEspecificamos o modelo;\r\nIdentificamos os parâmetros e condições iniciais;\r\nResolvemos a equação com a função ode.\r\n(1)\r\n\r\n\r\nmodel <- function(t, y, params) {\r\n  \r\n  a <- params[\"a\"]\r\n  b <- params[\"b\"]\r\n  c <- params[\"c\"]\r\n  d <- params[\"d\"]\r\n  \r\n  dy1 <- a * y[1] + b * y[2]\r\n  dy2 <- c * y[1] + d * y[2]\r\n  \r\n  return(list(c(dy1, dy2)))\r\n  \r\n}\r\n\r\n\r\n\r\n(2)\r\n\r\n\r\nparams <- c(a = 1, b = -1, c = 5, d = -3)\r\ny <- c(y1 = 1, y2 = 2)\r\nt <- seq(0, 20, 0.01)\r\n\r\n\r\n\r\n(3)\r\n\r\n\r\node(y = y, times = t, func = model, parms = params)[,-1] %>%\r\n  ts(frequency = 100) %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_colour_discrete(\"\") +\r\n  theme(legend.position = \"top\") +\r\n  scale_x_continuous(breaks = seq(0, 20, 2)) +\r\n  scale_y_continuous(breaks = seq(-1, 2, 0.2), limits = c(-0.2,2))\r\n\r\n\r\n\r\n\r\nComo observamos, tudo indica que o sistema é estável pois converge para o steady state \\((y^∗_1, y^∗_2) = (0, 0)\\). Para confirmar a conjetura, podemos analisar os autovalores da matriz de coeficientes:\r\n\r\n\r\nA <- matrix(data = params, nrow = 2)\r\nr <- eigen(A)\r\nlambda <- r$values\r\nlambda\r\n\r\n\r\n[1] -1+1i -1-1i\r\n\r\nTemos no caso, dois autovalores complexos, com uma parte real igual a \\(h = −1\\). Por \\(h < 0\\), temos que as tratejórias das variáveis \\(y_1\\) e \\(y_2\\) serão convergentes no longo prazo. A presença de raízes complexas explica também o comportamento cíclico na primeira parte da solução numérica. Veja que, sendo o sistema não homogêneo, nada muda quanto aos passos a seguir para a obtenção da solução numérica. Basta continuar a implementar a função das derivadas considerando na especificação os termos independentes. Contudo, é importante considerar a natureza do \\(g(t)\\) para estarmos alertas quanto à forma do estado estaciónario (fixo ou móvel).\r\nSistema não linear de 3 × 3\r\nComo exemplo, podemos usar o sistema de Rossler, que é dado pelas seguintes equações:\r\n\\[\r\n\\begin{align}\r\n& y'_1 = −y_2 − y_3 \\\\\r\n& y'_2 = y_1 + a ∗ y_2 \\\\\r\n& y'_3 = b + y_3 ∗ (y_1 − c)\r\n\\end{align}\r\n\\]\r\nPara a condição inicial \\(y_1(0) = y_2(0) = y_3(0) = 1\\); com parâmetros \\(a = −0.2\\), \\(b = 0.2\\), \\(c = 5\\) e \\(t ∈ [0, 100]\\). Seguindo a nossa receita:\r\n(1)\r\n\r\n\r\nmodel <- function(t, y, params) {\r\n  \r\n  a <- params[\"a\"]\r\n  b <- params[\"b\"]\r\n  c <- params[\"c\"]\r\n\r\n  dy1 <- -y[2] -y[3]\r\n  dy2 <- y[1] + a * y[2]\r\n  dy3 <- b + y[3] * (y[1] - c)\r\n  \r\n  return(list(c(dy1, dy2, dy3)))\r\n  \r\n}\r\n\r\n\r\n\r\n(2)\r\n\r\n\r\nparams <- c(a = 0.2, b = 0.2, c = 5)\r\ny <- c(y1 = 1, y2 = 1.5, y3 = 1)\r\nt <- seq(0, 100, 0.1)\r\n\r\n\r\n\r\n(3)\r\n\r\n\r\node(y = y, times = t, func = model, parms = params)[,-1] %>%\r\n  ts(frequency = 10) %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_colour_discrete(\"\") +\r\n  theme(legend.position = \"top\") +\r\n  scale_x_continuous(breaks = seq(0, 100, 10)) +\r\n  scale_y_continuous(breaks = seq(-10, 20, 5))\r\n\r\n\r\n\r\n\r\nNo momento, podemos apenas analisar as características observáveis do sistema, que nos aponta para ciclos nas variáveis. Mas por se tratar de um sistema não linear, não temos mais condição de analisar as raízes (ou autovalores) de uma matriz de coeficientes. Futuramente, poderemos fazer algo similar a partir de análises locais via aproximação linear. Adicionalmente, um gráfico comum elaborado neste caso é o gráfico em 3 dimensões.\r\n\r\n\r\nplot_ly(data = data.frame(ode(y = y, times = t, func = model, parms = params)[,-1]), \r\n        x = ~y1, y = ~y2, z = ~y3, \r\n        type = 'scatter3d', mode = 'lines')\r\n\r\n\r\n\r\n{\"x\":{\"visdat\":{\"50b82d17439c\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"50b82d17439c\",\"attrs\":{\"50b82d17439c\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"lines\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"y1\"},\"yaxis\":{\"title\":\"y2\"},\"zaxis\":{\"title\":\"y3\"}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"showSendToCloud\":false},\"data\":[{\"x\":[1,0.760872489252377,0.537886827926226,0.324598096792709,0.116854708776278,-0.0876602964646858,-0.289879180177372,-0.489735552151753,-0.686465207258098,-0.878839938364745,-1.06533768361886,-1.24426643753918,-1.41385358194971,-1.5723107708318,-1.71788199595685,-1.84888038623773,-1.96371756304194,-2.06092798947469,-2.13918966788061,-2.19734251065504,-2.2344043993913,-2.24958528003095,-2.24229940419225,-2.21217553557687,-2.15906503027522,-2.08304858483028,-1.98443926715514,-1.86378467121997,-1.72186607977356,-1.5596953992281,-1.37850968345132,-1.1797633067012,-0.965117725271553,-0.736429022206138,-0.495733180871422,-0.24522924073779,0.0127395153371822,0.275706219704523,0.541102789094459,0.806283856728137,1.06855190395911,1.32518355670845,1.57345676361968,1.81067867484665,2.03421392451785,2.24151309322736,2.43014115449378,2.59780557476548,2.74238384133475,2.86195008964788,2.95480048146067,3.0194769332968,3.05478874301451,3.05983157404655,3.0340032489997,2.97701577700952,2.88890311306733,2.77002429061257,2.62106180649089,2.44301544303907,2.23719204138889,2.00519201984517,1.74889358438887,1.47043554785463,1.17219944899754,0.856791290796606,0.527022797067452,0.185891657058996,-0.163439344593187,-0.517666691518184,-0.873371364268689,-1.22704777020816,-1.57513561536038,-1.91405339010926,-2.24023463422414,-2.55016394170783,-2.84041395216825,-3.10768301782937,-3.34883068644789,-3.56091437136267,-3.74122305623297,-3.88730986084128,-3.99702201286189,-4.06853016947678,-4.10035282069683,-4.09137767375219,-4.04088153551905,-3.94854542543929,-3.81446617692389,-3.63916388845235,-3.42358557128665,-3.16910436078614,-2.87751445787736,-2.55102205668175,-2.1922312146969,-1.80412631334444,-1.39004998025098,-0.953677031654912,-0.49898478236377,-0.0302197670297655,0.448138749911862,0.931418101279051,1.41479404138171,1.89333463645833,2.36204572683662,2.81591753064199,3.24997190223024,3.65930980641969,4.03915868237162,4.38491951297574,4.69221370030139,4.95693025082319,5.17527431548597,5.34381877305803,5.45956114535055,5.51998835964668,5.52315138465819,5.46775035554325,5.35322515409754,5.1798424319755,4.94876253150283,4.66206429249044,4.3227064869785,3.93441355024348,3.50149376201965,3.0286184016703,2.52060864792111,1.98227948460803,1.4183731842203,0.833584789372489,0.232652644797719,-0.379530402718509,-0.997826643752701,-1.61681159591943,-2.23078662006273,-2.83383549093447,-3.41990713997441,-3.98290830887964,-4.51679512315982,-5.01565768754181,-5.47379816202893,-5.88580226005465,-6.24660485899678,-6.55154722822639,-6.79643661434625,-6.97760492282115,-7.09194952221683,-7.13697670843253,-7.11084193237399,-7.01238152649933,-6.84113818731288,-6.59737951311313,-6.28211151830173,-5.89708283599962,-5.44478438245158,-4.92843188424075,-4.35195442253574,-3.71997850896959,-3.03778412449944,-2.31126682718282,-1.54689699356299,-0.751665103981319,0.066972717522259,0.90115749112456,1.74269017496656,2.58309851748856,3.41370056996259,4.22566334481917,5.01005152251655,5.75785221492054,6.45996407194727,7.10712160754488,7.68971061555667,8.19740559746277,8.61851975012555,8.93892323106455,9.14038882699043,9.19838285328879,9.07992912392245,8.74360869568248,8.14613331281924,7.26107639858844,6.10905398207727,4.78044126292209,3.41936426227232,2.16539329386457,1.09812149115765,0.226884561298163,-0.482285260490661,-1.07498428279606,-1.58996216605537,-2.05353952906795,-2.48076422437023,-2.87860039464736,-3.24895068014217,-3.59086474317305,-3.90195428020756,-4.17922754920174,-4.4195554614095,-4.61992572294606,-4.77758283093415,-4.89010983130167,-4.95548074514807,-4.97209806083474,-4.93882122012816,-4.85498898652676,-4.72043656115559,-4.53550750781884,-4.30106120747517,-4.01847473359343,-3.68963941271623,-3.31695273977784,-2.90330472041629,-2.45205889689265,-1.96702878917156,-1.45244901901538,-0.912942030246577,-0.353480417541647,0.22065511626304,0.803919253815706,1.39055343487485,1.97463342390252,2.5501223389154,3.11092356258755,3.65093319255848,4.1640912402123,4.64443023678445,5.08612003117248,5.48350774183007,5.83115239362503,6.12385509479371,6.35668788574618,6.5250291020447,6.62461840704673,6.6516522076808,6.60294651932883,6.47619539245127,6.27033531869775,5.98599278514639,5.62592699312218,5.19531385370543,4.70168771153662,4.15441570889315,3.56373774516275,2.93960740409429,2.29069477115912,1.62386779048548,0.944261658625259,0.255817781483359,-0.437980415280587,-1.1334487635721,-1.82628623006538,-2.51143519869209,-3.18315459123537,-3.8352079574233,-4.46108094910645,-5.05417904917593,-5.60798720232875,-6.11619424726177,-6.57279329708617,-6.97216100257825,-7.30912977982079,-7.57905430077288,-7.77786692978264,-7.90213598087621,-7.94911734246703,-7.91678316290499,-7.8038661654952,-7.6098924907878,-7.33518932411537,-6.98090790218509,-6.549027030019,-6.0423466389592,-5.46448481904744,-4.81985541795433,-4.11363226518377,-3.3517217840126,-2.54071643955796,-1.68784547575276,-0.800916774442842,0.111745611025276,1.04136926578992,1.97880269270606,2.91458538099862,3.83901393183959,4.74219602031153,5.61408166327381,6.4444526336986,7.22283063098397,7.93824097428168,8.57870901304197,9.13027486255012,9.57516039316445,9.88853733196168,10.0332986647294,9.95303222428129,9.56681233104812,8.77801355395704,7.51939748659051,5.8402937475354,3.96511611283147,2.20865400778583,0.7928473569967,-0.238255970147431,-0.957832594187064,-1.4657943389756,-1.84196975652727,-2.13747029300877,-2.38100689432955,-2.58710823004252,-2.76226198758451,-2.90873302003237,-3.02672841631966,-3.11556047455404,-3.17424973995608,-3.20183149806259,-3.19751084721529,-3.16074212590464,-3.09127060122371,-2.98915753298423,-2.85478570138379,-2.68886813482721,-2.49245508882554,-2.26692535167271,-2.01397771333444,-1.7356233716879,-1.43417200066745,-1.11221372589925,-0.772599818341824,-0.418419267592442,-0.0529726491616268,0.320256541860613,0.697632860498831,1.075401698393,1.44972495863532,1.81671669148165,2.17248168243568,2.51315457622801,2.83493784363012,3.13414262500636,3.407228691834,3.65084466341468,3.86186822433357,4.03744632682975,4.1750352600711,4.27244040463118,4.32785522331299,4.33989860671532,4.30764907601385,4.23067361954268,4.10904828017231,3.94336730312669,3.73473803873174,3.48476013361924,3.19548983656527,2.86939308164526,2.5092932618576,2.11832219264436,1.69987931238374,1.25760353840878,0.795357691845225,0.317220767684256,-0.172517926797183,-0.669369626872917,-1.16866623725584,-1.665591598911,-2.15522303274732,-2.63258062238538,-3.09268137109146,-3.53059482447376,-3.94149972607115,-4.32073927114675,-4.66387449586072,-4.96673586227824,-5.22547229697744,-5.43659743270149,-5.59703342302262,-5.70414938483621,-5.75579889009828,-5.75035108692849,-5.68671784532615,-5.56437594365638,-5.38338466569225,-5.14439653790252,-4.84866260946677,-4.49803288602885,-4.09494984483101,-3.64243611330539,-3.14407656922786,-2.60399528144789,-2.02681973308343,-1.41764840097575,-0.782020010328565,-0.125855085996964,0.544590110570077,1.2227740006711,1.90192683567235,2.57510934451246,3.23526695539262,3.87528757144388,4.48805308264511,5.06648411758179,5.60357371782755,6.09240464363374,6.52614390495064,6.89800690964263,7.20118887498924,7.42876241405598,7.57356302654415,7.62811571405621,7.58471239846446,7.43582145520917,7.1750626238014,6.79892374839669,6.30912294021798,5.71495130071562,5.03434759365365,4.29241768080835,3.51713997856659,2.73372202855236,1.96011111370081,1.20548095638307,0.471737205985774,-0.243341814288248,-0.942959361531298,-1.62913868093604,-2.30175926020756,-2.95851020369451,-3.5953358035761,-4.20702306861599,-4.78772933254779,-5.33137800625731,-5.83192728959253,-6.28354679624774,-6.68073697192181,-7.01841867219067,-7.29200030809948,-7.4974407853204,-7.63130182975957,-7.69079312437815,-7.67382576794471,-7.57903711983773,-7.40582116939806,-7.15435167041098,-6.82559563120161,-6.42132053352796,-5.94409280188444,-5.39726860937759,-4.78497642082191,-4.11209125555267,-3.38420187191413,-2.60757003506486,-1.78908252843029,-0.936197353256457,-0.056882816862755,0.840446612747268,1.74699873607946,2.65367095742829,3.55111794116192,4.42980984358717,5.2800742184647,6.09210633987095,6.85592253853615,7.56121056823803,8.1969965241036,8.75098778698231,9.20835900030899,9.54962529989996,9.74719688841783,9.76052818907351,9.53138012150592,8.98511580833151,8.05106623780403,6.71476046665596,5.08234158085263,3.38212640956988,1.85693699359177,0.640092698446282,-0.266738639334309,-0.932651551644827,-1.4361596892008,-1.83733893689036,-2.17409961531126,-2.46740715700713,-2.72743290398072,-2.95816418055147,-3.16032390084852,-3.33305980048582,-3.47486780505902,-3.58407891751833,-3.65911122918744,-3.69860127727762,-3.70147465817119,-3.66698628122097,-3.59474460916423,-3.48473116165144,-3.33730335148048,-3.15320136918199,-2.93355078069509,-2.67986552072318,-2.3940308459322,-2.07829419530394,-1.73525250490983,-1.36783246863283,-0.979267398653358,-0.573072234827421,-0.15301384675337,0.276921303824121,0.712562111636238,1.14959037100901,1.58358024086469,2.0100395798787,2.42445257077443,2.82232335224444,3.19922028442967,3.55082059416924,3.87295520238847,4.1616537014955,4.41318963620174,4.62412645261171,4.79136470051616,4.91219115930493,4.98433044678872,5.00599931244483,4.9759621335959,4.89358479432975,4.75888153195702,4.5725468630596,4.33596337925285,4.05117731667,3.72083820965327,3.34810659177623,2.93654267106521,2.48999577763888,2.01251562913091,1.50830083858483,0.981687254367617,0.437167221286106,-0.120575583892014,-0.68663856337317,-1.25589173069165,-1.82299630936723,-2.38244711927119,-2.92863278421409,-3.45590520277595,-3.95865124267415,-4.43136374414942,-4.86870927664189,-5.26559202889801,-5.61721415835988,-5.91913278931317,-6.16731368763915,-6.35818110988833,-6.48866394612284,-6.55623686868409,-6.55895771352485,-6.49549998105385,-6.3651769815092,-6.16796324989598,-5.90450823016089,-5.57614343179425,-5.18488428109354,-4.73342291437495,-4.22510973583288,-3.66393997937153,-3.05453466878944,-2.40209328604573,-1.7123583868864,-0.991572089175624,-0.246426508366734,0.515992188483734,1.28826593263281,2.06270166536269,2.83139552192954,3.58629336680184,4.31924683942878,5.02205944373731,5.68651617117223,6.30438415688387,6.86736805542393,7.36699492448373,7.79439202900922,8.13991295570279,8.39257049052596,8.53926888712803,8.56397223571585,8.44723505062303,8.16707603453803,7.70277644956237,7.04312518841034,6.19825979221338,5.20923381335585,4.14558475449434,3.08652502764679,2.09531435549116,1.20350682797644,0.412421580573301,-0.294554113079349,-0.939022492833345,-1.53944919258862,-2.10810402899729,-2.65116461954243,-3.17013020974468,-3.66342185100278,-4.12768562464144,-4.55869477738642,-4.95191356997425,-5.30282966774917,-5.60714658709986,-5.86089965087825,-6.06053508211694,-6.20296078932211,-6.28559668209302,-6.30641242606221,-6.26395507403959,-6.15739015770721,-5.98650820727661,-5.75174411388836,-5.45418718578549,-5.09558358465104,-4.67833167401725,-4.20547142696378,-3.68066759708484,-3.10818569874926,-2.49286177315044,-1.84006657089732,-1.15566326027106,-0.445960427139868,0.282340167519067,1.02219966690856,1.76629980508206,2.50710470890853,3.23692102239474,3.94795523010735,4.63236546626641,5.28230333152728,5.88993496713449,6.44743516362719,6.9469359715998,7.38041087227257,7.73946867844743,8.0150351263921,8.19691423831976,8.27330181542486,8.23044466371164,8.0529184660008,7.72530802574241,7.2362160566361,6.58484538380396,5.78831959545187,4.88512704985705,3.92975225005391,2.97853475500367,2.07409447515969,1.23721136818222,0.468886435701094,-0.241571711549982,-0.908169469748511,-1.54274441070725,-2.15271489891711,-2.74101775277951,-3.30706325234085,-3.84790702996442,-4.35924782025024,-4.83614014373545,-5.27345159075159,-5.66613967478714,-6.00941860739783,-6.29886543304294,-6.53049540001846,-6.70082039053838,-6.80689310792786,-6.84635512094514,-6.81747643713738,-6.71917717806068,-6.5510569090573,-6.31341205341862,-6.00724672261535,-5.63427772942588,-5.1969319148516,-4.69833600624212,-4.14230020138849,-3.53329402540668,-2.8764153538638,-2.17735266168969,-1.44234241240366,-0.67811597038611,0.108151941412983,0.90890357128094,1.71626003988871,2.52208620877988,3.31805350959914,4.09569736820694,4.84646844151778,5.56176544975063,6.23293966069893,6.85124924812875,7.40773719209214,7.89298065750208,8.29664768107363,8.60677645722858,8.80870570768474,8.8836969694544,8.80764406071206,8.5510405905919,8.08260979630961,7.37975989986896,6.44656469330028,5.33148921229718,4.12769900918046,2.94511800177508,1.86943955433288,0.938220447114085,0.145951071367134,-0.535348663609694,-1.13735066542565,-1.68540915565465,-2.19589805563966,-2.67731718768351,-3.13254585765666,-3.56095293086536,-3.95995728348161,-4.3260415063789,-4.65535713922608,-4.94406871533512,-5.18854681152244,-5.38548050666086,-5.53194921299096,-5.62547420507621,-5.6640525678149,-5.64619496457922,-5.57095504883223,-5.43794255642141,-5.24734284421331,-4.99992692502194,-4.69705509142176,-4.34067552581557,-3.93331710052015,-3.47807573286426,-2.9785950979214,-2.4390417289105,-1.86407424701113,-1.25880734086603,-0.628770667460852,0.0201365819529001,0.681695236948101,1.34941948698304,2.01661034174559,2.67641600196912,3.3218854241441,3.94602425744171,4.54184623250515,5.10241723143318,5.62088885250199,6.09051662520058,6.50465759224486,6.85674223432112,7.14021884990844,7.34847440700115,7.47475962972394,7.51216950441304,7.45378546708687,7.29313639675828,7.02515970645119,6.64776296657128,6.16381734594216,5.5829527516188,4.92212029178614,4.20398669009149,3.45314671781483,2.69146324915581,1.93451607810658,1.19051849528663,0.461667353317114,-0.253214806521487,-0.956045330517691,-1.64766529459588,-2.32702846755453,-2.99117100468206,-3.63560586615297,-4.25484240989574,-4.84285542812163,-5.39343956646516,-5.90045334832415,-6.35798233086217,-6.7604526179575,-7.10271678580982,-7.38012436880699,-7.58857494674343,-7.72458567926213,-7.78533401950189,-7.76869565771198,-7.67328497353211,-7.49848274485384,-7.2444604679056,-6.91219101583697,-6.50345792578854,-6.02085385782281,-5.46777026050481,-4.84838063494821,-4.16761724626142,-3.43113161040586,-2.64525204267858,-1.81694869891313,-0.953770484749668,-0.0637792348457746,0.844509521716855,1.76219684166115,2.6800690880578,3.5886645566848,4.47833194430867,5.33927096638039,6.16153838033364,6.93499311671596,7.64912912801977,8.29270657749217,8.85302364991851,9.31456329165186,9.65660447446295,9.84932376002238,9.84828954891595,9.58919177832253,8.9900051305174,7.97620095477957,6.54263493394691,4.82312302526997,3.07681395185359,1.55486936006355,0.373951746176966,-0.485986439445947,-1.10686870247926,-1.5709737306272,-1.9376688234704,-2.24303164960211,-2.50647580905876,-2.73721267324266,-2.93877464754798,-3.11176877544601,-3.25542770444346,-3.36844197426969,-3.44939255704154,-3.49697313212005,-3.51010486537066,-3.48799778431728,-3.43018519949066,-3.33654659159906,-3.20731379913855,-3.043079615165,-2.84480629630054,-2.61382118655938,-2.35180498190569,-2.06078751707072,-1.74313367120234,-1.40152611057846,-1.03894501176188,-0.658644738697839,-0.2641267244585,0.140890420206073,0.552503431889027,0.966659205188405,1.37919187569682,1.78586211090309,2.18239615773051,2.56453033592601,2.9280498187249,3.26883321504475,3.58289536471381,3.86643066535634,4.11585653770051,4.32785727747278,4.49942847503226,4.62792229514443,4.71109375518309,4.74714772976741,4.73478561199484,4.67324934424489,4.56235901127848,4.4025387171246,4.19482480143883,3.94085127023318,3.64280807764538,3.30337744067514,2.92565469182824,2.51306590780258,2.06929683457119,1.59824362875565,1.10399067454846,0.590810344665009,0.0631771405890783,-0.474222454911703,-1.0164894814104,-1.55853133202996,-2.09509832298041,-2.62083494350475,-3.13034035365976,-3.61823285274652,-4.07921441507913,-4.50813447095869,-4.90005051933162,-5.25028603490934,-5.5544855388046,-5.80866671999021,-6.00926908286724,-6.15319914578564,-6.23787157597724,-6.2612461011426,-6.22185822645881,-6.11884878360945,-5.95198193309098,-5.72166197645903,-5.42894214152709,-5.07552755526165,-4.66377091527787,-4.19666519424421,-3.67782191018922,-3.11144467273617,-2.50231025386425,-1.85573457251372,-1.17751669821045,-0.473900830061319,0.248474694400778,0.982635274047455,1.72132834303503,2.45708093175936,3.18226188456274,3.88913948859818,4.56993375558517,5.21685898477609,5.82214803041686,6.37805126501759,6.87679397127312,7.31047304278425,7.67087299049228,7.94917787824332,8.13557854873044,8.21882999622218,8.18594186089606,8.02241291897686,7.71370565149925,7.2487942807216,6.62606787795496,5.86010529181489,4.98534417581893,4.05206088224264,3.11404331379517,2.21394372242632,1.37457342799386,0.59957074061221,-0.119627716759301,-0.79580145911568,-1.44032174219864,-2.06058072890349,-2.65965359987149,-3.2370910253706,-3.79002546470262,-4.31416085513689,-4.80450025097409,-5.25582086748109,-5.66296520553087,-6.02101736811153,-6.32541454553859,-6.57202555189405,-6.75721298752474,-6.87787811159515,-6.9315085526891,-6.91622317197679,-6.83079370906769,-6.67467503756826,-6.44802491219129,-6.15171601253786,-5.78734250776123,-5.35721874980207,-4.86437061903663,-4.3125200438921,-3.70606223209011,-3.05003563507026,-2.35008502992267,-1.61241936961029,-0.843760191841137,-0.0512888370527708,0.757412633264322,1.57442430428609,2.39155260998967,3.200393237017,3.99239266494325,4.75889958804083,5.49119863161639,6.18051869925825,6.81799067013555,7.39452684100229,7.90057105339948,8.32564561432424,8.65760065949956,8.88146711439775,8.977914751966,8.92165263549412,8.68094841340589,8.22086115075411,7.51398709871328,6.56036418262491,5.40873233162727],\"y\":[1.5,1.61910199955128,1.7173345167295,1.79556048307396,1.85412881110631,1.89307228135461,1.9122634544104,1.91153197460875,1.89074758648003,1.8498797219403,1.78903727193212,1.70849449448954,1.60870678124471,1.49031903197734,1.35416853011109,1.20128363420786,1.03287912717741,0.85034874613171,0.655255390908406,0.449319069160025,0.234402856383887,0.0124971288706992,-0.214297966500688,-0.443791431297681,-0.673721169281528,-0.901776822889628,-1.12562051999115,-1.34291071775268,-1.55132566294223,-1.74858727351556,-1.93248504189329,-2.10089976909459,-2.25182686676222,-2.3833989838268,-2.49390770735248,-2.58182412011059,-2.64581796274502,-2.68477519497966,-2.69781376285298,-2.68429723174204,-2.64384634789733,-2.57634821354118,-2.48196289969957,-2.36112741912487,-2.2145569479036,-2.04324321636888,-1.84844995143296,-1.63170546875112,-1.39479218857428,-1.13973323509329,-0.86877615758617,-0.584373827345869,-0.289162661775919,0.0140616640145316,0.322370744386914,0.63273192275809,0.94203834841462,1.24714019448815,1.54487658358367,1.83210776277372,2.10574709498351,2.36279249199186,2.60035699594474,2.81569830629095,3.00624712789709,3.1696342657386,3.3037164011172,3.40660053261471,3.47666637892924,3.51258826465769,3.51335310804174,3.47827714042182,3.40702004381855,3.29959556974174,3.15637919973467,2.978111904623,2.76590057847197,2.52121458303534,2.24587873628339,1.94206222056154,1.61226390507681,1.25929396990136,0.886252292342062,0.496502196341657,0.0936422701850857,-0.318524486675464,-0.736025486730411,-1.15475497921422,-1.57051313451979,-1.97904613522487,-2.37608828360113,-2.75740491176429,-3.11883572460526,-3.45633770195918,-3.7660307468516,-4.04423757544841,-4.28752651728645,-4.49275117046786,-4.657088273125,-4.77807309897475,-4.85363209808622,-4.88211234389364,-4.86230747937877,-4.79347985765091,-4.67537860839031,-4.50825341873784,-4.29286384921083,-4.03048404759181,-3.72290276806955,-3.37241862034985,-2.98183048009438,-2.55442296197241,-2.09394677591285,-1.60459364726231,-1.09096527196407,-0.558035552679875,-0.0111050755797706,0.54425376702178,1.10226114199075,1.65700469004382,2.20252412737135,2.73290223492068,3.24235718836008,3.72532918945713,4.17655327395118,4.59111347076416,4.96447561160052,5.29250143650204,5.5714519444172,5.79798867135593,5.96918118788355,6.08252540323808,6.13597259386264,6.1279658913886,6.0574789946403,5.92405203788002,5.72782099664345,5.46953869300653,5.15058689104117,4.7729796541412,4.33935864189812,3.85298166400645,3.31770248425199,2.73793965053453,2.11864881581501,1.46529121649603,0.783776795761204,0.0804161472903514,-0.63813215546331,-1.36492277686988,-2.09278754021354,-2.81440336678917,-3.52236462129126,-4.2092541992517,-4.8677197476925,-5.49054802246378,-6.07074041351506,-6.60159025596179,-7.07675582980921,-7.49033096121893,-7.83691469544395,-8.11167925823111,-8.3104278963454,-8.42965361718284,-8.46658938675506,-8.41925515537401,-8.28649762175331,-8.06802494055591,-7.76443756866137,-7.37725424031997,-6.90893906136492,-6.36293233237432,-5.74369520520877,-5.05678171901095,-4.30896255249872,-3.50843726576042,-2.66518779071052,-1.79153648459751,-0.902943640445521,-0.0189564735007713,0.836106307926948,1.63369324776177,2.34410544110854,2.9425660566491,3.41598196068146,3.76589605820705,4.00526543494449,4.15169445997553,4.22161381457181,4.22754907460369,4.17792517706103,4.07803959963653,3.93122909001562,3.73981276251222,3.50573022556171,3.23092667394498,2.9175640713191,2.56812486475033,2.1854535786504,1.7727639259056,1.33362674416092,0.871946803417022,0.39193262138242,-0.10193894689067,-0.60496203486663,-1.11224447359491,-1.61875352959529,-2.11936314299905,-2.60890446921018,-3.0822178486197,-3.5342037014825,-3.95987617770299,-4.35441580446672,-4.71322183179426,-5.03196291548432,-5.30662701248617,-5.53356855052075,-5.70955312547152,-5.83179939701384,-5.89801581645149,-5.90643764910441,-5.8558538375476,-5.74563348759696,-5.57574617207857,-5.34677749928189,-5.05993964442688,-4.717077114021,-4.32066787390417,-3.87382022619696,-3.38026584802948,-2.84434943311905,-2.27101519321337,-1.66578983804389,-1.03476102050629,-0.384547742099887,0.277742533910883,0.944578815319667,1.60810402477771,2.26027608375613,2.89305767313233,3.49864824208605,4.0697336171356,4.59971155874676,5.08284598402584,5.51431458061434,5.89014498246527,6.20707142382398,6.46236583545873,6.65369781014481,6.77905865908284,6.83675642565755,6.82546586691417,6.74430734665629,6.59292993389146,6.37158224303922,6.08116360726745,5.72325509386692,5.30013297132457,4.81476812106787,4.27081662418421,3.67259344291907,3.02504571461283,2.33371823860496,1.60470522868,0.844607521034539,0.0604759233583723,-0.740263610445844,-1.54986475961922,-2.36033523564872,-3.16351584405917,-3.9511564451051,-4.71499783848613,-5.44685556720111,-6.13870290281889,-6.78275778321928,-7.37156445086243,-7.89807599070126,-8.35573646001403,-8.73855450115736,-9.04117793936173,-9.25896151159057,-9.38803032073614,-9.42533664725931,-9.36871164156813,-9.21691132582353,-8.96965656217404,-8.62766955508586,-8.19271045743918,-7.66761888781276,-7.05637234666009,-6.36418167333508,-5.59766131336093,-4.76514124092796,-3.87723536889996,-2.94784461757635,-1.99580895600426,-1.04726767967703,-0.138041388539817,0.686457833538788,1.37817441113432,1.90186201791757,2.2501748994989,2.44414444108052,2.51866985158852,2.50707413037576,2.4340048362608,2.31533214110442,2.16064914551792,1.97577996674183,1.76454260547878,1.52981053959072,1.27409664640681,0.999852490766296,0.709610193230493,0.406040712250903,0.0919689387170476,-0.229633373781152,-0.555666242913217,-0.882926285622797,-1.2081352147148,-1.5279714994146,-1.8391015075699,-2.13821268081002,-2.422048814825,-2.68744305803111,-2.93135210086023,-3.15088887320759,-3.34335718903082,-3.50627997344706,-3.63743060691527,-3.73486035812653,-3.79692411125787,-3.82230318221365,-3.81002558953502,-3.75948366389314,-3.67044763271994,-3.54307657898979,-3.377925260854,-3.17594667059206,-2.93849158371745,-2.66730351306333,-2.36450962732717,-2.03260738128913,-1.67444684242581,-1.29320859540506,-0.892377169680634,-0.475709947124901,-0.0472015769784816,0.38895595744082,0.828417284848646,1.26673100388057,1.69938952871037,2.12188016984848,2.52973594744718,2.91858456345842,3.28419417798893,3.6225150178444,3.92971647393833,4.20222067258422,4.43673310068261,4.63027156787228,4.78019474909074,4.88423060330197,4.94050460902487,4.94756701823381,4.90441807471066,4.81053004760501,4.66586508838112,4.47088824450814,4.2265750147419,3.9344136235702,3.59640152193117,3.21503637676819,2.79330153069786,2.33464609576739,1.84295990284669,1.32254288468437,0.778071286975033,0.21455706639198,-0.362695416007964,-0.948136848870684,-1.53602374112461,-2.12047398094421,-2.69552266068046,-3.25517938888935,-3.79348957804107,-4.30459508630105,-4.78279566555078,-5.22260969843918,-5.61883554325064,-5.96660599662068,-6.26144519551962,-6.4993306591842,-6.67673439069525,-6.79067218618093,-6.83874619841588,-6.81918313282964,-6.73086781466858,-6.57336840077725,-6.34696059291837,-6.05264474149252,-5.69215880217101,-5.26798747532724,-4.78336895919187,-4.24230116860603,-3.64955005144379,-3.0106633737553,-2.33199357761599,-1.62073199749409,-0.884954580264708,-0.133668749448995,0.623160930154469,1.37465477440335,2.10919532704646,2.814817518401,3.47985295307109,4.0937712230143,4.64802713568675,5.13662878793652,5.55619656531377,5.90548948858393,6.1846115592888,6.39420747513017,6.5348910124734,6.60699138940087,6.61056732368908,6.5455786238663,6.41210901969337,6.21056994925132,5.94185395948614,5.60743378756438,5.20941661687869,4.75056603257962,4.23430225464824,3.66468759540797,3.04640329073065,2.38471161175937,1.68541822923172,0.95482374636218,0.199668830213542,-0.572915933465656,-1.35548523926007,-2.14034345801374,-2.91961815388904,-3.68533349781454,-4.42949136330865,-5.14415076050292,-5.82150876140686,-6.45398279903333,-7.03429388255726,-7.5555440120903,-8.0112935840923,-8.39563763900949,-8.70327683467156,-8.9295843723108,-9.07066769433807,-9.12342550207368,-9.08559740166462,-8.95580984093667,-8.73361528231132,-8.41952723871853,-8.01505305389249,-7.52272912243358,-6.94616618981873,-6.29011892530527,-5.56060546489259,-4.76512112458702,-3.91302196227054,-3.01619363278852,-2.09015569855252,-1.15569857171893,-0.24080613823267,0.618336861059482,1.37993872701479,2.0055511069666,2.47329140313107,2.78584250828757,2.96566321318012,3.04221099093631,3.04152641148895,2.98234297140355,2.87666455197897,2.73180968610153,2.55232319040329,2.34131393876551,2.10126865159249,1.83450444318395,1.54340188091609,1.23051404879713,0.898608719367366,0.550675254861173,0.18991297357543,-0.180290596125302,-0.556387219678384,-0.934699520731042,-1.31145435232674,-1.68282021849883,-2.0449434369365,-2.39398640288019,-2.72616690066869,-3.03779837995104,-3.325328420272,-3.58537724561563,-3.81477625775982,-4.01060517745192,-4.17022436838072,-4.29130917328135,-4.37187979198685,-4.41032877737804,-4.40544512544927,-4.35643537452209,-4.26294074412162,-4.12505050253742,-3.94331121693238,-3.7187317492301,-3.45278385199969,-3.14739823936008,-2.80495622748961,-2.42827630175297,-2.02059609572478,-1.58554919260303,-1.1271366400125,-0.649692858535476,-0.157845184637915,0.343532536515452,0.849372952407504,1.35447457930641,1.85356636766894,2.34137562868812,2.81269657265792,3.26245596525004,3.68577233105064,4.07800592275239,4.43479829705333,4.75210244272555,5.02620623060902,5.25375364421962,5.43176644769992,5.55766925981138,5.62931869346379,5.64503469827825,5.60363223568304,5.50445038803623,5.34737685872482,5.13286633717131,4.86195198918758,4.53625008149841,4.1579576201033,3.72984325748643,3.25523178517312,2.73798239768551,2.18246084551385,1.59350589787296,0.976390068507829,0.336775813139223,-0.319333829770174,-0.985650284940329,-1.6556549741138,-2.32266163143707,-2.97988013772949,-3.62048334186081,-4.23767517166915,-4.82476031971967,-5.37521229959666,-5.88274347744034,-6.34137661010194,-6.7455088399944,-7.08997633651822,-7.37011780089776,-7.58182984897758,-7.72162231134362,-7.78666981832384,-7.77485194111573,-7.68479379705047,-7.51589916413071,-7.2683785394558,-6.94327239312547,-6.54247134178096,-6.06873454447053,-5.52571111873847,-4.91796927107471,-4.25104304340588,-3.53150951801476,-2.76711465388149,-1.96697005687172,-1.14183530797508,-0.304478529415769,0.529965722819996,1.34385092081881,2.11747123415613,2.83056099032458,3.46498030604308,4.00789572310943,4.45393777575013,4.80502389957446,5.06796260424819,5.25129071232629,5.36282873817377,5.40853381131568,5.39241441576209,5.31699753057863,5.18393722592256,4.99454634637752,4.75018035256841,4.45248018322549,4.10350867008999,3.70581637227802,3.26246443425901,2.7770219565681,2.25354823907934,1.69656672213168,1.11102480530018,0.502258053206515,-0.124056646386581,-0.761953619321647,-1.40522578218269,-2.04749043111535,-2.68224773647738,-3.30294202291823,-3.9030293495588,-4.47604326744212,-5.01566035884656,-5.51576838879372,-5.97053232328136,-6.37445921651222,-6.72246068152615,-7.00991333928176,-7.23271530389113,-7.38733943330644,-7.4708819003908,-7.48110510932602,-7.41647730463798,-7.27620551034654,-7.06026318026163,-6.76941315052251,-6.40522671482774,-5.97009872852047,-5.46726314775319,-4.90081112854265,-4.27571784543078,-3.59788588676649,-2.87421560546069,-2.11271616173389,-1.32266501078186,-0.51481624688778,0.298378684932335,1.10263665412264,1.88198595039062,2.6194506029572,3.29847947458359,3.90499439280179,4.42941389465889,4.86770036895849,5.22084518341586,5.49308829146638,5.68980601041591,5.81591952374266,5.87514189857165,5.86992410206535,5.80178563555361,5.67175828472586,5.48078539076303,5.23001691524904,4.92099896650528,4.55578060459149,4.13696418399651,3.66772028004527,3.15178100992087,2.59341973083485,1.9974220035206,1.36904815658025,0.713986741468462,0.0383120850926722,-0.651569231991892,-1.34898214445197,-2.04704098802742,-2.73871607697063,-3.41689980815228,-4.0744790332743,-4.70440604422463,-5.2997721174368,-5.85387764570273,-6.36030691427577,-6.8129978378542,-7.20631091480919,-7.53509387780383,-7.7947487453612,-7.98128543031043,-8.09137785632244,-8.12241256657856,-8.07253315887558,-7.9406780134821,-7.72661184793458,-7.43095445351092,-7.05520449293601,-6.60176196484894,-6.07395297403154,-5.47606306271468,-4.81338980416455,-4.09233055524641,-3.32053006799524,-2.50712097060219,-1.66309448064022,-0.801818342332078,0.0603526901026717,0.903609209443612,1.70489660854922,2.43958324953148,3.08508018533147,3.62560375700269,4.05564135974018,4.37976668176576,4.60895202194399,4.75587722161278,4.83160527888457,4.8442873468513,4.79931035019251,4.70005978910793,4.54874896677698,4.34707979964097,4.09669010078453,3.7994233231401,3.45747459343014,3.07345910800867,2.65043507972573,2.19190073997764,1.70177626622568,1.18437666416083,0.644377803156031,0.0867738244987632,-0.48316197581788,-1.0599244619675,-1.63783168521771,-2.21107520355404,-2.77377821222848,-3.3200527886907,-3.84405862281776,-4.34006361921916,-4.8025040990686,-5.2260444128803,-5.6056356942667,-5.9365729770539,-6.21455007375126,-6.43571176026774,-6.596702379306,-6.69471083743014,-6.72751155682983,-6.69349934497895,-6.59172300113329,-6.42190877591861,-6.18448212900019,-5.88058362556503,-5.5120802725016,-5.08157309620405,-4.59240225161713,-4.04865137864719,-3.45515355481492,-2.81750149488498,-2.14206508604608,-1.4360171913752,-0.707365456457123,0.0350202966233535,0.781409086170544,1.52128003293197,2.24352220807673,2.93682145054826,3.5902535973199,4.19401833871567,4.74014100075904,5.22291096111153,5.63888651031353,5.98646904479227,6.26522808704492,6.47523224141747,6.61657955096209,6.6891946331809,6.69285001184606,6.62732066646459,6.49258130546565,6.28898637967248,6.01740556765762,5.67931113267032,5.27682520136968,4.81273799378489,4.29050611911504,3.71423709564122,3.08866431230187,2.41911286471256,1.71145141755778,0.972057988095175,0.207758145039825,-0.574237056001334,-1.36639267908407,-2.16091823209813,-2.94984638694408,-3.72510389440393,-4.47859399852429,-5.20227728660665,-5.88825425665009,-6.52884784999702,-7.1166873784613,-7.64478649174739,-8.10661947346668,-8.49620496042494,-8.80817660826514,-9.03784421982341,-9.18126175773673,-9.23528388102447,-9.19761673177835,-9.06686368529269,-8.84256564754712,-8.52523708583582,-8.11639959525659,-7.61861898343514,-7.03555350987109,-6.37202912802066,-5.63416994124553,-4.82963333200802,-3.9680350879899,-3.06169614160163,-2.12688289300174,-1.18564852911652,-0.267964151336578,0.58732487022341,1.33589839679652,1.93861893508518,2.37607614159904,2.6556174156622,2.8039293268987,2.85266684109686,2.8283163710515,2.74926002981534,2.62702551348855,2.46859256937353,2.27833727525561,2.05932346418129,1.81406210377105,1.54492261540269,1.25433953256173,0.944906329115097,0.619409180961829,0.280829519414283,-0.0676698223314894,-0.422767341798202,-0.781010620230714,-1.13884731285653,-1.49265965998863,-1.8387983762208,-2.17361785633819,-2.49351496145223,-2.794965828067,-3.07456258898805,-3.32905032166124,-3.55536420544009,-3.75066351486236,-3.91236467481016,-4.03817345069351,-4.12611419699102,-4.17455658659941,-4.18223930040694,-4.14829092571294,-4.07224735669227,-3.9540650522319,-3.79413196351464,-3.59327172025478,-3.35274618192205,-3.07425244984165,-2.75991579898276,-2.41227795756549,-2.03428080631124,-1.62924527015553,-1.20084526367755,-0.753076483528777,-0.290219856095568,0.183200497029773,0.662464747810657,1.14270997127308,1.61898707636078,2.08632065350543,2.5397697708593,2.97448719224222,3.38577439353745,3.76913041788448,4.12029330082814,4.43527449356882,4.71038819603815,4.94227696242524,5.12793795589174,5.26474883640833,5.35049705154422,5.38340942944017,5.36218181191852,5.28600636240541,5.15459498525749,4.96819752064196,4.72761397108232,4.43420037403944,4.08986843263631,3.69707873049455,3.25882787414987,2.77862967786164,2.26049048468843,1.70887899296358,1.12869066059384,0.525207052561984,-0.0959499681656356,-0.728865998543543,-1.36739191418668,-2.00519737968936,-2.63583267510633,-3.25279126922037,-3.84957442652969,-4.41975699954309,-4.95705482347963,-5.45539000153359,-5.90895446011707,-6.3122772635709,-6.66029075618269,-6.94838294189191,-7.17245760765787,-7.32898616881282,-7.41505824848504,-7.42842430202814,-7.36753183531066,-7.23156071533742,-7.02045059560155,-6.73492373568167,-6.37650347451003,-5.94752936145972,-5.45117176783413,-4.89144854260562,-4.27324935620449,-3.60237461354684,-2.88559908408878,-2.13077111342263,-1.34695712749502,-0.544629182841053,0.264135021554435,1.06552732298838,1.84412878698821,2.58351125596999,3.26751551796059,3.88212375776272,4.41738372439774,4.86852429787736,5.23565959244759,5.52224868782427,5.73311893814127,5.87287837546711,5.94509078229898,5.95213795666688,5.89549116022931,5.77612550302425,5.59491156382917,5.35291372605154,5.05158667409443,4.69288875393557,4.2793370651817,3.81402566685447,3.30062106365623,2.74334336010562,2.14693783740343,1.51663974889356,0.858127087785307,0.177476788883494,-0.518884037470649,-1.22424514127855,-1.9316700230445,-2.63406312009326,-3.32423570190714,-3.99497910280755,-4.63913625341504,-5.24967580619124,-5.81976413320726,-6.34283996241439,-6.81268619273484,-7.22349991866567,-7.56995878713084,-7.84728859516875,-8.05132032360382,-8.17854648013955,-8.22617221659105,-8.19216060643638,-8.07527186039757,-7.87509846665741,-7.59209426675361,-7.22759895727035,-6.78386247637854,-6.26407049130356,-5.6723783361382,-5.01396398180253,-4.29511678495032,-3.52338772260143,-2.70783806187041,-1.85942909979267,-0.991584984387402,-0.120885795348254,0.732333879396398,1.54404774046123,2.28816116696143,2.94037036769767],\"z\":[1,0.678601606237566,0.455348743056479,0.304361874383542,0.204589340824123,0.139990106940002,0.0988970157714225,0.0731244824706676,0.0571149661498263,0.0471961201411103,0.0410076270970601,0.0370708729603069,0.0344823507448734,0.0327028954278852,0.0314177097593583,0.0304466004185861,0.0296879567369639,0.0290851069773881,0.028606710238528,0.0282351712814952,0.0279607442716149,0.0277780445997494,0.0276842803601478,0.0276783327289234,0.0277603106446951,0.027931285670526,0.028193345990966,0.0285494463939374,0.0290033450967182,0.0295598449584378,0.0302247014818392,0.0310045730877106,0.0319072551889021,0.0329415771038475,0.0341173287892341,0.0354453923793219,0.0369375447866915,0.0386062399029052,0.040464451361466,0.0425251556306019,0.0448007205282058,0.0473021053945403,0.0500376133337783,0.0530114214636283,0.0562216641523975,0.059658053838896,0.0632991881108621,0.0671095495172978,0.0710364329284536,0.0750072078105677,0.0789274021659442,0.0826802827878255,0.0861286911382688,0.0891198737417627,0.0914937964259451,0.0930949996758801,0.0937873342469103,0.0934700713445516,0.0920930711499598,0.0896681894454582,0.0862741840423438,0.0820532138522026,0.0771985492299026,0.0719350041178563,0.0664953207137557,0.0610967215831164,0.0559217336574921,0.0511061974128782,0.0467355449557946,0.0428484987614523,0.0394455935041529,0.0365005044783082,0.0339714948553685,0.031810124196616,0.0299681255228616,0.0284008944939938,0.0270699796151169,0.0259432076124688,0.024994314892872,0.0242023545473153,0.0235506872233235,0.0230263386058755,0.0226194885129288,0.0223227816294259,0.0221311325286345,0.0220416982375078,0.0220532293267557,0.0221661496760087,0.0223832467970866,0.0227086866840183,0.0231489183285602,0.0237126052656215,0.0244109824297846,0.0252582768103247,0.0262723114056,0.0274750555243799,0.0288935292793003,0.0305610444857708,0.0325184420017565,0.0348158298513464,0.0375148550805572,0.0406912364417072,0.0444380005624044,0.0488693813126828,0.0541252009403043,0.0603758012633826,0.0678270746189798,0.0767248359896535,0.0873572528079052,0.100053077124556,0.115172270886721,0.13308416678288,0.154126923061169,0.1785414057314,0.206373980808465,0.237347912938401,0.270713604971675,0.30510420159592,0.338448566254349,0.368005581463396,0.390586022998614,0.402995729786865,0.402660595368888,0.388295286744093,0.360399747317877,0.32138263084983,0.275189950040115,0.226516910983309,0.179842506689003,0.138601061998477,0.104729542206864,0.0786684348743047,0.0597154941215274,0.0465377430353006,0.0376436273212392,0.0317020363939579,0.0276870794412268,0.0248891063242336,0.0228563559379547,0.0213177006777771,0.02011540725755,0.0191581185223652,0.0183913030809081,0.0177810652483385,0.0173050424275895,0.0169491068219734,0.0167022017161213,0.0165564138849452,0.0165110245779642,0.0165649397074597,0.0167169666455627,0.0169756374993414,0.0173458297778689,0.017839812309814,0.0184714937866575,0.0192611468503579,0.0202346198816274,0.0214268534100674,0.0228833461146579,0.0246637304139778,0.0268493920138921,0.0295499494231677,0.0329158695007025,0.0371577039538528,0.0425736641029128,0.0495952019361502,0.0588571147694851,0.0713099411612677,0.0884104069753913,0.112423601253926,0.14694238247361,0.197740115550577,0.27420456432463,0.391665576993877,0.575061713736969,0.864259406289693,1.32054412978797,2.03115778834343,3.10237409891079,4.62117010858702,6.56072753901527,8.64098505192137,10.2685845031037,10.7656596961082,9.85420836220067,7.90933955927925,5.65483236634797,3.67523914650355,2.21385336710502,1.25631247171408,0.681337781123554,0.358746572828767,0.187569405206244,0.100916518041666,0.0587316270028506,0.0387781166291879,0.0294620754222433,0.0250593006923972,0.022877942892482,0.0217042890254111,0.0210103610541518,0.0205726764146981,0.0202983694352878,0.0201491210250124,0.0201097211320457,0.0201750940872055,0.0203452908032894,0.0206236860832804,0.0210163180179796,0.0215320956596223,0.0221832418019974,0.022985130635056,0.0239574575823909,0.0251257604423157,0.0265216380688153,0.0281853503878554,0.0301677620664583,0.0325335390038789,0.0353652883692449,0.0387688701769459,0.0428814067865364,0.0478805752988251,0.053998220193693,0.0615383139738176,0.0709000462955741,0.0826081361522073,0.0973505942221227,0.116023734092947,0.139781326341795,0.170079482204558,0.208699699900124,0.257720367431745,0.319376915869138,0.395755274826261,0.488228896622016,0.596595334338355,0.717957085933282,0.845596163376474,0.968325779546584,1.07101821540801,1.13688656609009,1.15147008016847,1.10725245069954,1.00698760368795,0.86392470388604,0.698436778557274,0.532423329018616,0.383821291025657,0.263298464373658,0.173838629085093,0.112569455738309,0.0735179925565983,0.0500892741101544,0.036630943146079,0.029033087398643,0.02466348393622,0.0220009325939167,0.0202383179512526,0.0189736125565463,0.018012714882995,0.0172609273050645,0.0166705017263266,0.0162139762593889,0.0158746062224459,0.0156420488825083,0.0155099874056979,0.0154739113978177,0.0155350187256934,0.0156941722820872,0.0159568755193722,0.0163312077149428,0.0168288733448661,0.017465854925708,0.0182640088245394,0.0192521337402192,0.0204680869544222,0.0219636179531686,0.0238077663210898,0.0260947072053779,0.0289553378440782,0.0325738482858237,0.0372148213395927,0.0432658580071373,0.0513077629092888,0.0622319344685888,0.0774390156109013,0.0991859015761065,0.131198663726044,0.179778865708885,0.255803161346381,0.378360053212233,0.581268407726763,0.924329275368328,1.51111596436749,2.51162416190433,4.17309913950465,6.76246803189861,10.3270146105238,14.2283488467009,16.9001240597603,16.7614649293478,13.8307047392004,9.73180379690781,6.0661986399039,3.47344818625964,1.87855799280244,0.97945860699714,0.500981301977039,0.256516238137651,0.135384531271769,0.0767701674622549,0.0489064729550195,0.0358121216851965,0.0296862872734163,0.0268161225938444,0.025472129619765,0.0248632391890351,0.0246332734872338,0.0246249550344979,0.0247702331559866,0.0250414034624622,0.0254300346032942,0.0259366999170519,0.0265666934614896,0.0273286487764951,0.0282345450609499,0.0292986252502161,0.0305383075245548,0.0319746388810317,0.0336318642247004,0.0355386382858801,0.0377286238520698,0.0402404449814106,0.0431186152380405,0.0464136663815205,0.0501821982267467,0.0544863666514589,0.0593925706141099,0.064968931469072,0.0712810176727725,0.0783852287846257,0.0863191741793541,0.0950884891326286,0.10464989915754,0.114891034106089,0.125608688931996,0.136488896305977,0.147094135490138,0.1568647319525,0.165142101541916,0.171219819122656,0.17442358687271,0.174212989646807,0.170288045876729,0.162675448197961,0.151767854618025,0.13829491098939,0.123227047984449,0.107628657852135,0.0924952466895185,0.078617602368701,0.0665018685618658,0.056358891523691,0.0481512051539325,0.0416729118362271,0.036635261512196,0.0327365054201841,0.0297064514779463,0.0273262322492703,0.0254315997508438,0.0239041547773018,0.0226610753227119,0.0216448445168199,0.0208154483140289,0.0201446154170133,0.0196121893810981,0.0192037003728508,0.0189090036655101,0.0187211470636888,0.0186360332690091,0.0186522502056549,0.0187705399173199,0.0189939118634242,0.0193283268533233,0.0197823669950272,0.0203671196620951,0.0210983632992909,0.0219965813221504,0.0230873637802006,0.0244041239670071,0.0259898120460962,0.0278998550256362,0.0302067342644428,0.0330047458853231,0.0364190384009441,0.0406164863012849,0.0458222009462586,0.0523432409876807,0.0606015545751697,0.0711838993385434,0.0849124426189805,0.102946769656352,0.126929022080021,0.159184933013627,0.202992362037137,0.26291763382121,0.345178245244132,0.45793206195935,0.611247910000266,0.816294918909469,1.08310627825336,1.41614631426817,1.80748963818805,2.22900315897935,2.62772551376636,2.93088918776231,3.06494672863046,2.98420528992165,2.69388772584787,2.25148464601283,1.74404468074416,1.2558423016857,0.844458569678399,0.53372538252042,0.320271085616762,0.18555636488596,0.1067773175498,0.0636924742350504,0.0413623975130422,0.0301548827564917,0.0245111363250942,0.0215138647146056,0.0197524923094877,0.0185886580534694,0.0177461631764907,0.0171064023058957,0.0166163334767605,0.0162504977231753,0.015994803108699,0.0158413130510009,0.0157859950510042,0.015827613428869,0.0159677749584027,0.0162108798426148,0.0165640570295796,0.0170385900308281,0.0176491858395671,0.0184154010628812,0.0193645854421721,0.0205324337058547,0.0219646753531109,0.0237248206962816,0.0258994630140733,0.0286043640334075,0.0320034387755674,0.0363286088523847,0.0419155162526793,0.0492588863653158,0.0591053164971037,0.0726066660001123,0.0915820871084581,0.11896959807148,0.159619222762363,0.221695400508974,0.319157059718963,0.476099714022985,0.734107107313598,1.16385618813589,1.88058680477224,3.05609840722519,4.90008094985897,7.54848471661803,10.7919430263683,13.7611378998601,15.100412517179,13.9958639467357,11.0239765873695,7.5712765588583,4.68350776515299,2.6861149511695,1.46054005847512,0.76617977449315,0.394430465637352,0.203772348133006,0.109276681821314,0.0637007027133012,0.0421538498071659,0.0320744431671337,0.0273489397715251,0.0250935545172956,0.023985155949786,0.0234303722350914,0.0231684617150254,0.0230873036122511,0.0231397928818767,0.0233080397187594,0.0235871119771422,0.0239787665017104,0.0244886537283412,0.0251256124729216,0.025900847275095,0.0268286670139797,0.0279270592195889,0.0292174845941584,0.0307261820027582,0.0324849975553735,0.0345319445588585,0.0369129940621155,0.0396833815101107,0.0429089785230937,0.046668431540182,0.0510548008703569,0.0561772962127238,0.0621624347769501,0.0691540624254809,0.0773113779730298,0.0868035803863818,0.0977995864343145,0.110450148688366,0.124860526081469,0.141051376324151,0.158907569352066,0.178117595571734,0.198110836467427,0.218008954314396,0.23661225260684,0.252446805526488,0.26389436076261,0.269410440797273,0.267806764433718,0.258539476785647,0.241919133800787,0.2191599151415,0.192223768754681,0.163481491651541,0.135280646192455,0.109548641009371,0.0875286945010804,0.0697217790933091,0.0559966736960878,0.045808613370038,0.0384305983281672,0.0331390180584824,0.0293214026108335,0.0265141028106286,0.0243944619733924,0.0227502130469053,0.0214465045363444,0.0203984392652872,0.019551944439825,0.0188715521376076,0.0183332444770362,0.0179203990721753,0.0176215075797435,0.0174289285948453,0.0173379872432991,0.0173467066489114,0.0174562094173478,0.0176697144744226,0.0179922998547434,0.0184336048866852,0.0190058225366738,0.0197255419620029,0.0206146655307045,0.0217016024711675,0.0230240772722463,0.0246305629353324,0.0265850153016664,0.0289733560066216,0.0319100271743734,0.0355508750237522,0.0401116596187111,0.0458927490136968,0.0533212331263132,0.0630126042946325,0.0758679279371806,0.0932246048489005,0.11709819878399,0.150553015011609,0.198295654577268,0.267568240524328,0.369478471125744,0.520830367089025,0.746323410745155,1.08041943400858,1.56683633265401,2.25145798527804,3.16217225168521,4.27079510518112,5.44587253364919,6.43472347030822,6.93096408226331,6.73237313425274,5.87874930672618,4.6343628131768,3.3289142390674,2.20349498808258,1.35924951763049,0.78999341425023,0.437982371130957,0.235738039232691,0.126760769074283,0.0712169052493655,0.0441514738087484,0.0313287651117573,0.0252529263178427,0.0222468144325498,0.020614944776716,0.0196158625757177,0.0189381808694824,0.0184531182199175,0.0181070255548507,0.0178773360550998,0.0177534254190906,0.0177309643801155,0.0178094763404206,0.017990868864631,0.0182801917320266,0.0186853293163382,0.019216775876528,0.0198897028159485,0.020724212036789,0.021744752589195,0.0229846458696895,0.0244876862115843,0.0263094985586369,0.028524181205196,0.0312301365211808,0.0345594947502718,0.0386918955806434,0.0438744768805408,0.0504522615102436,0.0589134609459714,0.0699579567067097,0.0846010779500253,0.104338427185278,0.131387222086543,0.169062595741475,0.222333865364486,0.298620458749092,0.408866686758675,0.568815418645468,0.80014101168038,1.13044075563944,1.59014949542857,2.20317028147379,2.96816671111246,3.83172702072351,4.66642853059317,5.28111921284043,5.48586537203647,5.19047254756244,4.46433582922238,3.50179250582082,2.52178277981698,1.68110852327741,1.04658687557526,0.61438278572643,0.344396822204461,0.188020811972177,0.103305627270348,0.05998502553409,0.0388017833876145,0.0286817826869143,0.0237870036934281,0.0212664408127297,0.019817414680507,0.0188760471317271,0.0182069445089426,0.0177125956950422,0.0173511794050498,0.0171036273585109,0.0169606881049603,0.0169182843628621,0.0169748707494926,0.0171328886959524,0.0173963935397957,0.0177729602423395,0.0182738783889452,0.0189130588576907,0.0197100168824784,0.0206911953474051,0.0218897927587199,0.0233494413145905,0.0251291479945701,0.0273064780609773,0.0299857248934537,0.0333092720407113,0.0374739988452654,0.0427561083080756,0.049550133693598,0.0584285764776337,0.0702360194777619,0.0862411544465732,0.108380176548103,0.139650291570443,0.184755929459134,0.251129581086199,0.350551881296287,0.501579884278635,0.732896550908217,1.08715769293868,1.62334745144473,2.41232412651814,3.51504683934042,4.93043762826201,6.51469838279595,7.92435077447998,8.69210164665845,8.48205377832404,7.34122493134439,5.67567410455782,3.97308871788484,2.55737059301318,1.53552282793243,0.87122401412317,0.473395330190115,0.250775957896425,0.133236947288626,0.0741966839543909,0.045707758379,0.0323069309030112,0.0260111372767235,0.0229448648083946,0.0213255835068119,0.0203706605871809,0.0197488161538532,0.0193228562206263,0.0190360168958492,0.0188646575343256,0.0187992200449988,0.0188362997201553,0.018976423703491,0.0192230438249783,0.0195819039229933,0.020062408529205,0.0206771589521992,0.0214412554908141,0.022376378239157,0.0235094423653566,0.0248748924061421,0.0265171109253894,0.0284934418838235,0.0308783116239278,0.0337690963985447,0.0372943108113488,0.0416252596177671,0.0469918149342701,0.0537071971408805,0.0622000444314117,0.0730631346276442,0.0871223644580282,0.105534075062313,0.129921261153265,0.162557957505093,0.206607118540013,0.266401879281813,0.347725886578029,0.457971735488116,0.605936322367969,0.800856536580849,1.05011879378824,1.35514416894662,1.7055450699011,2.07313023973965,2.40950134369371,2.65218346121597,2.74173495605474,2.64494785159752,2.37172736594185,1.97399458004442,1.52616664324216,1.09890211636894,0.740078613569163,0.469253360748243,0.283113642788288,0.165493593681425,0.096586647447884,0.0587931874462999,0.0391060531852085,0.0291326860443782,0.0240293273065656,0.0212549768684507,0.0195807616389994,0.0184500452806013,0.01761975058909,0.0169847240933499,0.0164968871362334,0.0161321379177715,0.0158772130721801,0.0157243239832184,0.0156687307001907,0.0157104934218501,0.0158507423349418,0.0160918566822369,0.0164437718716505,0.016918163388507,0.0175272544139705,0.0182926097003686,0.0192409350850384,0.0204078713892695,0.0218408766822122,0.0236036614954367,0.0257828752118035,0.0284978296737487,0.0319145406431682,0.03627011196651,0.0419083284928589,0.0493386492367219,0.0593325022430431,0.0730858816690695,0.092499531011907,0.120662159976334,0.162709493080768,0.227354795639162,0.329625203188847,0.49570087213257,0.771200535377333,1.2343989085348,2.0139664839064,3.30245363588072,5.33245864458428,8.23990944141767,11.7396622160564,14.7848556120613,15.8726489702348,14.2954275848309,10.9190215080184,7.28826952603339,4.40103354699122,2.4761070507194,1.32704468594597,0.689448867785041,0.353439134061703,0.183121600470428,0.0993990235457645,0.0592213803385535,0.0402670986462033,0.0313998405814925,0.0272399315254264,0.0252609793989805,0.0243040938298167,0.023848688787375,0.0236650811509232,0.0236543592396259,0.0237750430611994,0.0240116038251133,0.024360876173272,0.0248257676956599,0.0254129941677899,0.0261316896101205,0.0269945445723101,0.0280168557536522,0.0292171063094088,0.030618098839648,0.032246781889562,0.0341352541365387,0.0363221660486197,0.0388530750144435,0.0417818464776917,0.045171773324248,0.049096609387359,0.0536413651632212,0.0589026126578573,0.0649875908777302,0.0720118116364181,0.0800939281148775,0.0893468051316941,0.0998633783452373,0.111695884666434,0.124827508266785,0.139136615592432,0.154355940252123,0.170032435292542,0.185497770731691,0.19986357736243,0.212057513378601,0.220913357252651,0.225317875916525,0.224399867076909,0.21772770358141,0.20545625838006,0.188374956426225,0.167825866934117,0.145490530751069,0.123104654528634,0.102174670847596,0.0837602862589747,0.0684054330742798,0.0561709023279213,0.0467682752377536,0.039718981093223,0.0344964931830648,0.0306224285624163,0.0277120670998509,0.0254822361448676,0.0237368160422849,0.022345231908863,0.0212219182730362,0.0203106517340964,0.0195737634777151,0.0189853899437177,0.0185274372963121,0.0181872059389637,0.0179560160839355,0.0178283851228167,0.0178015983387109,0.0178753565822206,0.0180519300131554,0.0183363188961683,0.0187359311885666,0.0192614473234696,0.0199275995524251,0.0207535745771901,0.0217643470477071,0.0229923752080051,0.0244796931184186,0.0262819622431468,0.0284710005558605,0.0311426362244121,0.0344257844811951,0.0384947498695635,0.0435893580752968,0.0500424910540083,0.0583240922570104,0.0691057582983555,0.0833592732177477,0.102506161702861,0.128650585851978,0.164921086469442,0.215983212706953,0.2887732085454,0.393473130575611,0.544669068652751,0.762367483363718,1.07200739842922,1.50173797714975,2.07415349430772,2.78973245062153,3.60276418681879,4.40056918736084,5.00961186588938,5.24993689897767,5.02389461003158,4.37794195902049,3.48208275106562,2.5426735174226,1.71769709179301,1.08251498356662,0.642335231097197,0.363182241107008,0.199341659589951,0.109558031238929,0.0632037919192965,0.0403735699277078,0.0294251434792887,0.0241342908497697,0.021426719807773,0.019885642251373,0.0188928784845839,0.0181898886169765,0.0176694963642138,0.0172858750110665,0.0170180265556685,0.0168556645085559,0.016794165184657,0.0168313846491696,0.0169691961413436,0.0172113424005986,0.0175645809899571,0.0180397103400849,0.0186501122808391,0.0194140976966233,0.0203570692677404,0.0215110908403034,0.0229178060861804,0.0246337425247784,0.0267336119537348,0.0293174357623644,0.0325218579798952,0.0365359372231208,0.0416251639808147,0.0481687350654708,0.0567167161585805,0.0680831632672504,0.0834941481118115,0.104825500831328,0.134993995708721,0.178601220624917,0.242972523331445,0.339822233533791,0.487821159202787,0.716260811547002,1.06955341459848,1.61077020189248,2.41881385935513,3.56770772435248,5.07175584871884,6.79337280267784,8.36656836552049,9.26504188058883],\"mode\":\"lines\",\"type\":\"scatter3d\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}\r\n\r\n\r\n\r\n",
      "last_modified": "2021-06-17T11:03:39-03:00"
    },
    {
      "path": "eqdiff.html",
      "title": "Equações em Diferença",
      "description": "Essa aula estuda Equações em Diferença.\n",
      "author": [
        {
          "name": "Rafael Peixoto",
          "url": {}
        }
      ],
      "date": "04-19-2021",
      "contents": "\r\n\r\nContents\r\nEquações Homogêneas\r\nAutomatizando esse processo\r\n\r\nEquações Não Homogêneas\r\nHomogênea x não-Homogênea\r\nExercícios\r\n\r\n\r\n\r\nd-article p {\r\n  text-align: justify;\r\n  font-size: 16px;\r\n}\r\n\r\nd-article p code {\r\n  background: rgba(236, 236, 236, 0.8);\r\n}\r\n\r\nd-article div.sourceCode {\r\n  overflow: auto !important;\r\n}\r\n\r\nEquações Homogêneas\r\nQueremos analisar a dinâmica resultante de uma equação em diferença de ordem 1, analisando valores diversos para o coeficiente \\(a_0\\):\r\n\\[\r\ny_{t+1} + a_0 y_t = 0\r\n\\] Já conhecemos a solução analítica:\r\n\\[\r\ny_t = A(-a_0)^t\r\n\\] tal que, para \\(t = 0\\), \\(A = y_0\\), com \\(y_0\\) representando a condição inicial (se conhecida).\r\nCriando as séries\r\nMas também podemos oferecer a solução numérica via simulação, implementando diretamente a equação que define a dinâmica da sequência de valores (a série temporal):\r\n\r\n\r\n### Parâmetros e Condições iniciais\r\n\r\n# Coeficiente\r\na0 <- c(2, -2, 1/3, -1/3, 1, -1)\r\n\r\n# Número de iterações\r\nt <- 10\r\n\r\n# Valor inicial\r\ny0 <- 0.025\r\n\r\n\r\n\r\n\r\n\r\n### Séries temporais geradas a partir de cada coeficiente\r\n\r\n# Séries\r\ny1 <- (a0[1])^(1:t) * y0\r\ny2 <- (a0[2])^(1:t) * y0\r\ny3 <- (a0[3])^(1:t) * y0\r\ny4 <- (a0[4])^(1:t) * y0\r\ny5 <- (a0[5])^(1:t) * y0\r\ny6 <- (a0[6])^(1:t) * y0\r\n\r\n# Data-Frame (em forma de ts)\r\nydata <- data.frame(y1, y2, y3, y4, y5, y6) %>%\r\n  as.ts()\r\n\r\n\r\n\r\n\r\n\r\n# Plot das séries geradas\r\nautoplot(ydata, facets = F) +\r\n  ggtitle(\"Equações de Ordem 1\") +\r\n  xlab(\"t\") +\r\n  ylab(\"Y\") +\r\n  theme_hc() +\r\n  theme(plot.title = element_text(size = 15, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"right\") +\r\n  scale_colour_discrete(\"\") +\r\n  scale_x_continuous(breaks = seq(from = 0, to = t, by = 1)) +\r\n  scale_y_continuous(breaks = seq(from = -15, to = 25, by = 5))\r\n\r\n\r\n\r\n\r\nAutomatizando esse processo\r\n\r\n\r\n# Através de Loop\r\nydata <- ts(matrix(NA, nrow = length(1:t), ncol = length(a0)))\r\n\r\nfor (i in 1:length(a0)) {\r\n  ydata[, i] <- (a0[i])^(1:t) * y0\r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Através de Função\r\nyfunchomo <- function(t, a0, y0) {\r\n  \r\n  ydata <- ts(matrix(NA, nrow = length(1:t), ncol = length(a0)))\r\n  \r\n  for (i in 1:length(a0)) {\r\n    ydata[, i] <- (a0[i])^(1:t) * y0\r\n  }\r\n  \r\n  colnames(ydata) <- c(paste0(rep(\"a0: \"), round(a0, 1)))\r\n  \r\n  ydata <- rbind(y0, ydata) %>% ts(start = 0)\r\n  \r\n  return(ydata)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Exemplo \r\nyfunchomo(t = 5, a0 = -2:2, y0 = 0.8)\r\n\r\n\r\nTime Series:\r\nStart = 0 \r\nEnd = 5 \r\nFrequency = 1 \r\n  a0: -2 a0: -1 a0: 0 a0: 1 a0: 2\r\n0    0.8    0.8   0.8   0.8   0.8\r\n1   -1.6   -0.8   0.0   0.8   1.6\r\n2    3.2    0.8   0.0   0.8   3.2\r\n3   -6.4   -0.8   0.0   0.8   6.4\r\n4   12.8    0.8   0.0   0.8  12.8\r\n5  -25.6   -0.8   0.0   0.8  25.6\r\n\r\n\r\n\r\n# Exemplo direto do Plot\r\nautoplot(yfunchomo(t = 5, a0 = seq(-1.5, 1.5, 0.5), y0 = 0.8), facets = F) +\r\n  ggtitle(\"Equações de Ordem 1\") +\r\n  xlab(\"t\") +\r\n  ylab(\"Y\") +\r\n  theme_hc() +\r\n  theme(plot.title = element_text(size = 15, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"right\") +\r\n  scale_colour_discrete(\"\")\r\n\r\n\r\n\r\n\r\nVoltando ao exemplo do início:\r\n\r\n\r\nydata <- yfunchomo(t = t, a0 = a0, y0 = y0)\r\n\r\n\r\n\r\n\r\n\r\nautoplot(ydata, facets = F) +\r\n  ggtitle(\"Equações de Ordem 1\") +\r\n  xlab(\"t\") +\r\n  ylab(\"Y\") +\r\n  theme_hc() +\r\n  theme(plot.title = element_text(size = 15, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"right\") +\r\n  scale_colour_discrete(\"\") +\r\n  scale_x_continuous(breaks = seq(from = 0, to = t, by = 1)) +\r\n  scale_y_continuous(breaks = seq(from = -15, to = 25, by = 5))\r\n\r\n\r\n\r\n\r\nEquações Não Homogêneas\r\nQueremos analisar uma série temporal \\(y_t\\), resultante de uma equação em diferença de ordem 1:\r\n\\[\r\ny_{t+1} + a_0 \\times y_t = b\r\n\\]\r\nOu:\r\n\\[\r\ny_{t+1} = - a_0 \\times y_t + b\r\n\\] Por exemplo:\r\n\\[\r\ny_{t+1} - 1.1 \\times y_t = 2\r\n\\]\r\nPara isso, precisamos antes definir todos os nossos parâmetros iniciais: quantidade de períodos de simulação, as condições iniciais, e demais coeficientes da equação e auxiliares. Neste caso, \\(a_0 = -1.1\\) e a única diferença com relação ao caso homogêneo é o acréscimo de um termo independente \\(g(t) = b = 2\\).\r\nSeria possível reusar a função yfunchomo criada acima caso soubéssemos o \\(\\overset{*}{y}\\) — ou seja, o steady state. Como usualmente a priori não sabemos esse valor, tempos que criar uma função que itere os valores de cada período.\r\n\r\n\r\n# Função que calcula a orbita de cada Eq em diferença\r\norbita <- function(m, y0, b, t) {\r\n  \r\n  out <- vector(mode = \"numeric\", length = t)\r\n  out[1] <- y0\r\n  for (i in 1:t) {\r\n    out[i+1] <- ((-m*out[i]) + b)\r\n  }\r\n  \r\n  return(out[-1])\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Exemplo\r\norbita(m = -1.1, y0 = 1, b = 2, t = 10)\r\n\r\n\r\n [1]  3.10000  5.41000  7.95100 10.74610 13.82071 17.20278 20.92306\r\n [8] 25.01537 29.51690 34.46859\r\n\r\n\r\n\r\n# Função que junta as diversas orbitas\r\nyfunc <- function(t, a0, y0, b) {\r\n  \r\n  ydata <- ts(matrix(NA, nrow = length(1:t), ncol = length(a0)))\r\n  \r\n  for (i in 1:length(a0)) {\r\n    ydata[, i] <- orbita(m = a0[i], y0 = y0, b = b, t = t)\r\n  }\r\n  \r\n  colnames(ydata) <- c(paste0(rep(\"a0: \"), round(a0, 1)))\r\n  \r\n  ydata <- rbind(y0, ydata) %>% ts(start = 0)\r\n  \r\n  return(ydata)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Exemplo\r\nyfunc(t = 10, a0 = -1:1, y0 = 0.5, b = 2)\r\n\r\n\r\nTime Series:\r\nStart = 0 \r\nEnd = 10 \r\nFrequency = 1 \r\n   a0: -1 a0: 0 a0: 1\r\n 0    0.5   0.5   0.5\r\n 1    2.5   2.0   1.5\r\n 2    4.5   2.0   0.5\r\n 3    6.5   2.0   1.5\r\n 4    8.5   2.0   0.5\r\n 5   10.5   2.0   1.5\r\n 6   12.5   2.0   0.5\r\n 7   14.5   2.0   1.5\r\n 8   16.5   2.0   0.5\r\n 9   18.5   2.0   1.5\r\n10   20.5   2.0   0.5\r\n\r\n\r\n\r\n# Exemplo direto do Plot\r\nautoplot(yfunc(t = 5, a0 = c(-1, 0.5, -0.5, 1), y0 = 0.8, b = 1), facets = F) +\r\n  ggtitle(\"Equações de Ordem 1\") +\r\n  xlab(\"t\") +\r\n  ylab(\"Y\") +\r\n  theme_hc() +\r\n  theme(plot.title = element_text(size = 15, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"right\") +\r\n  scale_colour_discrete(\"\")\r\n\r\n\r\n\r\n\r\nHomogênea x não-Homogênea\r\n\r\n\r\n# Exemplo do início da seção\r\nautoplot(object = ts(cbind(yfunc(t = 5, a0 = -1.1, y0 = 1, b = 2),\r\n                           yfunc(t = 5, a0 = -1.1, y0 = 1, b = 0))),\r\n         facets = F) +\r\n  ggtitle(\"Equações de Ordem 1\") +\r\n  xlab(\"t\") +\r\n  ylab(\"Y\") +\r\n  theme_hc() +\r\n  theme(plot.title = element_text(size = 15, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"top\") +\r\n  scale_colour_discrete(\"\", labels = c(\"Não-Homogênea\", \"Homogênea\")) +\r\n  scale_x_continuous(breaks = seq(from = 0, to = t, by = 2)) +\r\n  scale_y_continuous(breaks = seq(from = -6, to = 15, by = 2))\r\n\r\n\r\n\r\n\r\nExercícios\r\nA partir das rotinas anteriores, analise a dinâmica e o estado estacionário das séries cujas dinâmicas são resultado das equações a seguir:\r\n1.\r\n\\(y_t + a_0 \\times y_{t-1} = \\frac{1}{4}\\), sendo que \\(y_0 = 2\\) e \\(a_0 = 0.25\\)\r\nR: Pela equação, \\(b = \\frac{1}{4}\\)\r\n\r\n\r\nnaohomo1 <- yfunc(t = 10, a0 = 0.25, y0 = 2, b = 1/4)\r\nhomo1 <- yfunc(t = 10, a0 = 0.25, y0 = 2, b = 0)\r\n\r\n\r\n\r\n\r\n\r\nresult1 <- cbind(naohomo1, homo1)\r\ncolnames(result1) <- c(\"Não-Homogênea\", \"Homogênea\")\r\nresult1\r\n\r\n\r\nTime Series:\r\nStart = 0 \r\nEnd = 10 \r\nFrequency = 1 \r\n   Não-Homogênea     Homogênea\r\n 0     2.0000000  2.000000e+00\r\n 1    -0.2500000 -5.000000e-01\r\n 2     0.3125000  1.250000e-01\r\n 3     0.1718750 -3.125000e-02\r\n 4     0.2070312  7.812500e-03\r\n 5     0.1982422 -1.953125e-03\r\n 6     0.2004395  4.882812e-04\r\n 7     0.1998901 -1.220703e-04\r\n 8     0.2000275  3.051758e-05\r\n 9     0.1999931 -7.629395e-06\r\n10     0.2000017  1.907349e-06\r\n\r\n\r\n\r\nautoplot(result1, facets = F)\r\n\r\n\r\n\r\n\r\nLimpando o gráfico:\r\n\r\n\r\nautoplot(object = result1, facets = F) +\r\n  ggtitle(expression(y[t] + (0.25 %*% y[t-1]) == frac(1,4))) +\r\n  xlab(\"t\") +\r\n  ylab(\"Y\") +\r\n  theme_hc() +\r\n  theme(plot.title = element_text(size = 15, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"top\") +\r\n  scale_colour_discrete(\"\") +\r\n  scale_x_continuous(breaks = seq(from = 0, to = 10, by = 2)) +\r\n  scale_y_continuous(breaks = seq(from = -1, to = 2, by = 0.25))\r\n\r\n\r\n\r\n\r\n2.\r\nComo faria para simular a série \\(y_{t+1} = (−a0 \\times y_t) + k_0 + (k_1 \\times t)\\)? Teste para diversas condições inicials e analise o resultado.\r\nR: Primeiramente, devemos mudar nossa função orbita, afim de acomodar o termo \\(k_1 \\times t\\):\r\n\r\n\r\n# Função que calcula a orbita de cada Eq em diferença\r\norbita_trend <- function(m, y0, k0, k1, t) {\r\n  \r\n  out <- vector(mode = \"numeric\", length = t)\r\n  out[1] <- y0\r\n  trend <- rep(x = 0, t)\r\n  trend[1:t] <- 1:t\r\n  for (i in 1:t) {\r\n    out[i+1] <- (-m*out[i] + k0 + k1*trend[i])\r\n  }\r\n  \r\n  return(out[-1])\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Teste Orbita\r\norbita_trend(m = 0.5, y0 = 2, k0 = 0, k1 = 1, t = 20)\r\n\r\n\r\n [1]  0.000000  2.000000  2.000000  3.000000  3.500000  4.250000\r\n [7]  4.875000  5.562500  6.218750  6.890625  7.554688  8.222656\r\n[13]  8.888672  9.555664 10.222168 10.888916 11.555542 12.222229\r\n[19] 12.888885 13.555557\r\n\r\n\r\n\r\n# Teste plot\r\nautoplot(ts(orbita_trend(m = 0.5, y0 = 2, k0 = 0, k1 = 1, t = 20)))\r\n\r\n\r\n\r\n\r\nAgora, voltando a questão, vamos testar para diversos valores de \\(k_0\\) e \\(k_1\\):\r\n\r\n\r\ns1 <- ts(orbita_trend(m = 0.9, y0 = 2, k0 = 0, k1 = 0, t = 20))\r\ns2 <- ts(orbita_trend(m = 0.9, y0 = 2, k0 = 1, k1 = 0, t = 20))\r\ns3 <- ts(orbita_trend(m = 0.9, y0 = 2, k0 = 0, k1 = 1, t = 20))\r\ns4 <- ts(orbita_trend(m = 0.9, y0 = 2, k0 = 1, k1 = 1, t = 20))\r\n\r\nseries <- cbind(s1, s2, s3, s4)\r\ncolnames(series) <- c(\"(0,0)\", \"(1,0)\", \"(0,1)\", \"(1,1)\")\r\n\r\n\r\n\r\n\r\n\r\nautoplot(object = series, facets = F) +\r\n  ggtitle(expression(y[t+1] == (-a[0] %*% y[t]) +k[0] + (k[1] %*%  t)), \r\n          subtitle = expression(list(k[0],k[1]))) +\r\n  xlab(\"t\") +\r\n  ylab(\"Y\") +\r\n  theme_hc() +\r\n  theme(plot.title = element_text(size = 15, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"top\") +\r\n  scale_colour_discrete(\"\") +\r\n  scale_x_continuous(breaks = seq(from = 0, to = 20, by = 1)) +\r\n  scale_y_continuous(breaks = seq(from = -1, to = 20, by = 1))\r\n\r\n\r\n\r\n\r\n3.\r\n\\(y{t+1} = 0.9 · y_t + X_t\\); com \\(Xt \\sim N(0, σ^2)\\). Teste para valores diferentes de σ2 e analise o seu efeito sobre a dinâmica da série.\r\nR: Primeiramente, devemos mudar nossa função orbita, afim de acomodar o termo \\(X_t\\):\r\n\r\n\r\n# Função que calcula a orbita de cada Eq em diferença\r\norbita_estoc <- function(m, y0, s2, t) {\r\n  \r\n  out <- vector(mode = \"numeric\", length = t)\r\n  out[1] <- y0\r\n  for (i in 1:t) {\r\n    out[i+1] <- (-m*out[i] + rnorm(n = 1, mean = 0, sd = sqrt(s2)))\r\n  }\r\n  \r\n  return(out[-1])\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Teste Orbita\r\norbita_estoc(m = 0.5, y0 = 2, s2 = 2, t = 20)\r\n\r\n\r\n [1] -1.25492199  1.59621817  3.82129863 -1.11784054  0.46131507\r\n [6] -1.60589953  0.02995960 -2.40315139 -1.02209510 -0.06169078\r\n[11]  0.48238457 -0.18401891 -0.45954736 -2.34299507  2.10371984\r\n[16] -0.40185672  2.48718325 -3.86864140  1.52869047  1.71098372\r\n\r\n\r\n\r\n# Teste plot\r\nautoplot(ts(orbita_estoc(m = 0.5, y0 = 2, s2 = 2, t = 20)))\r\n\r\n\r\n\r\n\r\nAgora, voltando a questão, vamos testar para diversos valores de \\(s^2\\)\r\n\r\n\r\ns21 <- ts(orbita_estoc(m = 0.5, y0 = 2, s2 = 0, t = 20))\r\ns22 <- ts(orbita_estoc(m = 0.5, y0 = 2, s2 = 2, t = 20))\r\ns23 <- ts(orbita_estoc(m = 0.5, y0 = 2, s2 = 4, t = 20))\r\ns24 <- ts(orbita_estoc(m = 0.5, y0 = 2, s2 = 6, t = 20))\r\n\r\nseriess2 <- cbind(s21, s22, s23, s24)\r\ncolnames(seriess2) <- c(paste0(rep(\"s2: \", 4), seq(0, 6, 2)))\r\n\r\n\r\n\r\n\r\n\r\nautoplot(object = seriess2, facets = F) +\r\n  ggtitle(expression(y[t+1] == (-a[0] %*% y[t]) + X[t])) +\r\n  xlab(\"t\") +\r\n  ylab(\"Y\") +\r\n  theme_hc() +\r\n  theme(plot.title = element_text(size = 15, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"top\") +\r\n  scale_colour_discrete(\"\") +\r\n  scale_x_continuous(breaks = seq(from = 0, to = 20, by = 1)) +\r\n  scale_y_continuous(breaks = seq(from = -10, to = 10, by = 1))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-06-17T11:03:58-03:00"
    },
    {
      "path": "index.html",
      "title": "Economia Matemática",
      "author": [
        {
          "name": "Rafael Peixoto",
          "url": {}
        }
      ],
      "date": "03-26-2021",
      "contents": "\r\n\r\n\r\nd-article p {\r\n  text-align: center;\r\n  font-size: 26px;\r\n}\r\n\r\nd-article p code {\r\n  background: rgba(236, 236, 236, 0.8);\r\n}\r\n\r\nd-article div.sourceCode {\r\n  overflow: auto !important;\r\n}\r\n\r\n\r\nEsse site acompanha as aulas da disciplina Economia Matemática (HO-012).\r\n\r\n\r\n\r\n",
      "last_modified": "2021-06-17T11:04:00-03:00"
    },
    {
      "path": "jdv.html",
      "title": "O Jogo da Vida",
      "description": "Essa aula explora o \"Jogo da Vida\", proposto por John H. Conway na década de 70.\n",
      "author": [
        {
          "name": "Rafael Peixoto",
          "url": {}
        }
      ],
      "date": "04-18-2021",
      "contents": "\r\n\r\nContents\r\nIntrodução\r\nO jogo\r\nVizinhança\r\nAtualização dos estados\r\nAutomatizando o jogo\r\nExemplos\r\n\r\n\r\n\r\n\r\nd-article p {\r\n  text-align: justify;\r\n  font-size: 16px;\r\n}\r\n\r\nd-article p code {\r\n  background: rgba(236, 236, 236, 0.8);\r\n}\r\n\r\nd-article div.sourceCode {\r\n  overflow: auto !important;\r\n}\r\n\r\nIntrodução\r\nO Jogo da Vida consiste em um conjunto de agentes distribuidos em um grid de tamanho n previamente definido. Cada agente, representado em um quadrado desse grid, é caracterizado por um dos dois estados possíveis: morto ou vivo.\r\n\r\n\r\n# Criando o Grid\r\nn <- 5\r\ngridIni <- expand.grid(x = 1:n, y = 1:n)\r\ngridIni$z <- runif(n = n^2, min = 0, max = 1) %>% \r\n  round(digits = 0)\r\n\r\n\r\n\r\n\r\n\r\n# Plotando o Grid\r\nggplot(data = gridIni) +\r\n  aes(x = x, y = y, fill = factor(z)) + \r\n  geom_tile(colour = \"black\", size = 0.8) +\r\n  coord_equal() +\r\n  theme_void() +\r\n  scale_fill_brewer(breaks = c(0, 1), \r\n                    labels = c(\"0 - Morto\", \"1 - Vivo\"),\r\n                    type = \"seq\",\r\n                    direction = 1, \r\n                    palette = 12) + \r\n  labs(title = \"Geração 0\", x = NULL, y = NULL, fill = \"Life\") +\r\n  geom_text(mapping = aes(label = 1:(n^2))) -> plot0\r\n\r\nplot0\r\n\r\n\r\n\r\n\r\nO jogo\r\nO jogo consiste em atualizar os estados dos agentes a cada geração, o que ocorre a partir dos estados de seus vizinhos:\r\nSe o agente tem menos de dois vizinhos vivos, ele morre\r\nSe tem mais de três vizinhos vivos, ele morre\r\nSe tem exatamente dois vizinhos vivos, ele mantêm seu estado atutal (vivo ou morto)\r\nSe tem exatamente três vizinhos vivos, a célula muda seu estado de morto para vivo , ou permanece vivo se já está nesse estado.\r\nVizinhança\r\nAs matrizes construídas a seguir servem para identificar os vizinhos (com seus respectivos estados) de cada agente.\r\n\r\n\r\n# Matriz ampliada\r\nmat <- matrix(data = 1:n^2, nrow = n)\r\nmat.pad <- rbind(NA, cbind(NA, mat, NA), NA)\r\nmat.pad\r\n\r\n\r\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7]\r\n[1,]   NA   NA   NA   NA   NA   NA   NA\r\n[2,]   NA    1    6   11   16   21   NA\r\n[3,]   NA    2    7   12   17   22   NA\r\n[4,]   NA    3    8   13   18   23   NA\r\n[5,]   NA    4    9   14   19   24   NA\r\n[6,]   NA    5   10   15   20   25   NA\r\n[7,]   NA   NA   NA   NA   NA   NA   NA\r\n\r\n\r\n\r\n# Matriz com os vizinhos\r\nind <- 2:(n + 1)\r\nvizinhos <- rbind(N  = as.vector(mat.pad[ind - 1, ind    ]),\r\n                  NE = as.vector(mat.pad[ind - 1, ind + 1]),\r\n                  E  = as.vector(mat.pad[ind    , ind + 1]),\r\n                  SE = as.vector(mat.pad[ind + 1, ind + 1]),\r\n                  S  = as.vector(mat.pad[ind + 1, ind    ]),\r\n                  SO = as.vector(mat.pad[ind + 1, ind - 1]),\r\n                  O  = as.vector(mat.pad[ind    , ind - 1]),\r\n                  NO = as.vector(mat.pad[ind - 1, ind - 1]))\r\n\r\nvizinhos\r\n\r\n\r\n   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\r\nN    NA    1    2    3    4   NA    6    7    8     9    NA    11\r\nNE   NA    6    7    8    9   NA   11   12   13    14    NA    16\r\nE     6    7    8    9   10   11   12   13   14    15    16    17\r\nSE    7    8    9   10   NA   12   13   14   15    NA    17    18\r\nS     2    3    4    5   NA    7    8    9   10    NA    12    13\r\nSO   NA   NA   NA   NA   NA    2    3    4    5    NA     7     8\r\nO    NA   NA   NA   NA   NA    1    2    3    4     5     6     7\r\nNO   NA   NA   NA   NA   NA   NA    1    2    3     4    NA     6\r\n   [,13] [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23]\r\nN     12    13    14    NA    16    17    18    19    NA    21    22\r\nNE    17    18    19    NA    21    22    23    24    NA    NA    NA\r\nE     18    19    20    21    22    23    24    25    NA    NA    NA\r\nSE    19    20    NA    22    23    24    25    NA    NA    NA    NA\r\nS     14    15    NA    17    18    19    20    NA    22    23    24\r\nSO     9    10    NA    12    13    14    15    NA    17    18    19\r\nO      8     9    10    11    12    13    14    15    16    17    18\r\nNO     7     8     9    NA    11    12    13    14    NA    16    17\r\n   [,24] [,25]\r\nN     23    24\r\nNE    NA    NA\r\nE     NA    NA\r\nSE    NA    NA\r\nS     25    NA\r\nSO    20    NA\r\nO     19    20\r\nNO    18    19\r\n\r\n\r\n\r\n# Matriz com os estados dos vizinhos\r\nestados.vizinhos <- c()\r\nfor (i in 1:n^2) {\r\n  estados.vizinhos <- cbind(estados.vizinhos, gridIni[vizinhos[, i], 3])\r\n}\r\nestados.vizinhos\r\n\r\n\r\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\r\n[1,]   NA    0    0    1    1   NA    0    0    1     0    NA     0\r\n[2,]   NA    0    0    1    0   NA    0    1    0     1    NA     0\r\n[3,]    0    0    1    0    0    0    1    0    1     1     0     0\r\n[4,]    0    1    0    0   NA    1    0    1    1    NA     0     1\r\n[5,]    0    1    1    1   NA    0    1    0    0    NA     1     0\r\n[6,]   NA   NA   NA   NA   NA    0    1    1    1    NA     0     1\r\n[7,]   NA   NA   NA   NA   NA    0    0    1    1     1     0     0\r\n[8,]   NA   NA   NA   NA   NA   NA    0    0    1     1    NA     0\r\n     [,13] [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22]\r\n[1,]     1     0     1    NA     0     0     1     0    NA     1\r\n[2,]     0     1     0    NA     1     1     0     0    NA    NA\r\n[3,]     1     0     0     1     1     0     0     0    NA    NA\r\n[4,]     0     0    NA     1     0     0     0    NA    NA    NA\r\n[5,]     1     1    NA     0     1     0     0    NA     1     0\r\n[6,]     0     0    NA     1     0     1     1    NA     0     1\r\n[7,]     1     0     0     0     1     0     1     1     0     0\r\n[8,]     0     1     0    NA     0     1     0     1    NA     0\r\n     [,23] [,24] [,25]\r\n[1,]     1     0     0\r\n[2,]    NA    NA    NA\r\n[3,]    NA    NA    NA\r\n[4,]    NA    NA    NA\r\n[5,]     0     0    NA\r\n[6,]     0     0    NA\r\n[7,]     1     0     0\r\n[8,]     0     1     0\r\n\r\n\r\n\r\n# Trocar os 'NA' por 0\r\nestados.vizinhos0 <- estados.vizinhos\r\nestados.vizinhos0[is.na(estados.vizinhos0)] <- 0\r\nestados.vizinhos0\r\n\r\n\r\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\r\n[1,]    0    0    0    1    1    0    0    0    1     0     0     0\r\n[2,]    0    0    0    1    0    0    0    1    0     1     0     0\r\n[3,]    0    0    1    0    0    0    1    0    1     1     0     0\r\n[4,]    0    1    0    0    0    1    0    1    1     0     0     1\r\n[5,]    0    1    1    1    0    0    1    0    0     0     1     0\r\n[6,]    0    0    0    0    0    0    1    1    1     0     0     1\r\n[7,]    0    0    0    0    0    0    0    1    1     1     0     0\r\n[8,]    0    0    0    0    0    0    0    0    1     1     0     0\r\n     [,13] [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22]\r\n[1,]     1     0     1     0     0     0     1     0     0     1\r\n[2,]     0     1     0     0     1     1     0     0     0     0\r\n[3,]     1     0     0     1     1     0     0     0     0     0\r\n[4,]     0     0     0     1     0     0     0     0     0     0\r\n[5,]     1     1     0     0     1     0     0     0     1     0\r\n[6,]     0     0     0     1     0     1     1     0     0     1\r\n[7,]     1     0     0     0     1     0     1     1     0     0\r\n[8,]     0     1     0     0     0     1     0     1     0     0\r\n     [,23] [,24] [,25]\r\n[1,]     1     0     0\r\n[2,]     0     0     0\r\n[3,]     0     0     0\r\n[4,]     0     0     0\r\n[5,]     0     0     0\r\n[6,]     0     0     0\r\n[7,]     1     0     0\r\n[8,]     0     1     0\r\n\r\n\r\n\r\n# Número de vizinhos vivos para cada agente\r\nvivos <- c()\r\nfor (i in 1:n^2) {\r\n  vivos <- cbind(vivos, \r\n                 length(estados.vizinhos0[, i][estados.vizinhos0[, i] == 1]))\r\n}\r\nvivos\r\n\r\n\r\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]\r\n[1,]    0    2    2    3    1    1    3    4    6     4     1     2\r\n     [,13] [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22]\r\n[1,]     4     3     1     3     4     3     3     2     1     2\r\n     [,23] [,24] [,25]\r\n[1,]     2     1     0\r\n\r\nAtualização dos estados\r\nSeguindo as quatro regras apontadas anteriormente, assim fica o próximo período:\r\n\r\n\r\n# Criando novo Grid\r\ngridFin <- expand.grid(x = 1:n, y = 1:n)\r\ngridFin$z <- c(NA)\r\n\r\n# Atualizando os estados de cada agente\r\nfor (i in 1:n^2) {\r\n  if (vivos[i] < 2) {\r\n    gridFin$z[i] <- 0\r\n  }\r\n  if (vivos[i] > 3) {\r\n    gridFin$z[i] <- 0\r\n  }\r\n  if (vivos[i] == 2) {\r\n    gridFin$z[i] <- gridIni$z[i]\r\n  }\r\n  if (vivos[i] == 3) {\r\n    gridFin$z[i] <- 1\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Plotando novo Grid\r\nggplot(data = gridFin) +\r\n  aes(x = x, y = y, fill = factor(z)) + \r\n  geom_tile(colour = \"black\", size = 0.8) +\r\n  coord_equal() +\r\n  theme_void() +\r\n  scale_fill_brewer(breaks = c(0, 1), \r\n                    labels = c(\"0 - Morto\", \"1 - Vivo\"),\r\n                    type = \"seq\",\r\n                    direction = 1, \r\n                    palette = 12) + \r\n  labs(title = \"Geração 1\", x = NULL, y = NULL, fill = \"Life\") +\r\n  geom_text(mapping = aes(label = 1:(n^2))) -> plot1\r\n\r\nplot1\r\n\r\n\r\n\r\n\r\nComparando as duas gerações:\r\n\r\n\r\n# Plots lado a lado\r\ngrid.arrange(plot0, plot1, ncol = 2)\r\n\r\n\r\n\r\n\r\nAutomatizando o jogo\r\nAgora que conseguimos codificar as regras do jogo, podemos escrever funções que realizam os passos necessários de forma automática.\r\n\r\n\r\n# Função que gera o número de vizinhos vivos de cada agente\r\nnViz <- function(n, gridI) {\r\n  \r\n  mat <- matrix(data = 1:n^2, nrow = n)\r\n  mat.pad <- rbind(NA, cbind(NA, mat, NA), NA)\r\n  ind <- 2:(n + 1)\r\n  vizinhos <- rbind(N  = as.vector(mat.pad[ind - 1, ind    ]),\r\n                    NE = as.vector(mat.pad[ind - 1, ind + 1]),\r\n                    E  = as.vector(mat.pad[ind    , ind + 1]),\r\n                    SE = as.vector(mat.pad[ind + 1, ind + 1]),\r\n                    S  = as.vector(mat.pad[ind + 1, ind    ]),\r\n                    SO = as.vector(mat.pad[ind + 1, ind - 1]),\r\n                    O  = as.vector(mat.pad[ind    , ind - 1]),\r\n                    NO = as.vector(mat.pad[ind - 1, ind - 1]))\r\n  estados.vizinhos <- c()\r\n  for (i in 1:n^2) {\r\n    estados.vizinhos <- cbind(estados.vizinhos, gridI[vizinhos[, i], 3])\r\n  }\r\n  estados.vizinhos0 <- estados.vizinhos\r\n  estados.vizinhos0[is.na(estados.vizinhos0)] <- 0\r\n  vivos <- c()\r\n  for (i in 1:n^2) {\r\n    vivos <- cbind(vivos, \r\n                   length(estados.vizinhos0[, i][estados.vizinhos0[, i] == 1]))\r\n  }\r\n  \r\n  return(vivos)\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Função que gera o grid final com os estados dos agentes\r\nintera <- function(n, gridF, vivos) {\r\n  \r\n  for (i in 1:n^2) {\r\n    if (vivos[i] < 2) {\r\n      gridF$z[i] <- 0\r\n    }\r\n    if (vivos[i] > 3) {\r\n      gridF$z[i] <- 0\r\n    }\r\n    if (vivos[i] == 2) {\r\n      gridF$z[i] <- gridIni$z[i]\r\n    }\r\n    if (vivos[i] == 3) {\r\n      gridF$z[i] <- 1\r\n    }\r\n  }\r\n  \r\n  return(gridF)\r\n  \r\n}\r\n\r\n\r\n\r\nExemplos\r\n\r\n\r\n# Criando Grid inicial\r\ngera0 <- gridIni\r\n\r\n# Criando Grids para cada nova geração\r\ngera1 <- intera(n = n, gridF = gera0, vivos = nViz(n = n, gridI = gera0))\r\ngera2 <- intera(n = n, gridF = gera1, vivos = nViz(n = n, gridI = gera1))\r\ngera3 <- intera(n = n, gridF = gera2, vivos = nViz(n = n, gridI = gera2))\r\ngera4 <- intera(n = n, gridF = gera3, vivos = nViz(n = n, gridI = gera3))\r\ngera5 <- intera(n = n, gridF = gera4, vivos = nViz(n = n, gridI = gera4))\r\n\r\n\r\n\r\n\r\n\r\n# Criando Plots para cada novo Grid\r\nggplot(data = gera0) +\r\n  aes(x = x, y = y, fill = factor(z)) + \r\n  geom_tile(colour = \"black\", size = 0.8) +\r\n  coord_equal() +\r\n  theme_void() +\r\n  scale_fill_brewer(breaks = c(0, 1), \r\n                    labels = c(\"0 - Morto\", \"1 - Vivo\"),\r\n                    type = \"seq\",\r\n                    direction = 1, \r\n                    palette = 12) + \r\n  labs(title = \"Geração 0\", x = NULL, y = NULL, fill = \"Life\") +\r\n  geom_text(mapping = aes(label = 1:(n^2)), size = 2.5) -> plotgera0\r\n\r\nggplot(data = gera1) +\r\n  aes(x = x, y = y, fill = factor(z)) + \r\n  geom_tile(colour = \"black\", size = 0.8) +\r\n  coord_equal() +\r\n  theme_void() +\r\n  scale_fill_brewer(breaks = c(0, 1), \r\n                    labels = c(\"0 - Morto\", \"1 - Vivo\"),\r\n                    type = \"seq\",\r\n                    direction = 1, \r\n                    palette = 12) + \r\n  labs(title = \"Geração 1\", x = NULL, y = NULL, fill = \"Life\") +\r\n  geom_text(mapping = aes(label = 1:(n^2)), size = 2.5) -> plotgera1\r\n\r\nggplot(data = gera2) +\r\n  aes(x = x, y = y, fill = factor(z)) + \r\n  geom_tile(colour = \"black\", size = 0.8) +\r\n  coord_equal() +\r\n  theme_void() +\r\n  scale_fill_brewer(breaks = c(0, 1), \r\n                    labels = c(\"0 - Morto\", \"1 - Vivo\"),\r\n                    type = \"seq\",\r\n                    direction = 1, \r\n                    palette = 12) + \r\n  labs(title = \"Geração 2\", x = NULL, y = NULL, fill = \"Life\") +\r\n  geom_text(mapping = aes(label = 1:(n^2)), size = 2.5) -> plotgera2\r\n\r\nggplot(data = gera3) +\r\n  aes(x = x, y = y, fill = factor(z)) + \r\n  geom_tile(colour = \"black\", size = 0.8) +\r\n  coord_equal() +\r\n  theme_void() +\r\n  scale_fill_brewer(breaks = c(0, 1), \r\n                    labels = c(\"0 - Morto\", \"1 - Vivo\"),\r\n                    type = \"seq\",\r\n                    direction = 1, \r\n                    palette = 12) + \r\n  labs(title = \"Geração 3\", x = NULL, y = NULL, fill = \"Life\") +\r\n  geom_text(mapping = aes(label = 1:(n^2)), size = 2.5) -> plotgera3\r\n\r\nggplot(data = gera4) +\r\n  aes(x = x, y = y, fill = factor(z)) + \r\n  geom_tile(colour = \"black\", size = 0.8) +\r\n  coord_equal() +\r\n  theme_void() +\r\n  scale_fill_brewer(breaks = c(0, 1), \r\n                    labels = c(\"0 - Morto\", \"1 - Vivo\"),\r\n                    type = \"seq\",\r\n                    direction = 1, \r\n                    palette = 12) + \r\n  labs(title = \"Geração 4\", x = NULL, y = NULL, fill = \"Life\") +\r\n  geom_text(mapping = aes(label = 1:(n^2)), size = 2.5) -> plotgera4\r\n\r\nggplot(data = gera5) +\r\n  aes(x = x, y = y, fill = factor(z)) + \r\n  geom_tile(colour = \"black\", size = 0.8) +\r\n  coord_equal() +\r\n  theme_void() +\r\n  scale_fill_brewer(breaks = c(0, 1), \r\n                    labels = c(\"0 - Morto\", \"1 - Vivo\"),\r\n                    type = \"seq\",\r\n                    direction = 1, \r\n                    palette = 12) + \r\n  labs(title = \"Geração 5\", x = NULL, y = NULL, fill = \"Life\") +\r\n  geom_text(mapping = aes(label = 1:(n^2)), size = 2.5) -> plotgera5\r\n\r\n\r\n\r\n\r\n\r\n# plotando os Grids lado a lado\r\ngrid.arrange(plotgera0, plotgera1, plotgera2, plotgera3, plotgera4, plotgera5, \r\n             ncol = 2)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-06-17T11:04:13-03:00"
    },
    {
      "path": "ordem2.html",
      "title": "Eq. Ordem 2",
      "description": "Essa aula estuda Equações em Diferença de ordem 2.\n",
      "author": [
        {
          "name": "Rafael Peixoto",
          "url": {}
        }
      ],
      "date": "04-19-2021",
      "contents": "\r\n\r\nContents\r\nEquações Homogêneas\r\nRaízes reais e diferentes\r\nSolução\r\nExemplo\r\n\r\nRaízes reais e iguais\r\nRaízes Complexas\r\n\r\n\r\n\r\nd-article p {\r\n  text-align: justify;\r\n  font-size: 16px;\r\n}\r\n\r\nd-article p code {\r\n  background: rgba(236, 236, 236, 0.8);\r\n}\r\n\r\nd-article div.sourceCode {\r\n  overflow: auto !important;\r\n}\r\n\r\nEquações Homogêneas\r\nUma equação em diferença de ordem 2 traz alguns elementos familiares das equações de ordem 1. No entanto, tendo em vista que agora as raízes do polinômio característico associado podem ser números complexos, temos neste caso, a presença de oscilações e ciclos. Seja a equação em diferença:\r\n\\[\r\ny_t + a_1 \\times y_{t-1} + a_0 \\times y_{t-2} = g(t)\r\n\\]\r\nonde g(t) é o termo independente (de y). A solução particular se determina seguindo o mesmo procedimento visto para o caso das equações de ordem 1.\r\nPara determinar a solução homogênea, precisamos antes identificar as raízes do polinômio característico. Se λ é raíz desse polinômio, temos que:\r\n\\[\r\np(\\lambda) = \\lambda^2 + a_1 \\lambda + a_0 = 0\r\n\\]\r\nLogo, dado que o polinômio é de grau 2, ele terá duas soluções possíveis:\r\n\\[\r\n\\lambda = - \\frac{a_1}{2} \\pm \\frac{\\sqrt{a_1^2 - 4 a_0}}{2}\r\n\\]\r\nSe \\(\\small \\Delta = a_1^2 - 4 a_0\\), temos 3 casos passiveis:\r\nDuas raízes reais e diferentes, no caso em que \\(\\small \\Delta > 0\\).\r\nDuas raízes reais e iguais, se \\(\\small \\Delta = 0\\);\r\nDuas raízes complexas, quando \\(\\small \\Delta < 0\\).\r\nAnalisemos cada caso.\r\nRaízes reais e diferentes\r\nSeja a equação em diferenças:\r\n\\[\r\ny_t - 3y_{t-1} + 2y_{t-2} = 0\r\n\\]\r\ncom \\(\\small y_1 = 1\\) e \\(\\small y_2 = -2\\)\r\nDetermine o polinômio característico e as suas raízes;\r\nDetermine as constantes arbitrárias;\r\nDetermine a trajetória temporal.\r\nSolução\r\nPara o primeiro item, precisamos usar a função polyroot do pacote base. Note que, dado que para gerar o valor da série em t + 2, precisamos dos valores em t + 1 e em t. Logo, para calcular y2, precisamos de dois valores iniciais: y1 e y0.\r\nUtilizando a mesma notação das outras aulas:\r\n\\[\r\na_2 \\times y_{t+2} = -a_1 \\times y_{t+1} - a_0 \\times y_t\r\n\\]\r\nPrimeiramente, vamos criar a função da órbita para uma equação de ordem 2:\r\n\r\n\r\n# Função que calcula a orbita de cada Eq em diferença de ordem 2\r\norbita_2o <- function(a0, y0, a1, y1, t) {\r\n  \r\n  out <- vector(mode = \"numeric\", length = t)\r\n  out[1] <- y0\r\n  out[2] <- y1\r\n  for (i in 1:(t-2)) {\r\n    out[i+2] <- -a1*out[i+1] -a0*out[i]\r\n  }\r\n  \r\n  return(out)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Exemplo\r\norbita_2o(a0 = -0.9, y0 = 1, a1 = -0.4, y1 = -2, t = 15) %>%\r\n  ts() %>%\r\n  autoplot()\r\n\r\n\r\n\r\n\r\nVejamos um exemplo com os seguintes parâmetros:\r\n\r\n\r\na0 <- 2\r\ny0 <- 1\r\na1 <- -3\r\ny1 <- -2\r\nt <- 10\r\n\r\n\r\n\r\n\r\n\r\n# Plot\r\norbita_2o(a0 = a0, y0 = y0, a1 = a1, y1 = y1, t = t) %>%\r\n  ts() %>%\r\n  autoplot()\r\n\r\n\r\n\r\n\r\nNote que a série se afasta do steady state \\(\\small y^∗ = 0\\) (é uma equação homogênea, certo?). E não há nem oscilações nem ciclos. Logo, o comportamento da série nos leva a inferir que a equação tem duas raízes reais e positivas; e pelo menos uma delas (sendo diferentes) possui módulo maior que um. Para confirmar, podemos primeiro calcular o discriminante (\\(\\small \\Delta\\)) do polinômio característico:\r\n\\[\r\np(\\lambda) = \\lambda^2 - 3 \\lambda + 2\r\n\\]\r\nPela definiçao:\r\n\r\n\r\na2 <- 1\r\na1 <- -3\r\na0 <- 2\r\n# calculando o discriminante\r\ndelta = a1^2 -4*a2*a0\r\ndelta\r\n\r\n\r\n[1] 1\r\n\r\nVeja que \\(\\small \\Delta = 1> 0\\). Logo, as raízes são reais e diferentes (caso 1). Agora, precisamos calcular as raízes do polinômio. Para isso, usamos a função polyroots() do pacote base (instalado e carregado automaticamente):\r\n\r\n\r\n# vetor de coeficientes do polinomio - veja que a ordem deles no vetor\r\n# vai do menor ao maior grau\r\ncoefs <- c(a0, a1, a2)\r\n# raizes\r\nroots <- polyroot(coefs)\r\nroots\r\n\r\n\r\n[1] 1+0i 2-0i\r\n\r\nNote que a função nos dá as raízes no formato mais geral que é o formato dos números complexos. Contudo, a parte imaginária das raízes é zero. Logo, temos duas raízes reais (e no caso, positivas), com \\(\\small (λ1, λ2) = Re(roots)\\).\r\n\r\n\r\nlambda = Re(roots) # a parte real das raizes\r\nlambda\r\n\r\n\r\n[1] 1 2\r\n\r\nCom isso, temos uma raíz de módulo unitário e outra com módulo maior que dois: a série temporal resultante será explosiva.\r\nA solução analítica será dada por:\r\n\\[\r\ny_t = A_1 \\lambda_1^t + A_2 \\lambda_2^t\r\n\\]\r\ncom \\(\\small λ1 = 1\\) e \\(\\small λ2 = 2\\). Dado que as condições iniciais são \\(\\small y_0=1\\) e \\(\\small y_1 =-2\\), temos que\r\n\\[\r\n\\begin{cases}\r\n& 1 = A_1(1)^0 + A_2(2)^0 \\\\\r\n& -2= A_1(1)^1 + A_2(2)^1\r\n\\end{cases}\r\n\\]\r\nque define um sistema linear e determinado. Logo:\r\n\r\n\r\nA <- matrix(data = c(1, lambda[1], 1, lambda[2]), nrow = 2)\r\nB <- c(y0, y1)\r\nX <- solve(A, B)\r\nX \r\n\r\n\r\n[1]  4 -3\r\n\r\nFinalmente, a solução analítica da equação é dada por:\r\n\\[\r\ny_t = 4(1)^t - 3(2)^t\r\n\\]\r\nVeja que essa solução é composta por duas parcelas, a parcela da primeira e da segunda raíz. Podemos analisar a contribuição de cada parcela na solução geral:\r\n\r\n\r\n# Função que calcula a orbita de cada Eq em diferença de ordem 2\r\norbita_parc <- function(X, lambda, t) {\r\n  \r\n  raiz1 <- vector(mode = \"numeric\", length = t)\r\n  raiz2 <- vector(mode = \"numeric\", length = t)\r\n  soma <- vector(mode = \"numeric\", length = t)\r\n  for (i in 1:t) {\r\n    raiz1[i] <- X[1]*lambda[1]^i\r\n    raiz2[i] <- X[2]*lambda[2]^i\r\n    soma[i] <- raiz1[i] + raiz2[i]\r\n  }\r\n  \r\n  out <- cbind(raiz1, raiz2, soma)\r\n  colnames(out) <- c(\"Raiz 1\", \"Raiz 2\", \"y\")\r\n  \r\n  return(out)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Plot\r\norbita_parc(X = X, lambda = lambda, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F)\r\n\r\n\r\n\r\n\r\nPara rodar essa função aqui foi necessário já possuir os valores de lambda e X, que foram assim encontrados: \\(\\small a_2 \\times y_{t+2} = -a_1 \\times y_{t+1} - a_0 \\times y_t\\). y0 e y1 foram dados: \\(\\small y_0 = 1\\) e \\(\\small y_1 = -2\\)\r\n\r\n\r\n# Vetor de coeficientes do polinomio \r\ncoefs <- c(a0, a1, a2)\r\n# Raizes\r\nroots <- polyroot(coefs)\r\n# A parte real das raizes\r\nlambda = Re(roots)\r\n# Para achar A1 e A2\r\nA <- matrix(data = c(1, lambda[1], 1, lambda[2]), nrow = 2)\r\nB <- c(y0, y1)\r\nX <- solve(A, B)\r\n\r\n\r\n\r\nVeja que o primeiro componente é estável, porém se mantém a uma distância constante do steady state \\(\\small y^∗ = 0\\). Logo, por esse componente ser constante, não podemos dizer que a série é estável. Ainda, o segundo componente explode a medida que t aumenta, e a grandeza dos valores tende a ser muito maior que a contribuição do primeiro componente, o que acaba gerando o comportamento da série \\(\\small y_t\\) no longo prazo.\r\nExemplo\r\nSeja a equação, com \\(\\small y_0 = 1\\) e \\(\\small y_1 = 3\\):\r\n\\[\r\ny_t -0.25y_{t-2} = 0\r\n\\]\r\nou\r\n\\[\r\n1y_{t+2} + 0y_{t+1} -0.25y_{t+0} = 0\r\n\\]\r\ntemos que:\r\n\r\n\r\na2 <- 1\r\na1 <- 0\r\na0 <- -0.25\r\ny0 <- 1\r\ny1 <- 3\r\nt <- 10\r\n\r\n\r\n\r\nSimulando essa série:\r\n\r\n\r\norbita_2o(a0 = a0, y0 = y0, a1 = a1, y1 = y1, t = t) %>%\r\n  ts() %>%\r\n  autoplot()\r\n\r\n\r\n\r\n\r\nUsando a solução analítica:\r\n\r\n\r\n# Vetor de coeficientes do polinomio \r\ncoefs <- c(a0, a1, a2)\r\n# Raizes\r\nroots <- polyroot(coefs)\r\n# A parte real das raizes\r\nlambda = Re(roots)\r\n# Para achar A1 e A2\r\nA <- matrix(data = c(1, lambda[1], 1, lambda[2]), nrow = 2)\r\nB <- c(y0, y1)\r\nX <- solve(A, B)\r\nrbind(X, lambda)\r\n\r\n\r\n       [,1] [,2]\r\nX       3.5 -2.5\r\nlambda  0.5 -0.5\r\n\r\nTemos que:\r\n\\[\r\n\\begin{align}\r\n& y_t = A_1\\lambda_1^t + A_2\\lambda_2^t \\\\\r\n& y_t = 3.5(0.5)^t - 2.5(-0.5)^t\r\n\\end{align}\r\n\\]\r\n\r\n\r\n# Plot\r\norbita_parc(X = X, lambda = lambda, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F)\r\n\r\n\r\n\r\n\r\nRaízes reais e iguais\r\nSeja a equação, com \\(\\small y_0 = 1\\) e \\(\\small y_1 = 3\\):\r\n\\[\r\ny_t - 6y_{t-1} + 9y_{t-2} = 0\r\n\\]\r\ntemos que:\r\n\r\n\r\na2 <- 1\r\na1 <- -6\r\na0 <- 9\r\ny0 <- 1\r\ny1 <- 3\r\nt <- 10\r\n\r\n\r\n\r\nSimulando essa série:\r\n\r\n\r\norbita_2o(a0 = a0, y0 = y0, a1 = a1, y1 = y1, t = t) %>%\r\n  ts() %>%\r\n  autoplot()\r\n\r\n\r\n\r\n\r\nUsando a solução analítica:\r\n\r\n\r\n# Vetor de coeficientes do polinomio \r\ncoefs <- c(a0, a1, a2)\r\n# Raizes\r\nroots <- polyroot(coefs)\r\n# A parte real das raizes\r\nlambda = Re(roots)\r\nlambda\r\n\r\n\r\n[1] 3 3\r\n\r\n# Para achar A1 e A2\r\n# A <- matrix(data = c(1, lambda[1], 1, lambda[2]), nrow = 2)\r\n# B <- c(y0, y1)\r\n# X <- solve(A, B) não pode ser utilizado pois o Delta é igual a zero\r\n\r\n\r\n\r\nPara encontrar a forma analítica da solução, multiplicamos uma das raízes (que são iguais) por t, para que haja diferenciação:\r\n\\[\r\ny_t = (A_1 + A_2 \\times t)\\lambda^t\r\n\\]\r\nPara obter as constantes arbitrárias A1 e A2 a partir das condições inicias, e com isso, analisar os componentes da solução, construimos novamente um sistema linear com duas equações e duas incógnitas:\r\n\\[\r\n\\begin{cases}\r\n& y_0 = (A_1 + A_2 \\times 0) \\times (3)^0 = A_1 \\\\\r\n& y_1 = (A_1 + A_2 \\times 1) \\times (3)^1 = 3A_1 + 3A_2 \r\n\\end{cases}\r\n\\]\r\nNa forma geral, para qualque lambda (qualquer polinômio com raizes iguals):\r\n\\[\r\n\\begin{cases}\r\n& y_0 = A_1 \\\\\r\n& y_1 = A_1\\lambda + A_2\\lambda \r\n\\end{cases}\r\n\\]\r\nLogo,\r\n\\[\r\nA_2 = \\frac{y_1}{\\lambda} - A_1\r\n\\]\r\n\r\n\r\n# identificando as constantes arbitrarias\r\nX = y0\r\nX[2] = y1/lambda[1] - X[1]\r\n\r\n\r\n\r\nComo mudamos a forma funcional da solução, precisamos alterar a função que gera essas séries, acrescentando a multipliação de A2 por t:\r\n\r\n\r\n# Função que calcula a orbita de cada Eq em diferença de ordem 2\r\norbita_parc_delta0 <- function(X, lambda, t) {\r\n  \r\n  raiz1 <- vector(mode = \"numeric\", length = t)\r\n  raiz2 <- vector(mode = \"numeric\", length = t)\r\n  soma <- vector(mode = \"numeric\", length = t)\r\n  for (i in 1:t) {\r\n    raiz1[i] <- X[1]*lambda[1]^i\r\n    raiz2[i] <- X[2]*i*lambda[2]^i\r\n    soma[i] <- raiz1[i] + raiz2[i]\r\n  }\r\n  \r\n  out <- cbind(raiz1, raiz2, soma)\r\n  colnames(out) <- c(\"Raiz 1\", \"Raiz 2\", \"y\")\r\n  \r\n  return(out)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n# Plot\r\norbita_parc_delta0(X = X, lambda = lambda, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F)\r\n\r\n\r\n\r\n\r\nRaízes Complexas\r\nPrecisamos utilizar Euler e Moivre para reescrever a solução homogênea.\r\nPor exemplo, seja a equação, com \\(\\small y_0 = 1\\) e \\(\\small y_1 = 3\\)\r\n\\[\r\ny_t - y_{t-1} + \\frac{5}{4}y_{t-2} = 0\r\n\\]\r\nou\r\n\\[\r\n1y_{t+2} - 1y_{t+1} + \\frac{5}{4}y_{t-0} = 0\r\n\\]\r\ntemos que:\r\n\r\n\r\na2 <- 1\r\na1 <- -1\r\na0 <- 5/4\r\ny0 <- 1\r\ny1 <- 3\r\nt <- 20\r\n\r\n\r\n\r\nSimulando essa série:\r\n\r\n\r\norbita_2o(a0 = a0, y0 = y0, a1 = a1, y1 = y1, t = t) %>%\r\n  ts() %>%\r\n  autoplot()\r\n\r\n\r\n\r\n\r\nUsando a solução analítica:\r\n\\[\r\ny_t^h = R^t [(A_1+A_2)\\times cos(\\theta t) + (A_1-A_2) \\times i \\times sin(\\theta t)]\r\n\\]\r\n\r\n\r\n# Vetor de coeficientes do polinomio \r\ncoefs <- c(a0, a1, a2)\r\n# Raizes\r\nroots <- polyroot(coefs)\r\nroots\r\n\r\n\r\n[1] 0.5+1i 0.5-1i\r\n\r\n# A parte real das raizes\r\n# lambda = Re(roots)\r\n# lambda\r\n# Para achar A1 e A2\r\n# A <- matrix(data = c(1, lambda[1], 1, lambda[2]), nrow = 2)\r\n# B <- c(y0, y1)\r\n# X <- solve(A, B) não pode ser utilizado pois o Delta é igual a zero\r\n\r\n\r\n\r\nComo as raízes apresentam componentes imaginários:\r\nPrimeira Raiz\r\n\r\n\r\n# Módulo do complexo\r\nR <- Mod(roots[1]) %>% round(digits = 2)\r\n# Argumento do complexo\r\ntheta <- Arg(roots[1]) %>% round(digits = 2)\r\nrbind(R, theta)\r\n\r\n\r\n      [,1]\r\nR     1.12\r\ntheta 1.11\r\n\r\n\\[\r\ny_t = (1.12)^t \\times (A_1 cos(1.11t) + A_2 sin(1.11t))\r\n\\]\r\nComo o módulo dessa raiz é maior que a unidade, \\(\\small R = 1.12 > 1\\), teremos uma série temporal com ciclos explosivos no longo prazo\r\n\r\n\r\n# Função que calcula a orbita de cada Eq em diferença de ordem 2\r\norbita_parc_complx <- function(R, theta, t) {\r\n  \r\n  out <- vector(mode = \"numeric\", length = t)\r\n  out[1] <- y0\r\n  out[2] <- y1\r\n  for (i in 1:t) {\r\n    out[i+2] <- R^t\r\n  }\r\n  \r\n  return(out)\r\n  \r\n}\r\n\r\n\r\n\r\nPorque não mostrar o gráfico com as duas raízes e a soma delas, igual para os outros casos? Porque para isso seria necessário entrar no campo do complexos, o que foge do campo de interesse das análises econômicas.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-06-17T11:04:23-03:00"
    },
    {
      "path": "ordemsup.html",
      "title": "Eq. Ordem Superior",
      "description": "Essa aula estuda Equações em Diferença de ordem superior.\n",
      "author": [
        {
          "name": "Rafael Peixoto",
          "url": {}
        }
      ],
      "date": "04-30-2021",
      "contents": "\r\n\r\nContents\r\nEquações de Ordem Superior\r\nExercício 1\r\nExercício 2\r\n\r\nO Modelo de Hansen-Samuelson\r\nAnálise das raízes\r\nAnálise qualitativa\r\n\r\nO modelo de Hicks\r\nAnálise de estabilidade\r\n\r\n\r\n\r\n\r\nd-article p {\r\n  text-align: justify;\r\n  font-size: 16px;\r\n}\r\n\r\nd-article p code {\r\n  background: rgba(236, 236, 236, 0.8);\r\n}\r\n\r\nd-article div.sourceCode {\r\n  overflow: auto !important;\r\n}\r\n\r\n\r\nEquações de Ordem Superior\r\nComo já vimos, a equação linear em diferença de ordem n terá a sua solução analítica e estabilidade dependentes das n raízes do seu polinômio característico. Ainda, a condição do módulo de todas as raízes ser menor que a unidade continua a ser necessária para garantir a estabilidade da série no longo prazo.\r\nExercício 1\r\nSeja a equação de ordem 3, com \\(\\small y_0 = 400\\), \\(\\small y_1 = 420\\), \\(\\small y_2 = 450\\):\r\n\\[\r\n1y_{t+3} -4y_{t+2} +4.8y_{t+1} -1.6y_{t+0} = 100\r\n\\]\r\nEla possuirá três raízes características. Simulando, notamos que a série \\(\\small y_t\\) apresenta uma trajetória explosiva não oscilatória e sem ciclos. Logo, as raízes serão reais e positivas e haverá ao menos uma raíz com módulo maior que a unidade.\r\nTemos que:\r\n\r\n\r\na3 <- 1\r\na2 <- -4\r\na1 <- 4.8\r\na0 <- -1.6\r\ny0 <- 400\r\ny1 <- 420\r\ny2 <- 450\r\ng <- 100\r\nt <- 10\r\n\r\n\r\n\r\nPara simular essa série vamos, antes, construir a função de órbita de terceira ordem:\r\n\r\n\r\n# Função que calcula a orbita de cada Eq em diferença de ordem 3\r\norbita_3o <- function(a2, a1, a0, y0, y1, y2, g, t) {\r\n  \r\n  out <- vector(mode = \"numeric\", length = t)\r\n  out[1] <- y0\r\n  out[2] <- y1\r\n  out[3] <- y2\r\n  for (i in 1:(t-3)) {\r\n    out[i+3] <- -a2*out[i+2] -a1*out[i+1] -a0*out[i+0] + g\r\n  }\r\n  \r\n  return(out)\r\n  \r\n}\r\n\r\n\r\n\r\nSimulando a série:\r\n\r\n\r\norbita_3o(a2 = a2, a1 = a1, a0 = a0, y0 = y0, y1 = y1, y2 = y2, g = g, t = t) %>%\r\n  ts() %>%\r\n  autoplot() +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = 1:10) +\r\n  scale_y_continuous(breaks = seq(0, 18000, 2500))\r\n\r\n\r\n\r\n\r\nAnalisando as raízes (do polinômio característico):\r\n\r\n\r\n# Vetor de coeficientes do polinomio \r\ncoefs <- c(a0, a1, a2, a3)\r\n# Raizes\r\nroots <- polyroot(coefs) %>% round(digits = 3)\r\nroots\r\n\r\n\r\n[1] 0.553+0i 1.447+0i 2.000+0i\r\n\r\n# A parte real das raizes\r\nlambda = Re(roots)\r\nlambda\r\n\r\n\r\n[1] 0.553 1.447 2.000\r\n\r\nO steady state é dado por:\r\n\r\n\r\nyp <- g / (a0 + a1 + a2 + a3)\r\nyp\r\n\r\n\r\n[1] 500\r\n\r\nComo há 2 raízes maiores que a unidade, a série é explosiva. Logo, o ponto fixo é um repulsor. Além disso, as três raízes são reais e positivas, o que descarta a existência de oscilações ou de ciclos (como já havíamos previsto, dado o comportamento do gráfico).\r\nAssim, a solução explícita será dada pela combinação linear dos termos exponenciais tal que:\r\n\\[\r\n\\begin{align}\r\n& y_t = A_1(\\lambda_1)^t + A_2(\\lambda_2)^t + A_3(\\lambda_3)^t + g \\\\\r\n& y_t = A_1(0.553)^t + A_2(1.447)^t + A_3(2.000)^t + 500\r\n\\end{align}\r\n\\]\r\nonde os \\(\\small \\lambda_i\\) são as raízes. Com as três condições iniciais, determinamos as constantes arbitrárias A1, A2 e A3, por meio do sistema determinado resultante da substituição de y0, y1, y2 para t = 0, 1, 2 na solução explícita:\r\n\\[\r\n\\begin{cases}\r\ny_0 = A_1(0.553)^0+A_2(1.447)^0+A_3(2.000)^0 + 500 \\\\\r\ny_1 = A_1(0.553)^1+A_2(1.447)^1+A_3(2.000)^1 + 500 \\\\\r\ny_2 = A_1(0.553)^2+A_2(1.447)^2+A_3(2.000)^2 + 500 \\\\\r\n\\end{cases}\r\n\\]\r\nou\r\n\\[\r\n\\begin{equation}\r\n  \\begin{bmatrix}\r\n    y_0 \\\\\r\n    y_1 \\\\\r\n    y_2\r\n  \\end{bmatrix}\r\n  =\r\n  \\begin{bmatrix}\r\n    A_1 \\\\\r\n    A_2 \\\\\r\n    A_3\r\n  \\end{bmatrix}\r\n  \\cdot\r\n \\begin{bmatrix}\r\n    \\lambda_1^0 & \\lambda_2^0 & \\lambda_3^0  \\\\\r\n    \\lambda_1^1 & \\lambda_2^1 & \\lambda_3^1  \\\\\r\n    \\lambda_1^2 & \\lambda_2^2 & \\lambda_3^2  \\\\\r\n  \\end{bmatrix}\r\n\\end{equation}\r\n\\]\r\n\r\n\r\n# Para achar A1, A2 e A3\r\nv <- c(lambda[1]^0, lambda[1]^1, lambda[1]^2, \r\n       lambda[2]^0, lambda[2]^1, lambda[2]^2,\r\n       lambda[3]^0, lambda[3]^1, lambda[3]^2)\r\n# L: matrix com os lambdas\r\nL <- matrix(data = v, ncol = 3)\r\n# B: vetor com as condições inicias\r\nB <- c(y0, y1, y2) - yp\r\n# X: Vetor com os A_i \r\nX <- solve(L, B)\r\nX\r\n\r\n\r\n[1] -49.19536 -88.27182  37.46718\r\n\r\nPortanto:\r\n\\[\r\n\\begin{equation}\r\n  \\begin{bmatrix}\r\n    A_1 \\\\\r\n    A_2 \\\\\r\n    A_3\r\n  \\end{bmatrix}\r\n    =\r\n  \\begin{bmatrix}\r\n    -49.19 \\\\\r\n    -88.27 \\\\\r\n    37.46\r\n  \\end{bmatrix}\r\n\\end{equation}\r\n\\]\r\nSimulando os três componentes de forma independente:\r\n\r\n\r\n# Função que calcula a orbita de cada Eq em diferença de ordem 3\r\norbita_parc_3 <- function(X, lambda, t) {\r\n  \r\n  raiz1 <- vector(mode = \"numeric\", length = t)\r\n  raiz2 <- vector(mode = \"numeric\", length = t)\r\n  raiz3 <- vector(mode = \"numeric\", length = t)\r\n  soma <- vector(mode = \"numeric\", length = t)\r\n  for (i in 1:t) {\r\n    raiz1[i] <- X[1]*lambda[1]^i\r\n    raiz2[i] <- X[2]*lambda[2]^i\r\n    raiz3[i] <- X[3]*lambda[3]^i\r\n    soma[i] <- raiz1[i] + raiz2[i] + raiz3[i]\r\n  }\r\n  \r\n  out <- cbind(raiz1, raiz2, raiz3, soma)\r\n  colnames(out) <- c(\"Raiz 1\", \"Raiz 2\", \"Raiz 3\", \"y\")\r\n  \r\n  return(out)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\norbita_parc_3(X = X, lambda = lambda, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = 1:10) +\r\n  scale_y_continuous(breaks = seq(-5000, 40000, 5000)) +\r\n  scale_colour_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nExercício 2\r\nSeja a seguinte equação em diferença (também de ordem 3), com \\(\\small y_0 = 0\\), \\(\\small y_1 = 2\\), \\(\\small y_2 = 4\\):\r\n\\[\r\n1y_{t+3} - 1y_{t+2} - 2y_{t+1} +2y_{t+0} = 0 \r\n\\]\r\nTemos que:\r\n\r\n\r\na3 <- 1\r\na2 <- -1\r\na1 <- -2\r\na0 <- 2\r\ny0 <- 0\r\ny1 <- 2\r\ny2 <- 4\r\ng <- 0\r\nt <- 10\r\n\r\n\r\n\r\nComo já possuímos a função de órbita de terceira ordem, basta usá-la:\r\n\r\n\r\norbita_3o(a2 = a2, a1 = a1, a0 = a0, y0 = y0, y1 = y1, y2 = y2, g = g, t = t) %>%\r\n  ts() %>%\r\n  autoplot() +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = 1:10) +\r\n  scale_y_continuous(breaks = seq(0, 100, 10))\r\n\r\n\r\n\r\n\r\nO gráfico nos leva a inferir que temos novamente uma série explosiva e sem oscilações nem ciclos, o que indica a presença de raízes reais; e ao menos uma raíz unitária (maior que 1).\r\nAnalisando as raízes (do polinômio característico):\r\n\r\n\r\n# Vetor de coeficientes do polinomio \r\ncoefs <- c(a0, a1, a2, a3)\r\n# Raizes\r\nroots <- polyroot(coefs) %>% round(digits = 3)\r\nroots\r\n\r\n\r\n[1]  1.000+0i -1.414+0i  1.414+0i\r\n\r\n\r\n\r\n# A parte real das raizes\r\nlambda = Re(roots)\r\nlambda\r\n\r\n\r\n[1]  1.000 -1.414  1.414\r\n\r\nNote que temos uma raiz com módulo unitário e outras duas com módulo maior que a unidade. Além disso, temos uma raiz negativa, o que produziria oscilações (e explosivas). Mas esas oscilações não aparecem no gráfico. Haveria uma explicação?\r\nComo a equação é homogêna (\\(\\small g(t) = 0\\)), o steady state é 0, portanto:\r\n\r\n\r\n# Para achar A1, A2 e A3\r\nv <- c(lambda[1]^0, lambda[1]^1, lambda[1]^2, \r\n       lambda[2]^0, lambda[2]^1, lambda[2]^2,\r\n       lambda[3]^0, lambda[3]^1, lambda[3]^2)\r\n# L: matrix com os lambdas\r\nL <- matrix(data = v, ncol = 3)\r\n# B: vetor com as condições inicias\r\nB <- c(y0, y1, y2) # yp = 0 (steady state)\r\n# X: Vetor com os A_i \r\nX <- solve(L, B)\r\nX\r\n\r\n\r\n[1] -4.0024175 -0.1212868  4.1237043\r\n\r\nPara simular os três componentes de forma independente, usamos a função orbita_parc_3, que construimos anteriormente:\r\n\r\n\r\norbita_parc_3(X = X, lambda = lambda, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = 1:10) +\r\n  scale_y_continuous(breaks = seq(-20, 130, 10)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nVemos que a raíz 2 de fato oscila. Contudo, como a série é explosiva, esse comportamento é pouco identificável no comportamento da série.\r\nO Modelo de Hansen-Samuelson\r\nO Modelo econômico de Hansen-Samuelson é dado pelas equações:\r\n\\[\r\n\\begin{align}\r\n& C_t = bY_{t-1} \\\\\r\n& I_t = k(C_t-C_{t-1}) \\\\\r\n& G_t = G>0 \\\\\r\n& Y_t = C_t + I_t + G_t\r\n\\end{align}\r\n\\]\r\nonde,\r\n\\(\\small b \\in (0,1)\\): propensão marginal a consumir\r\n\\(\\small k\\): coeficiente de aceleração do investimento\r\n\\(\\small G\\): gastos públicos (consumo autônomo)\r\nPodemos analisar o comportamento da renda nacional e por substituição, do consumo das famílias \\(\\small C_t\\) e dos investimentos \\(\\small I_t\\) nessa economia hipotética.\r\nPrimeiramente, definimos os parâmetros (como dentre as equações acima aparece um termo \\(\\small Y_{t-1}\\) e um \\(\\small C_{t-1}\\), esses devem ser fornecidos para a inicialização do modelo):\r\n\r\n\r\nb <- 0.9\r\nk <- 0.7\r\nG <- 10\r\nt <- 100\r\nY0 <- 10\r\nC0 <- 2\r\n\r\n\r\n\r\nSabemos que esses são os parâmetros que servem de input para a função que vamos construir para analisar esse modelo que, por sua vez, retorna os valores das séries para \\(\\small C_t\\), \\(\\small I_t\\) e \\(\\small Y_t\\). Adicionalmente, construiremos, também, uma série para os valores de \\(\\small I = I_{ind} + G\\) (na função a seguir, Iind corresponde ao \\(\\small I_t\\) nas equações do modelo acima):\r\n\r\n\r\n# Função que calcula a orbita do modelo de Hansen-Samuelson\r\norbita_HS <- function(b, k, G, Y0, C0, t) {\r\n  \r\n  Y <- vector(mode = \"numeric\", length = t)\r\n  C <- vector(mode = \"numeric\", length = t)\r\n  I <- vector(mode = \"numeric\", length = t)\r\n  Iind <- vector(mode = \"numeric\", length = t)\r\n  \r\n  C[1] <- b * Y0\r\n  Iind[1] <- k * (C[1] - C0)\r\n  Y[1] <- C[1] + Iind[1] + G\r\n\r\n  for (i in 2:t) {\r\n    C[i] <- b * Y[i-1]\r\n    Iind[i] <- k * (C[i] - C[i-1])\r\n    Y[i] <- C[i] + Iind[i] + G\r\n    I[i] <- Iind[i] + G\r\n  }\r\n  \r\n  out <- cbind(C, I, Iind, Y)\r\n  \r\n  return(out)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\norbita_HS(b = b, k = k, G = G, Y0 = Y0, C0 = C0, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 100, 10)) +\r\n  scale_y_continuous(breaks = seq(0, 110, 10)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nObservando o gráfico e a evolução as séries podemos inferir um padrão estável. Para validar tal inferência, podemos analisar o estado estacionário, em que \\(\\small Y_t = Y_{t−1}\\) e portanto, se espera que que \\(\\small C_t = C_{t−1}\\), \\(\\small I_t = I_{t−1}\\) etc. Olhando novamente as equações do sistema no longo prazo:\r\n\\[\r\n\\begin{cases}\r\nC^* = b\\cdot Y^* \\\\\r\nI_{ind}^* = 0 \\\\\r\nI^* = G \\\\\r\nY^* = C^* + I^*\r\n\\end{cases}\r\n\\]\r\nSubstituindo \\(\\small C^*\\) e \\(\\small I^*\\) em \\(\\small Y^*\\):\r\n\\[\r\nY^* = b \\cdot Y^* + G\r\n\\]\r\nLogo,\r\n\\[\r\nY^* = \\frac{G}{1-b}\r\n\\]\r\nSubstituindo os valores atribuídos aos parâmetros na simulação, temos que:\r\n\\[\r\n\\begin{cases}\r\nY^* = 100 \\\\\r\nI^* = 10 \\\\\r\nC^* = 90\r\n\\end{cases}\r\n\\]\r\nque são justamente os valores para os quais as séries convergiram. Portanto, podemos afirmar que se trata de um modelo estável.\r\nAnálise das raízes\r\nManipulando as equações que definem o modelo de Hansen-Samuelson, obtemos uma equação em diferença de ordem 2 em \\(\\small Y_t\\), que como já vimos, deve produzir uma série com comportamento convergente no longo prazo a \\(\\small Y^∗ = 100\\) (o atrator):\r\n\\[\r\nY_t - b\\cdot (k+1)\\cdot Y_{t-1} + b \\cdot k \\cdot Y_{t-2} = G\r\n\\]\r\nPara realizar a análise dinâmica, precisamos avaliar as raízes do polinômio característico:\r\n\\[\r\np(\\lambda) = \\lambda^2 + a_1\\lambda + a_0 = 0\r\n\\]\r\nonde,\r\n\\[\r\n\\begin{cases}\r\na_2 = 1 \\\\\r\na_1 = -b(k+1) \\\\\r\na_0 = bk\r\n\\end{cases}\r\n\\]\r\nA análise qualitativa a partir dos coeficientes considera as três restrições (para que o sistema seja estável) a seguir:\r\n\\[\r\n\\begin{cases}\r\n a_0 + a_1 +  1 & > 0 \\\\\r\n a_0 - a_1 + 1 & > 0 \\\\\r\n a_0 & < 1\r\n\\end{cases}\r\n\\]\r\nAntes de fazer essa análise qualitativa, entretanto, vamos analisar essas raízes de forma quantitativa, igual feito nos exercícios anteriores:\r\n\r\n\r\na2 <- 1\r\na1 <- -b * (k + 1)\r\na0 <- b * k\r\n\r\n\r\n\r\n\r\n\r\n# Vetor de coeficientes do polinomio \r\ncoefs <- c(a0, a1, a2)\r\ncoefs\r\n\r\n\r\n[1]  0.63 -1.53  1.00\r\n\r\n# Raizes\r\nroots <- polyroot(coefs) %>% round(digits = 3)\r\nroots\r\n\r\n\r\n[1] 0.765+0.212i 0.765-0.212i\r\n\r\nComo as raízes apresentam componentes complexos, vamos calcular o módulo e o ângulo (só é preciso usar uma das raízes pois as raízes complexas sempre aparecem em conjuntos de 2 e essas possuem o mesmo módulo):\r\n\r\n\r\nR <- Mod(roots[1])\r\ntheta <- Arg(roots[1])\r\nrbind(R, theta) %>% round(digits = 3)\r\n\r\n\r\n       [,1]\r\nR     0.794\r\ntheta 0.270\r\n\r\nComo o módulo é menor que a unidade, as séries apresentam ciclos amortecidos (não explosivos).\r\nAnálise qualitativa\r\nVoltando, agora, à análise qualitativa das raízes, vamos ver se satisfazem as restrições apontadas. Relembrando que:\r\n\\(\\small \\Delta > 0\\): Raízes reais e diferentes\r\n\\(\\small \\Delta = 0\\): Raízes reais e iguais\r\n\\(\\small \\Delta < 0\\): Raízes complexas\r\nIndependente da natureza das raízes, a estabilidade é garantida quando as raízes não são maiores que a unidade.\r\nPorém, a partir do polinômio característico, é possível estabelecer condições de estabilidade para o caso de raízes reais a partir da análise dos coeficientes:\r\n\\(\\small \\Delta = 0 \\implies a_0 < 1\\)\r\n\\(\\small \\Delta > 0 \\implies a_1-2 < \\pm \\sqrt{\\Delta} < a_1+2\\):\r\n\\(a_0 > a_1 -1\\)\r\n\\(a_0 > -a_1 -1\\)\r\n\r\n\\(\\small \\Delta < 0 \\implies a_0 < 1\\)\r\nJuntando:\r\n\\[\r\n\\begin{equation}\r\n\\begin{cases}\r\n a_0 + a_1 +  1 & > 0 \\\\\r\n a_0 - a_1 + 1 & > 0 \\\\\r\n a_0 & < 1\r\n\\end{cases}\r\n\\end{equation}\r\n\\]\r\n\r\n\r\nrest1 <- 1 + a1 + a0 > 0\r\nrest2 <- 1- a1 + a0 > 0\r\nrest3 <- a0 < 1\r\ncbind(rest1, rest2, rest3)\r\n\r\n\r\n     rest1 rest2 rest3\r\n[1,]  TRUE  TRUE  TRUE\r\n\r\nComo podemos ver, as três condições são atendidas.\r\nPorém, esse é o caso para os b e k definidos no início do exercício. Podemos analisar essas condições de forma geral, para quaisquer b e k. Como já mostrado:\r\n\\[\r\n\\begin{cases}\r\na_2 = 1 \\\\\r\na_1 = -b(k+1) \\\\\r\na_0 = bk\r\n\\end{cases}\r\n\\]\r\nJuntando essas restrições e condições, temos que para o sistema ser estável:\r\n\\[\r\nb < \\frac{1}{k}\r\n\\]\r\nDo polinômio característico, temos que as raízes são tais que:\r\n\\[\r\n\\lambda_1, \\lambda_2 = \\frac{b(k+1)}{2} \\pm \\frac{\\sqrt{\\Delta}}{2}\r\n\\]\r\nonde \\(\\small \\Delta = b^2(k+1)^2 - 4bk\\).\r\nPara identificar a características dinâmicas da renda, precisamos analisar \\(\\small \\Delta\\):\r\n\\[\r\n\\Delta = b^2(k+1)^2 - 4bk \\gtreqqless 0\r\n\\]\r\nisolando b:\r\n\\[\r\nb \\gtreqqless \\frac{4k}{(k+1)^2}\r\n\\]\r\nAssim, para analisar essas condições sobre b, podemos plotar as seguintes equações:\r\n\\[\r\n\\begin{cases}\r\nb = \\frac{1}{k} \\\\\r\nb = \\frac{4k}{(k+1)^2}\r\n\\end{cases}\r\n\\]\r\n\r\n\r\nfunc1 <- function(x) 1 / x\r\nfunc2 <- function(x) (4 * x) / (x + 1)^2\r\n\r\n\r\n\r\n\r\n\r\nggplot(data = data.frame(x = 0)) +\r\n  aes(x = x) +\r\n  xlim(0, 4) + \r\n  xlab(\"k\") +\r\n  ylim(0, 1.6) +\r\n  ylab(\"b\") +\r\n  ggtitle(\"Localização das raízes\") +\r\n  stat_function(fun = func1, aes(colour = \"func1\")) +\r\n  stat_function(fun = func2, aes(colour = \"func2\")) +\r\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\r\n  geom_vline(xintercept = 1, linetype = \"dashed\") +\r\n  annotate(\"text\", x = 0, y = 0.9, label = \"A\", size = 5) +\r\n  annotate(\"text\", x = 1.2, y = 0.5, label = \"B\", size = 5) +\r\n  annotate(\"text\", x = 2.4, y = 0.7, label = \"C\", size = 5) +\r\n  annotate(\"text\", x = 3.2, y = 0.9, label = \"D\", size = 5) +\r\n  theme_hc() +\r\n  scale_y_continuous(breaks = seq(0, 1.6, 0.2), limits = c(0, 1.6)) +\r\n  scale_color_manual(\"\", values = c(\"red\", \"blue\"), \r\n                     labels = c(~frac(1,k),~frac(4*k,(k+1)^2))) +\r\n  theme(plot.title = element_text(size = 18, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"top\") \r\n\r\n\r\n\r\n\r\nComo apontado no gráfico, há 4 regiões possíveis:\r\nA: \\(\\small b < \\frac{1}{k}\\) e \\(\\small b > \\frac{4k}{(1+k)^2}\\)\r\nB: \\(\\small b < \\frac{1}{k}\\) e \\(\\small b < \\frac{4k}{(1+k)^2}\\)\r\nC: \\(\\small b > \\frac{1}{k}\\) e \\(\\small b < \\frac{4k}{(1+k)^2}\\)\r\nD: \\(\\small b > \\frac{1}{k}\\) e \\(\\small b > \\frac{4k}{(1+k)^2}\\)\r\nComo havíamos dito, a primeira restrição para a estabilidade do sistema é que \\(\\small b < \\frac{1}{k}\\), critério que apenas as regiões A e B atendem. Na região A, em que \\(\\small \\Delta > 0\\), as condições de estabilidade são que \\(\\small a_0 > a_1 - 1\\) e \\(\\small a_0 > -a_1 - 1\\). Na região B, em que \\(\\small \\Delta < 0\\), a condição de estabilidade é que \\(\\small a_0 < 1\\).\r\nO modelo de Hicks\r\nO modelo de Hicks é uma alteração do modelo de Hansen-Samuelson (HS), e é dado pelas seguintes equações:\r\n\\[\r\n\\begin{align}\r\n& Y_t = C_t + I_t  \\\\\r\n& C_t = bY_{t-1} \\\\\r\n& I_t = I'_t + I''_t \\\\\r\n& I'_t = k(Y_{t-1}-Y_{t-2}) \\\\\r\n& I''_t = A_0(1+g)^2 \\\\\r\n\\end{align}\r\n\\]\r\nonde,\r\n\\(\\small I''\\): Investimento autônomo, que cresce a uma taxa exógena \\(\\small g\\)\r\n\\(\\small I'\\): Investimento induzido pelo acelerador e dependente da demanda agregada.\r\n\\(\\small k < 1\\): condição de estabilidade\r\nAssim como para o modelo de HS, primeiramente definimos os parâmetros de inicialização da simulação:\r\n\r\n\r\nb <- 0.5  # propensão marginal a consumir\r\nk <- 0.2  # acelerador do investimento\r\ng <- 0.05 # taxa de investimento autônomo\r\nA0 <- 1\r\nY0 <- 20\r\nY1 <- 5\r\nt <- 80\r\n\r\n\r\n\r\nSabemos que esses são os parâmetros que servem de input para a função que vamos construir para analisar esse modelo que, por sua vez, retorna os valores das séries para \\(\\small C_t\\), \\(\\small I_t\\) e \\(\\small Y_t\\). Adicionalmente, construiremos, também, séries para os valores de \\(\\small I' = I_{ind}\\) e \\(\\small I'' = I_{aut}\\).\r\n\r\n\r\n# Função que calcula a orbita do modelo de Hicks\r\norbita_hicks <- function(b, k, g, A0, Y0, Y1, t) {\r\n  \r\n  C <- vector(mode = \"numeric\", length = t)\r\n  Iind <- vector(mode = \"numeric\", length = t)\r\n  Iaut <- vector(mode = \"numeric\", length = t)\r\n  I <- vector(mode = \"numeric\", length = t)\r\n  Y <- vector(mode = \"numeric\", length = t)\r\n  \r\n  C[1] <- b * Y0\r\n  Iind[1] <- k * (Y1 - Y0)\r\n  Iaut[1] <- A0 * (1 + g)^1\r\n  I[1] <- Iind[1] + Iaut[1]\r\n  Y[1] <- C[1] + I[1]\r\n  \r\n  C[2] <- b * Y1\r\n  Iind[2] <- k * (Y[1] - Y1)\r\n  Iaut[2] <- A0 * (1 + g)^2\r\n  I[2] <- Iind[2] + Iaut[2]\r\n  Y[2] <- C[2] + I[2]\r\n  \r\n  for (i in 3:t) {\r\n    C[i] <- b * Y[i-1]\r\n    Iind[i] <- k * (Y[i-1] - Y[i-2])\r\n    Iaut[i] <- A0 * (1 + g)^i\r\n    I[i] <- Iind[i] + Iaut[i]\r\n    Y[i] <- C[i] + I[i]\r\n  }\r\n  \r\n  out <- cbind(C, I, Iind, Iaut, Y)\r\n  \r\n  return(out)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\norbita_hicks(b = b, k = k, g = g, A0 = A0, Y0 = Y0, Y1 = Y1, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 80, 10)) +\r\n  scale_y_continuous(breaks = seq(0, 100, 10)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nNote que as séries parecem explodir. Contudo, devemos considerar que \\(\\small I_t = A0 \\cdot (1 + g)^t\\) cresce exponencialmente a uma taxa g constante. Logo, havendo um padrão de convergência, não podemos esperar que o equilíbrio seja fixo, pois todas as variáveis interagem entre si.\r\nAnálise de estabilidade\r\nPor substituição, obtemos a equação em diferenças de ordem 2 em \\(\\small Y_t\\):\r\n\\[\r\n1Y_t − (b + k)Y_{t−1} + kY_{t−2} = A_0(1 + g)^t\r\n\\]\r\ncujo polinômio característico é dado por:\r\n\\[\r\n\\lambda^2 - (b+k)\\lambda + k = 0\r\n\\]\r\nAssim:\r\n\\[\r\n\\begin{cases}\r\na_2 = 1 \\\\\r\na_1 = -(b+k) \\\\\r\na_0 = k\r\n\\end{cases}\r\n\\]\r\nSejam as condições de estabilidade:\r\n\\[\r\n\\begin{equation}\r\n\\begin{cases}\r\n a_0 + a_1 +  1 & > 0 \\\\\r\n a_0 - a_1 + 1 & > 0 \\\\\r\n a_0 & < 1\r\n\\end{cases}\r\n\\end{equation}\r\n\\]\r\nAplicando os valores do exercícios:\r\n\r\n\r\na2 <- 1\r\na1 <- -(b+k)\r\na0 <- k\r\n\r\n\r\n\r\n\r\n\r\nrest1 <- 1 + a1 + a0 > 0\r\nrest2 <- 1- a1 + a0 > 0\r\nrest3 <- a0 < 1\r\ncbind(rest1, rest2, rest3)\r\n\r\n\r\n     rest1 rest2 rest3\r\n[1,]  TRUE  TRUE  TRUE\r\n\r\nLogo, para o conjunto de valores dos parâmetros usados na simulação, teremos um sistema estável, com um equilíbrio móvel, dada a forma de \\(\\small g(t)=A_0(1+g)^t\\).\r\nCalculando o discriminante e as raízes temos que:\r\n\r\n\r\n# Vetor de coeficientes do polinomio \r\ncoefs <- c(a0, a1, a2)\r\ncoefs\r\n\r\n\r\n[1]  0.2 -0.7  1.0\r\n\r\n\r\n\r\n# Raizes\r\nroots <- polyroot(coefs) %>% round(digits = 3)\r\nroots\r\n\r\n\r\n[1] 0.35+0.278i 0.35-0.278i\r\n\r\nComo as raízes apresentam componentes complexos, vamos calcular o módulo e o ângulo:\r\n\r\n\r\nR <- Mod(roots[1])\r\ntheta <- Arg(roots[1])\r\nrbind(R, theta) %>% round(digits = 3)\r\n\r\n\r\n       [,1]\r\nR     0.447\r\ntheta 0.671\r\n\r\nComo o módulo é menor que a unidade, as séries apresentam ciclos amortecidos (não explosivos)\r\nA solução particular será dada por:\r\n\\[\r\nY^p_t = K(1 + g)^t\r\n\\]\r\nSubstituindo \\(\\small Y^p_t\\), \\(\\small Y^p_{t−1}\\) e \\(\\small Y^p_{t−2}\\) na eq. em diferenças, temos que:\r\n\\[\r\nK = \\frac{A_0(1+g)^2}{(1 + g)^2 − (b + k)(1 + g) + k}\r\n\\]\r\ncondicionado a um denominador positivo \\(\\small \\forall t\\). Assim, neste caso, temos a solução homogênea e particular dadas por:\r\n\r\n\r\n# Calculando K\r\nK <- (A0 * (1 + g)^2) / ((1 + g)^2 - (b + k) * (1 + g) + k)\r\nK\r\n\r\n\r\n[1] 1.942731\r\n\r\n\r\n\r\n# Talvez usar Y[1] e Y[2] mesmo\r\nA3 <- Y0 - K\r\nA4 <- (1 / sin(theta)) * ((Y1 - K * (1 + g)) / R - A3 * cos(theta))\r\nrbind(A3, A4)\r\n\r\n\r\n        [,1]\r\nA3  18.05727\r\nA4 -12.08601\r\n\r\n\r\n\r\norbita_hicks_analitica <- function(A3, A4, R, theta, t) {\r\n    \r\n  Yh <- vector(mode = \"numeric\", length = t)\r\n  Yp <- vector(mode = \"numeric\", length = t)\r\n  Y2 <- vector(mode = \"numeric\", length = t)\r\n  \r\n  for (i in 1:t) {\r\n    Yh[i] <- (R^i) * (A3 * cos(theta * i) + A4 * sin(theta * i))\r\n    Yp[i] <- K * (1 + g)^i\r\n    Y2[i] <- Yh[i] + Yp[i]\r\n  }\r\n  \r\n  out <- cbind(Yh, Yp, Y2)\r\n  \r\n  return(out)\r\n} \r\n\r\n\r\n\r\n\r\n\r\norbita_hicks_analitica(A3 = A3, A4 = A4, R = R, theta = theta, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 80, 10)) +\r\n  scale_y_continuous(breaks = seq(0, 100, 10)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nComparando os dois resultados (simulação e analítico) para Y:\r\n\r\n\r\nY <- orbita_hicks(b = b, k = k, g = g, A0 = A0, Y0 = Y0, Y1 = Y1, t = t)[,5]\r\nanalit <- orbita_hicks_analitica(A3 = A3, A4 = A4, R = R, theta = theta, t = t)\r\n\r\nresult <- cbind(analit, Y)\r\nhead(result, n = 10)\r\n\r\n\r\n                Yh       Yp        Y2        Y\r\n [1,]  2.960132159 2.039868 5.0000000 8.050000\r\n [2,] -1.535460863 2.141861 0.6064004 4.212500\r\n [3,] -1.666209648 2.248954 0.5827446 2.496375\r\n [4,] -0.859586240 2.361402 1.5018158 2.120469\r\n [5,] -0.268828340 2.479472 2.2106438 2.261335\r\n [6,] -0.016448261 2.603446 2.5869975 2.498936\r\n [7,]  0.042193819 2.733618 2.7758118 2.704089\r\n [8,]  0.032821772 2.870299 2.9031207 2.870530\r\n [9,]  0.014545591 3.013814 3.0283594 3.019882\r\n[10,]  0.003624649 3.164505 3.1681292 3.168706\r\n\r\nresult %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 80, 10)) +\r\n  scale_y_continuous(breaks = seq(0, 100, 10)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nUtilizando Y[1] e Y[2] ao invés de Y0 e Y1:\r\n\r\n\r\nY <- orbita_hicks(b = b, k = k, g = g, A0 = A0, Y0 = Y0, Y1 = Y1, t = t)[,5]\r\n\r\nA3 <- Y[1] - K\r\nA4 <- (1 / sin(theta)) * ((Y[2] - K * (1 + g)) / R - A3 * cos(theta))\r\nrbind(A3, A4)\r\n\r\n\r\n        [,1]\r\nA3 6.1072687\r\nA4 0.1262162\r\n\r\n\r\n\r\nanalit <- orbita_hicks_analitica(A3 = A3, A4 = A4, R = R, theta = theta, t = t)\r\n\r\nresult <- cbind(analit, Y)\r\nhead(result, n = 10)\r\n\r\n\r\n                 Yh       Yp       Y2        Y\r\n [1,]  2.1726321586 2.039868 4.212500 8.050000\r\n [2,]  0.3007079366 2.141861 2.442569 4.212500\r\n [3,] -0.2235615876 2.248954 2.025393 2.496375\r\n [4,] -0.2165697457 2.361402 2.144832 2.120469\r\n [5,] -0.1069347938 2.479472 2.372537 2.261335\r\n [6,] -0.0315871856 2.603446 2.571859 2.498936\r\n [7,] -0.0007471691 2.733618 2.732871 2.704089\r\n [8,]  0.0057875959 2.870299 2.876086 2.870530\r\n [9,]  0.0042005896 3.013814 3.018014 3.019882\r\n[10,]  0.0017841436 3.164505 3.166289 3.168706\r\n\r\nresult %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 80, 10)) +\r\n  scale_y_continuous(breaks = seq(0, 100, 10)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nEm ambos os casos, a séries de Y da simulação e da forma analítica se sobrepôem, mesmo que apresente valoris inicias divergentes.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-06-17T11:04:42-03:00"
    },
    {
      "path": "prova.html",
      "title": "Prova",
      "description": "Resolução da Prova de Economia Matemática.\n",
      "author": [
        {
          "name": "Rafael Peixoto",
          "url": {}
        }
      ],
      "date": "05-31-2021",
      "contents": "\r\n\r\nContents\r\nQuestão 1\r\nItem (a)\r\nItem (b)\r\nItem (c)\r\nItem (d)\r\n\r\nQuestão 2\r\nItem (a)\r\nItem (b)\r\nItem (c)\r\nCaso Estável\r\nCaso Instável\r\n\r\n\r\n\r\nQuestão 1\r\nItem (a)\r\nProponha uma matriz de transição T e analise a dinâmica do sistema\r\nComo descrito no enunciado, para encontrar a matriz de Transição T, basta calcular cada probabilidade de deslocamento de classes por parte das firmas, dividindo-se o número de firmas em cada uma das classes pelo total da respectiva coluna.\r\nSeja a tabela das transições:\r\n\r\n\r\n{\"x\":{\"filter\":\"none\",\"data\":[[\"I\",\"II\",\"III\",\"IV\",\"V\",\"Total - 2015\"],[66,22,1,3,2,94],[22,47,23,6,2,100],[6,21,50,22,5,104],[2,7,22,51,18,100],[2,2,5,18,73,100],[98,99,101,100,100,498]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>I<\\/th>\\n      <th>II<\\/th>\\n      <th>III<\\/th>\\n      <th>IV<\\/th>\\n      <th>V<\\/th>\\n      <th>Total - 2020<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"tip\",\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}\r\nA matriz de transição T fica:\r\n\r\n\r\nmatT <- matrix(c(\r\n  (c(66, 22, 1, 3, 2)  / 94 ),\r\n  (c(22, 47, 23, 6, 2) / 100),\r\n  (c(6, 21, 50, 22, 5) / 104),\r\n  (c(2, 7, 22, 51, 18) / 100),\r\n  (c(2, 2, 5, 18, 73)  / 100)), \r\n  ncol = 5)\r\nmatT\r\n\r\n\r\n           [,1] [,2]       [,3] [,4] [,5]\r\n[1,] 0.70212766 0.22 0.05769231 0.02 0.02\r\n[2,] 0.23404255 0.47 0.20192308 0.07 0.02\r\n[3,] 0.01063830 0.23 0.48076923 0.22 0.05\r\n[4,] 0.03191489 0.06 0.21153846 0.51 0.18\r\n[5,] 0.02127660 0.02 0.04807692 0.18 0.73\r\n\r\n\\[\r\n\\begin{aligned}\r\nT = \r\n  \\begin{bmatrix}\r\n 0.702 & 0.22 & 0.058 & 0.02 & 0.02 \\\\\r\n 0.234 & 0.47 & 0.202 & 0.07 & 0.02 \\\\\r\n 0.011 & 0.23 & 0.481 & 0.22 & 0.05 \\\\\r\n 0.032 & 0.06 & 0.212 & 0.51 & 0.18 \\\\\r\n 0.021 & 0.02 & 0.048 & 0.18 & 0.73\r\n  \\end{bmatrix}\r\n\\end{aligned}\r\n\\]\r\nPara analisar a dinâmica do sistema, é preciso verificar como a matriz T modifica a composição de estratos, \\(X_t\\), ao longo do tempo, uma vez que:\r\n\\[\r\nX_{t+1} = T \\cdot X_t\r\n\\]\r\nGeneralizando:\r\n\\[\r\nX_{t+n} = T^n \\cdot X_t\r\n\\]\r\nOu,\r\n\\[\r\n\\begin{aligned}\r\n   \\begin{bmatrix}\r\n      x_{1,t} \\\\\r\n      x_{2,t} \\\\\r\n      x_{3,t} \\\\\r\n      x_{4,t} \\\\\r\n      x_{5,t} \\\\\r\n   \\end{bmatrix} = \r\n   \\begin{pmatrix}\r\n     \\begin{bmatrix}\r\n        0.702 & 0.22 & 0.058 & 0.02 & 0.02 \\\\\r\n        0.234 & 0.47 & 0.202 & 0.07 & 0.02 \\\\\r\n        0.011 & 0.23 & 0.481 & 0.22 & 0.05 \\\\\r\n        0.032 & 0.06 & 0.212 & 0.51 & 0.18 \\\\\r\n        0.021 & 0.02 & 0.048 & 0.18 & 0.73\r\n  \\end{bmatrix} \r\n  \\end{pmatrix} ^t \\cdot\r\n     \\begin{bmatrix}\r\n      x_{1,1} \\\\\r\n      x_{2,1} \\\\\r\n      x_{3,1} \\\\\r\n      x_{4,1} \\\\\r\n      x_{5,1} \\\\\r\n   \\end{bmatrix}\r\n\\end{aligned}\r\n\\]\r\nDe acordo com Boldrini (pp. 18-19), caso a matriz T seja regular, é possível fazer previsões de longo prazo e essas não dependem dos valores inicias (\\(t=1\\)). Para que a matriz T seja regular, basta que ela possua todos os seus elementos não nulos. E sendo a matriz T regular, as potências \\(T^n\\) vão se aproximar de uma matriz \\(P\\):\r\n\r\n\r\nmatP <- matT\r\nfor(i in 1:1000) {\r\n matP <- matP %*% matT\r\n}\r\nmatP\r\n\r\n\r\n          [,1]      [,2]      [,3]      [,4]      [,5]\r\n[1,] 0.2127140 0.2127140 0.2127140 0.2127140 0.2127140\r\n[2,] 0.2013371 0.2013371 0.2013371 0.2013371 0.2013371\r\n[3,] 0.1949594 0.1949594 0.1949594 0.1949594 0.1949594\r\n[4,] 0.1947589 0.1947589 0.1947589 0.1947589 0.1947589\r\n[5,] 0.1962305 0.1962305 0.1962305 0.1962305 0.1962305\r\n\r\nTodas as colunas de \\(P\\) são iguais, dadas pelo vetor \\(V\\):\r\n\r\n\r\nV <- matP[,1]\r\nV\r\n\r\n\r\n[1] 0.2127140 0.2013371 0.1949594 0.1947589 0.1962305\r\n\r\nPara qualquer que seja o vetor de probabilidade inicial, \\(V_1\\), o vetor de probabilidades \\(T^nV_1\\) se aproxima de \\(V\\). Assim, no longo não há mais mudança, uma vez que \\(V=TV\\).\r\n\r\n\r\ndata.frame(\"V\" = matrix(V, ncol = 1), \"TV\" = matT %*% V)\r\n\r\n\r\n          V        TV\r\n1 0.2127140 0.2127140\r\n2 0.2013371 0.2013371\r\n3 0.1949594 0.1949594\r\n4 0.1947589 0.1947589\r\n5 0.1962305 0.1962305\r\n\r\nO vetor \\(V\\) indica as probabilidades de uma firmar acabar em cada estrato. Assim, no longo prazo, há 21,2% de probabilidade de a firmar estar no estrato I, 20,1% no estrato II, 19,4% no estrato III, 19,4% no estrato IV e 19,6% no estrato V.\r\nItem (b)\r\nEstime a composição das classes na estrutura produtiva projetada para 2025 e para 2030\r\nEm 2020, as firmas eram assim divididas em estratos:\r\n\\[\r\n\\begin{aligned}\r\n  X_{2020} = \r\n  \\begin{bmatrix}\r\n    98 \\\\\r\n    99 \\\\\r\n    101 \\\\\r\n    100 \\\\\r\n    100\r\n  \\end{bmatrix}\r\n\\end{aligned}\r\n\\]\r\nPara encontrar \\(X_{2025}\\) e \\(X_{2030}\\), basta utilizarmos a equação \\(X_{t+1} = T \\cdot X_t\\):\r\n\\[\r\n\\begin{aligned}\r\n   \\begin{bmatrix}\r\n      x_{1,2025} \\\\\r\n      x_{2,2025} \\\\\r\n      x_{3,2025} \\\\\r\n      x_{4,2025} \\\\\r\n      x_{5,2025} \\\\\r\n   \\end{bmatrix} = \r\n     \\begin{bmatrix}\r\n        0.702 & 0.22 & 0.058 & 0.02 & 0.02 \\\\\r\n        0.234 & 0.47 & 0.202 & 0.07 & 0.02 \\\\\r\n        0.011 & 0.23 & 0.481 & 0.22 & 0.05 \\\\\r\n        0.032 & 0.06 & 0.212 & 0.51 & 0.18 \\\\\r\n        0.021 & 0.02 & 0.048 & 0.18 & 0.73\r\n  \\end{bmatrix} \\cdot\r\n     \\begin{bmatrix}\r\n        98 \\\\\r\n        99 \\\\\r\n        101 \\\\\r\n        100 \\\\\r\n        100\r\n   \\end{bmatrix}\r\n\\end{aligned}\r\n\\]\r\n\r\n\r\nx2020 <- matrix(data = c(98, 99, 101, 100, 100), ncol = 1)\r\nx2025 <- matT %*% x2020\r\nx2025\r\n\r\n\r\n          [,1]\r\n[1,] 100.41543\r\n[2,]  98.86040\r\n[3,]  99.37025\r\n[4,]  99.43304\r\n[5,]  99.92088\r\n\r\nArredondando:\r\n\\[\r\n\\begin{aligned}\r\n  X_{2025} = \r\n  \\begin{bmatrix}\r\n    100 \\\\\r\n    99 \\\\\r\n    99 \\\\\r\n    99 \\\\\r\n    100\r\n  \\end{bmatrix}\r\n\\end{aligned}\r\n\\]\r\n\r\n\r\nx2030 <- matT %*% x2025\r\nx2030\r\n\r\n\r\n          [,1]\r\n[1,] 101.97372\r\n[2,]  98.98975\r\n[3,]  98.45161\r\n[4,]  98.85361\r\n[5,]  99.73131\r\n\r\nArredondando:\r\n\\[\r\n\\begin{aligned}\r\n  X_{2030} = \r\n  \\begin{bmatrix}\r\n    102 \\\\\r\n    99 \\\\\r\n    98 \\\\\r\n    99 \\\\\r\n    100\r\n  \\end{bmatrix}\r\n\\end{aligned}\r\n\\]\r\n\r\n\r\ndata.frame(x2020, x2025, x2030) %>% round()\r\n\r\n\r\n  x2020 x2025 x2030\r\n1    98   100   102\r\n2    99    99    99\r\n3   101    99    98\r\n4   100    99    99\r\n5   100   100   100\r\n\r\nItem (c)\r\nPor simulação, mostre a evolução da estrutura no longo prazo e analise as suas características dinâmicas. Justifique a resposta. Qual é a composição das classes para \\(t \\to \\infty\\)? Como interpretamos esses valores?\r\nVamos criar a função para rodar a simulação:\r\n\r\n\r\nsimulacao <- function(matT, Xi, t) {\r\n  \r\n  X <- matrix(data = NA, nrow = 5, ncol = t)\r\n  X[, 1] <- Xi\r\n  \r\n  for (i in 1:(t-1)) {\r\n    X[, i+1] <- matT %*% X[, i]\r\n  }\r\n  \r\n  X <- t(X)\r\n  colnames(X) <- paste0(rep(\"X_\"), 1:5)\r\n  \r\n  return(X)\r\n}\r\n\r\n\r\n\r\nAgora vamos Inicializar os parâmetros da função:\r\n\r\n\r\nmatT <- matrix(c(\r\n  (c(66, 22, 1, 3, 2)  / 94 ),\r\n  (c(22, 47, 23, 6, 2) / 100),\r\n  (c(6, 21, 50, 22, 5) / 104),\r\n  (c(2, 7, 22, 51, 18) / 100),\r\n  (c(2, 2, 5, 18, 73)  / 100)), \r\n  ncol = 5)\r\nXi <- x2020\r\nt <- 20\r\nlist(matT = matT, Xi = Xi, t = t)\r\n\r\n\r\n$matT\r\n           [,1] [,2]       [,3] [,4] [,5]\r\n[1,] 0.70212766 0.22 0.05769231 0.02 0.02\r\n[2,] 0.23404255 0.47 0.20192308 0.07 0.02\r\n[3,] 0.01063830 0.23 0.48076923 0.22 0.05\r\n[4,] 0.03191489 0.06 0.21153846 0.51 0.18\r\n[5,] 0.02127660 0.02 0.04807692 0.18 0.73\r\n\r\n$Xi\r\n     [,1]\r\n[1,]   98\r\n[2,]   99\r\n[3,]  101\r\n[4,]  100\r\n[5,]  100\r\n\r\n$t\r\n[1] 20\r\n\r\nFinalmente, a simulação:\r\n\r\n\r\nsimulacao(matT = matT, Xi = Xi, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, t, 2)) +\r\n  scale_y_continuous(breaks = seq(90, 110, 1)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(plot.title = element_text(size = 18, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"top\") +\r\n  ggtitle(\"Evolução da Estrutura de Firmas\", subtitle = paste0(\"t = \", t)) +\r\n  xlab(\"t\") + \r\n  ylab(\"X\")\r\n\r\n\r\n\r\n\r\nA composição das classes parece convergir para um equilíbrio no longo prazo. Para ter certeza, vejamos em um período de tempo maior:\r\n\r\n\r\nt <- 200\r\nsimulacao(matT = matT, Xi = Xi, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, t, 20)) +\r\n  scale_y_continuous(breaks = seq(90, 110, 1)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(plot.title = element_text(size = 18, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"top\") +\r\n  ggtitle(\"Evolução da Estrutura de Firmas\", subtitle = paste0(\"t = \", t)) +\r\n  xlab(\"t\") + \r\n  ylab(\"X\")\r\n\r\n\r\n\r\n\r\nDe fato, quando \\(t \\to \\infty\\), a composição das classes converge para um equilíbrio. Vejamos essa composição em \\(t = 1000\\):\r\n\r\n\r\nXf <- simulacao(matT = matT, Xi = Xi, t = 1000) %>% tail(1)\r\nXf\r\n\r\n\r\n             X_1      X_2      X_3      X_4      X_5\r\n[1000,] 105.9316 100.2659 97.08981 96.98995 97.72278\r\n\r\nNo longo prazo (arredondando),\r\n\\[\r\n\\begin{aligned}\r\n  X_{t\\to\\infty} = \r\n  \\begin{bmatrix}\r\n    106 \\\\\r\n    100 \\\\\r\n    97 \\\\\r\n    97 \\\\\r\n    98\r\n  \\end{bmatrix}\r\n\\end{aligned}\r\n\\]\r\nSe calcularmos as percentagens em cada estrato nesse longo prazo:\r\n\r\n\r\nXf_pct <- Xf / sum(Xf)\r\nXf_pct\r\n\r\n\r\n             X_1       X_2       X_3       X_4       X_5\r\n[1000,] 0.212714 0.2013371 0.1949594 0.1947589 0.1962305\r\n\r\nEssas são as mesmas porcentagens do vetor \\(V\\) encontrado no item (a):\r\n\r\n\r\ndata.frame(\"V\" = V, \"Xf_pct\" = matrix(Xf_pct, ncol = 1))\r\n\r\n\r\n          V    Xf_pct\r\n1 0.2127140 0.2127140\r\n2 0.2013371 0.2013371\r\n3 0.1949594 0.1949594\r\n4 0.1947589 0.1947589\r\n5 0.1962305 0.1962305\r\n\r\nO que corrobora a hipótese de que no longo prazo o sistema tende a um equilíbrio, uma vez que a matriz de transição é regular. Tal equilíbrio é dado pelo vetor \\(V\\), que indica as porcentagens finais em cada estrato, independente do vetor inicial \\(V_1\\):\r\n\r\n\r\nX_alt <- simulacao(matT = matT, \r\n                   Xi = round(runif(n = 5, min = 80, max = 120)), \r\n                   t = 1000) %>% tail(1)\r\nX_alt\r\n\r\n\r\n             X_1      X_2      X_3      X_4      X_5\r\n[1000,] 107.6333 101.8766 98.64948 98.54803 99.29263\r\n\r\nX_alt_pct <- X_alt / sum(X_alt)\r\nX_alt_pct\r\n\r\n\r\n             X_1       X_2       X_3       X_4       X_5\r\n[1000,] 0.212714 0.2013371 0.1949594 0.1947589 0.1962305\r\n\r\ndata.frame(\"V\" = V, \"Xf_alt_pct\" = matrix(X_alt_pct, ncol = 1))\r\n\r\n\r\n          V Xf_alt_pct\r\n1 0.2127140  0.2127140\r\n2 0.2013371  0.2013371\r\n3 0.1949594  0.1949594\r\n4 0.1947589  0.1947589\r\n5 0.1962305  0.1962305\r\n\r\nItem (d)\r\nGere uma matriz de Markov aleatória (que atenda às características da matriz de transição e para cinco classes) e a partir de uma estrutura produtiva inicial que você escolha, analise a estrutura final para \\(t \\to \\infty\\). Compare a dinâmica deste sistema com o anterior (o resultante dos ítens a-c) e justifique as suas observações a partir da análise de estabilidade. Há características persistentes?\r\nGerando uma matriz de Markov e uma estrutura produtiva inicial aleatórias:\r\n\r\n\r\nset.seed(20)\r\nA <- matrix(data = NA, nrow = 5, ncol = 5)\r\nfor (i in 1:5) {\r\n  A[, i] <- round(runif(n = 5, min = 1, max = 100))\r\n  A[, i] <- A[, i] / sum(A[, i])\r\n}\r\nX0 <- matrix(data = round(runif(n = 5, min = 80, max = 120)), ncol = 1)\r\n\r\n\r\n\r\nInicializando os parâmetros:\r\n\r\n\r\nmatT <- A\r\nXi <- X0\r\nt <- 20\r\nlist(matT = matT, Xi = Xi, t = t)\r\n\r\n\r\n$matT\r\n          [,1]       [,2]        [,3]      [,4]       [,5]\r\n[1,] 0.2565598 0.52406417 0.295081967 0.2266010 0.37037037\r\n[2,] 0.2244898 0.05347594 0.311475410 0.1625616 0.02962963\r\n[3,] 0.0845481 0.04278075 0.004098361 0.0591133 0.33333333\r\n[4,] 0.1545190 0.17647059 0.307377049 0.1477833 0.06666667\r\n[5,] 0.2798834 0.20320856 0.081967213 0.4039409 0.20000000\r\n\r\n$Xi\r\n     [,1]\r\n[1,]   83\r\n[2,]  116\r\n[3,]  120\r\n[4,]   83\r\n[5,]  107\r\n\r\n$t\r\n[1] 20\r\n\r\nSimulando:\r\n\r\n\r\nsimulacao(matT = matT, Xi = Xi, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, t, 20)) +\r\n  scale_y_continuous(breaks = seq(50, 200, 10)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(plot.title = element_text(size = 18, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"top\") +\r\n  ggtitle(\"Evolução da Estrutura de Firmas\", subtitle = paste0(\"t = \", t)) +\r\n  xlab(\"t\") + \r\n  ylab(\"X\")\r\n\r\n\r\n\r\n\r\nNo longo prazo, a estrutura produtiva também converge para um equilíbrio, assim como a do sistema anterior. Esse resultado está de acordo com o que Boldrini (pp. 18-19) afirma, de que caso a matriz de transição seja regular, é possível fazer previsões de longo prazo.\r\nVejamos essa composição em t = 1000:\r\n\r\n\r\nXf <- simulacao(matT = matT, Xi = Xi, t = 1000) %>% tail(1)\r\nXf %>% round()\r\n\r\n\r\n        X_1 X_2 X_3 X_4 X_5\r\n[1000,] 166  78  63  79 124\r\n\r\nOs valores estão de acordo com o que o gráfico apresenta. Se calcularmos as percentagens em cada estrato nesse longo prazo:\r\n\r\n\r\nXf_pct <- Xf / sum(Xf)\r\nXf_pct\r\n\r\n\r\n              X_1       X_2       X_3       X_4       X_5\r\n[1000,] 0.3251673 0.1523216 0.1247386 0.1545188 0.2432537\r\n\r\nAgora, calculando a matriz \\(P = T^n\\):\r\n\r\n\r\nmatP <- matT\r\nfor(i in 1:1000) {\r\nmatP <- matP %*% matT\r\n}\r\nmatP\r\n\r\n\r\n          [,1]      [,2]      [,3]      [,4]      [,5]\r\n[1,] 0.3251673 0.3251673 0.3251673 0.3251673 0.3251673\r\n[2,] 0.1523216 0.1523216 0.1523216 0.1523216 0.1523216\r\n[3,] 0.1247386 0.1247386 0.1247386 0.1247386 0.1247386\r\n[4,] 0.1545188 0.1545188 0.1545188 0.1545188 0.1545188\r\n[5,] 0.2432537 0.2432537 0.2432537 0.2432537 0.2432537\r\n\r\nTemos o vetor \\(V\\) das probabilidades no longo prazo:\r\n\r\n\r\nV <- matP[,1]\r\nV\r\n\r\n\r\n[1] 0.3251673 0.1523216 0.1247386 0.1545188 0.2432537\r\n\r\nComparando os dois vetores de probabilidades:\r\n\r\n\r\ndata.frame(\"V\" = V, \"Xf_pct\" = matrix(Xf_pct, ncol = 1))\r\n\r\n\r\n          V    Xf_pct\r\n1 0.3251673 0.3251673\r\n2 0.1523216 0.1523216\r\n3 0.1247386 0.1247386\r\n4 0.1545188 0.1545188\r\n5 0.2432537 0.2432537\r\n\r\nAssim como no sistema dos itens (a) a (c), como \\(T\\) é regular, esse sistema também entra em equilíbrio no longo prazo, com as probabilidades dos estratos sendo iguais as probabilidades do vetor \\(V\\) — resultante de \\(T^n\\), com \\(n \\to \\infty\\).\r\nQuestão 2\r\nItem (a)\r\nElabore a descrição do modelo e a representação formal do mesmo (as equações)\r\nDe acordo com Possas e Baltar, o modelo de Kalecki, em sua primeira versão (1933), é composto por:\r\n\\(P\\): Lucro\r\n\\(C\\): Consumo dos capitalistas\r\n\\(B\\): Parte constante do consumo dos capitalistas\r\n\\(I\\): Investimento bruto (encomendas)\r\n\\(A\\): Produção e entrega de bens de investimento\r\nCom \\(A_t= I_{t-\\theta}\\), onde \\(\\theta\\) é o período médio de construção e instação dos equipamentos\r\n\r\n\\(K\\): Capital fixo\r\nA partir dessas variáveis, são construídas as equações do modelo:\r\n\\[\\begin{align}\r\n  P_t = C_t  + A_t\r\n\\end{align}\\]\r\n\\[\\begin{align}\r\n  C_t = B  + \\lambda P_t\r\n\\end{align}\\]\r\nSendo que \\(\\lambda\\) é constante no curto prazo.\r\nDe (1) e (2):\r\n\\[\\begin{align}\r\n  P_t = \\dfrac{B+A_t}{1-\\lambda}\r\n\\end{align}\\]\r\nAs decisões de investimento são dadas pela função\r\n\\[\\begin{align}\r\n  \\dfrac{I_t}{K_t} = f(\\dfrac{P_t}{K_t})\r\n\\end{align}\\]\r\nComo de (3) tem-se que \\(\\dfrac{P}{K}\\) é proporcional a \\(\\dfrac{B+A}{K}\\), (4) pode ser reescrita como:\r\n\\[\\begin{align}\r\n  \\dfrac{I_t}{K_t} = \\phi (\\dfrac{B+A_t}{K_t})\r\n\\end{align}\\]\r\nAssim, supondo uma função linear:\r\n\\[\\begin{align}\r\n  I_t = m (B+A_t) - nK_t\r\n\\end{align}\\]\r\nOs autores apontam que é necessário ter \\(m>0\\), sendo \\(\\phi\\) uma função crescente, e \\(n>0\\) para que o modelo comporte a ocorrência de ciclos econômicos.\r\nA variação do capital fixo, K, em cada período, é, por definição:\r\n\\[\\begin{align}\r\n  \\Delta K_t = K_{t+1} - K_t = A_t - U\r\n\\end{align}\\]\r\nonde U representa a reposição de capital.\r\nDa definição tem-se que \\(I_t = A_{t+\\theta}\\). Partindo de \\(\\theta = 1\\) e substituindo (7) em (6):\r\n\\[\\begin{align}\r\n  \\boxed{K_{t+2} - (m + 1) K_{t+1} + (m + n) K_t = mB + (m - 1) U}\r\n\\end{align}\\]\r\nque é uma equação em diferença de segunda ordem, do tipo:\r\n\\[\r\n\\begin{aligned}\r\n  y_{t+2} + a_1y_{t+1} + a_2y_t = c\r\n\\end{aligned}\r\n\\]\r\nCom\r\n\\[\\begin{align}\r\n  \\begin{cases}\r\n    a_1 &=  -(m+1) \\\\\r\n    a_2 &=  (m+n) \\\\\r\n    c &=  mB + (m-1) U\r\n  \\end{cases}\r\n\\end{align}\\]\r\nItem (b)\r\nDetermine as condições de estabilidade do modelo em função dos parâmetros\r\nA solução da equação homogênea (\\(c=0\\)) é do tipo \\(y_t=kx^t\\), sendo \\(k\\) e \\(x\\) coeficientes que precisam ser determinados.\r\nSubstituindo a solução \\(y_t=kx^t\\) na equação homogênea, tem-se:\r\n\\[\r\n\\begin{aligned}\r\n  x^2 + a_1x + a_2 = 0\r\n\\end{aligned}\r\n\\]\r\nAs raízes \\((x_1,x_2)\\) definirão o comportamento da variável \\(y\\) no tempo.\r\nApenas com raízes complexas há a ocorrência de flutuações cíclicas no modelo. Nesse caso, a solução homogênea será da forma:\r\n\\[\r\ny_t = ar^tcos(wt + \\epsilon)\r\n\\]\r\nonde \\(a\\) e \\(\\epsilon\\) são arbitrárias e dependem apenas das condições iniciais.\r\nDe acordo com os autores, a ocorrência de flutuações cíclicas depende da condição \\(a_1^2<4a_2\\). Juntando com (9), tem-se:\r\n\\[\\begin{align}\r\n  (m-1)^2 < 4n\r\n\\end{align}\\]\r\nTambém a partir de (9), os coeficientes \\(w\\) e \\(r\\) ficam assim:\r\n\\[\r\n\\begin{aligned}\r\n&w = cos^{-1} \\begin{pmatrix} \\dfrac{m+1}{2\\sqrt{m+n}} \\end{pmatrix} \\\\[10pt]\r\n&r = \\sqrt{m+n}\r\n\\end{aligned}\r\n\\]\r\nCom isso, as flutuações dos ciclos podem ser de três tipos:\r\nFlutuações explosivas: \\(r > 1 \\to m + n > 1\\)\r\nFlutuações amortecidas: \\(r < 1 \\to m + n < 1\\)\r\nFlutuações regulares: \\(r = 1 \\to m + n = 1\\)\r\nPor fim, as demais variáveis (renda, lucros, investimento) terão o mesmo comportamento\r\nItem (c)\r\nSimule um caso estável e um caso instável\r\nPara simular uma equação em diferença de ordem 2, vamos construir uma função. Lembrando que a forma geral da equação homogênea é\r\n\\[\r\n\\begin{aligned}\r\n  y_{t+2} + a_1y_{t+1} + a_2y_t = 0 \\\\\r\n  y_{t+2} = -a_1y_{t+1} - a_2y_t\r\n\\end{aligned}\r\n\\]\r\n\r\n\r\nsimulacao_2o <- function(y0, y1, a1, a2, t) {\r\n  \r\n  out <- vector(mode = \"numeric\", length = t)\r\n  out[1] <- y0\r\n  out[2] <- y1\r\n  for (i in 1:(t-2)) {\r\n    out[i+2] <- -a1*out[i+1] -a2*out[i]\r\n  }\r\n  \r\n  return(out)\r\n  \r\n}\r\n\r\n\r\n\r\nPara rodar a simulação, precisamos de valores paras as condições iniciais \\(y_0\\) e \\(y_1\\) e para os parâmetros \\(a_1\\) e \\(a_2\\). Lembrando que:\r\n\\[\r\n\\begin{aligned}\r\n  \\begin{cases}\r\n    a_1 &=  -(m+1) \\\\\r\n    a_2 &=  (m+n) \r\n  \\end{cases}\r\n\\end{aligned}\r\n\\]\r\nE que\r\nFlutuações explosivas: \\(m + n > 1\\)\r\nFlutuações amortecidas: \\(m + n < 1\\)\r\nFlutuações regulares: \\(m + n = 1\\)\r\nCaso Estável\r\nPara que o comportamento seja estável, basta que a soma de \\(m\\) e \\(n\\) não seja maior que 1.\r\nFlutuações Amortecidas\r\nCondições iniciais e parâmetros:\r\n\r\n\r\nm <- 0.4\r\nn <- 0.5\r\n\r\ny0 <- 1\r\ny1 <- -2\r\na1 <- -(m + 1)\r\na2 <- (m + n)\r\n\r\nt <- 100\r\n\r\n\r\n\r\nRodando a simulação:\r\n\r\n\r\nsimulacao_2o(y0 = y0, y1 = y1, a1 = a1, a2 = a2, t = t) %>%\r\n  ts() %>%\r\n  autoplot() +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, t, 10)) +\r\n  scale_y_continuous(breaks = seq(-5, 5, 1)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(plot.title = element_text(size = 18, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"top\") +\r\n  ggtitle(\"Flutuações Amortecidas\", subtitle = \"\") +\r\n  xlab(\"t\") +\r\n  ylab(\"K\")\r\n\r\n\r\n\r\n\r\nFlutuações Regulares\r\nCondições iniciais e parâmetros:\r\n\r\n\r\nm <- 0.4\r\nn <- 0.6\r\n\r\ny0 <- 1\r\ny1 <- -2\r\na1 <- -(m + 1)\r\na2 <- (m + n)\r\n\r\nt <- 100\r\n\r\n\r\n\r\nRodando a simulação:\r\n\r\n\r\nsimulacao_2o(y0 = y0, y1 = y1, a1 = a1, a2 = a2, t = t) %>%\r\n  ts() %>%\r\n  autoplot() +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, t, 10)) +\r\n  scale_y_continuous(breaks = seq(-5, 5, 1)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(plot.title = element_text(size = 18, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"top\") +\r\n  ggtitle(\"Flutuações Regulares\", subtitle = \"\") +\r\n  xlab(\"t\") +\r\n  ylab(\"K\")\r\n\r\n\r\n\r\n\r\nCaso Instável\r\nPara que o comportamento seja instável, basta que a soma de \\(m\\) e \\(n\\) seja maior que 1.\r\nFlutuações Explosivas\r\nCondições iniciais e parâmetros:\r\n\r\n\r\nm <- 0.45\r\nn <- 0.6\r\n\r\ny0 <- 1\r\ny1 <- -2\r\na1 <- -(m + 1)\r\na2 <- (m + n)\r\n\r\nt <- 100\r\n\r\n\r\n\r\nRodando a simulação:\r\n\r\n\r\nsimulacao_2o(y0 = y0, y1 = y1, a1 = a1, a2 = a2, t = t) %>%\r\n  ts() %>%\r\n  autoplot() +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, t, 10)) +\r\n  scale_y_continuous(breaks = seq(-50, 50, 10)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(plot.title = element_text(size = 18, hjust = 0.5, colour = \"black\"),\r\n        plot.subtitle = element_text(size = 10, hjust = 0.5, colour = \"black\"),\r\n        legend.position = \"top\") +\r\n  ggtitle(\"Flutuações Explosivas\", subtitle = \"\") +\r\n  xlab(\"t\") +\r\n  ylab(\"K\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-06-17T11:04:55-03:00"
    },
    {
      "path": "sist1.html",
      "title": "Sistema de Ordem 1",
      "description": "Essa aula estuda sistemas de Equações em Diferença de ordem 1.\n",
      "author": [
        {
          "name": "Rafael Peixoto",
          "url": {}
        }
      ],
      "date": "04-30-2021",
      "contents": "\r\n\r\nContents\r\nAutovalores e Autovetores\r\nRaízes reais e diferentes\r\nRaízes reais e Iguais\r\nSolução Analítica\r\n\r\nRaízes Complexas\r\nSolução Analítica\r\n\r\nModelo de Cournot\r\nDuas Firmas\r\nMais de duas firmas\r\n\r\n\r\n\r\n\r\nd-article p {\r\n  text-align: justify;\r\n  font-size: 16px;\r\n}\r\n\r\nd-article p code {\r\n  background: rgba(230, 230, 230, 1);\r\n}\r\n\r\nspan.math.inline {\r\n  background: rgba(230, 230, 230, 1);\r\n  font-size: 15px;\r\n}\r\n\r\nd-article div.sourceCode {\r\n  overflow: auto !important;\r\n}\r\n\r\n\r\nAutovalores e Autovetores\r\nSeja a matriz:\r\n\\[\r\n\\begin{equation}\r\n  A = \r\n  \\begin{bmatrix}\r\n    2 & 1 \\\\\r\n    1 & 2\r\n  \\end{bmatrix}\r\n\\end{equation}\r\n\\]\r\nPara identificarmos seus autovalores e autovetores:\r\n\r\n\r\n# Criando Matriz A\r\nA <- matrix(c(2, 1, 1, 2), ncol = 2)\r\n\r\n# objeto contendo os autovalres e autovetores de A\r\nr <- eigen(A)\r\nr\r\n\r\n\r\neigen() decomposition\r\n$values\r\n[1] 3 1\r\n\r\n$vectors\r\n          [,1]       [,2]\r\n[1,] 0.7071068 -0.7071068\r\n[2,] 0.7071068  0.7071068\r\n\r\n\r\n\r\nlambda <- r$values\r\nP <- r$vectors\r\n\r\n\r\n\r\nPara verificar a independência dos autovetores, basta observar que P é uma matriz quadrada de ordem \\(\\small n = 2\\). Logo, havendo independência linear entre as suas colunas (ou linhas) , o seu determinante deverá ser diferente de zero (matriz não singular). E esse ponto é importante pois para obter a solução analítica de um sistema de ordem n, precisamos da matriz P e da sua inversa:\r\n\r\n\r\ndet(P)\r\n\r\n\r\n[1] 1\r\n\r\nComo o determinante é diferente de 0, podemos calcular a inversa da matriz. Com \\(\\small P\\) e \\(\\small P^{-1}\\), podemos calcular a matriz diagonal D:\r\n\r\n\r\nD <- inv(P) %*% A %*% P\r\nD\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    3    0\r\n[2,]    0    1\r\n\r\nAo transformar a matriz A via \\(\\small P^{−1}AP\\), obtemos a a matriz diagonal D, cuja diagonal principal é composta pelos autovalores de A. Dai o nome do processo de diagonalização de matrizes.\r\nHavendo multiplicidade, precisamos verificar se é possível obter a matriz P. Obter a matriz P implica ter uma matriz A diagonalizável. Isto porque o fato de um autovalor ter multiplicidade k não necessariamente anula a possibilidade de, para o mesmo autovalor, obter k autovetores L.I. Tudo dependerá do posto da matriz \\(\\small (A − \\lambda I)\\).\r\nExemplo 1:\r\nSeja a matriz:\r\n\\[\r\n\\begin{equation}\r\n  A = \r\n  \\begin{bmatrix}\r\n    1 & 2 & 3 \\\\\r\n    0 & 1 & 2 \\\\\r\n    0 & 0 & 1\r\n  \\end{bmatrix}\r\n\\end{equation}\r\n\\]\r\nAnalisando os seus autovalores, observamos que a matriz possui três raízes reais e repetidas:\r\n\r\n\r\nA <- matrix(c(1, 0, 0, 2, 1, 0, 3, 2, 1), ncol = 3)\r\nr <- eigen(A)\r\nlambda <- r$values\r\nP <- r$vectors %>% zapsmall()\r\nlambda\r\n\r\n\r\n[1] 1 1 1\r\n\r\nOu seja, \\(\\small \\lambda = 1\\) possui multiplicidade \\(\\small k = 3\\).\r\nVejamos se P é inversível (possui determinante diferente de zero):\r\n\r\n\r\ndet(P)\r\n\r\n\r\n[1] 0\r\n\r\nP não é inversível, portanto não podemos diagonizar A.\r\nExemplo 2:\r\nSeja a matriz:\r\n\\[\r\n\\begin{equation}\r\n  A = \r\n  \\begin{bmatrix}\r\n    1 & 3 & 3 \\\\\r\n    0 & 4 & 0 \\\\\r\n    -3 & 3 & 1\r\n  \\end{bmatrix}\r\n\\end{equation}\r\n\\]\r\nCalculamos os seus autovalores e autovetores:\r\n\r\n\r\nA <- matrix( c(1, 0, -3, 3, 4, 3, -3, 0, 1), ncol = 3)\r\nr <- eigen(A)\r\nlambda = r$values\r\nP <- r$vectors %>% zapsmall()\r\nlambda\r\n\r\n\r\n[1]  4  4 -2\r\n\r\nDe onde temos que \\(\\small \\lambda_1 = \\lambda_2 = 4\\) e \\(\\small \\lambda_3 = -2\\). Logo, temos um autovalor com multiplicidade \\(\\small k = 2\\).\r\nVejamos se P é inversível (possui determinante diferente de zero):\r\n\r\n\r\ndet(P)\r\n\r\n\r\n[1] -0.7559289\r\n\r\nP é inversível, portanto podemos diagonizar A.\r\nRaízes reais e diferentes\r\nSeja o sistema homogêneo:\r\n\\[\r\n\\begin{cases}\r\nx_{t+1} = y_t \\\\\r\ny_{t+1} = 0.125x_t + 0.25y_t\r\n\\end{cases}\r\n\\]\r\nMatricialmente, podemos reescrever o sistema tal que\r\n\\[\r\nZ_{t+1} = A \\cdot Z_t\r\n\\]\r\nonde:\r\n\\[\r\n\\begin{align}\r\nA = \r\n  \\begin{bmatrix}\r\n    0 & 1 \\\\\r\n    0.125 & 0.25\r\n  \\end{bmatrix}; \\qquad\r\nZ_t = \r\n  \\begin{bmatrix}\r\n    x_t \\\\\r\n    y_t\r\n  \\end{bmatrix} \r\n\\end{align}\r\n\\]\r\nO processo de diagonalização feito a seguir é derivado da seguinte transformação do sistema:\r\n\\[\r\n\\bar{Z}_{t+1} = D \\cdot \\bar{Z}_t\r\n\\]\r\nou:\r\n\\[\r\n\\begin{align}\r\n  \\begin{bmatrix}\r\n    \\bar{x}_{t+1} \\\\\r\n    \\bar{y}_{t+1}\r\n  \\end{bmatrix}\r\n = \r\n  \\begin{bmatrix}\r\n    \\lambda_1 & 0 \\\\\r\n    0 & \\lambda_2\r\n  \\end{bmatrix}\r\n\\cdot\r\n  \\begin{bmatrix}\r\n    \\bar{x}_{t} \\\\\r\n    \\bar{y}_{t}\r\n  \\end{bmatrix}\r\n\\end{align}\r\n\\]\r\nou seja:\r\n\\[\r\n\\bar{x}_{t+1} = \\lambda_1 \\bar{x}_{t} \\quad \\Rightarrow \\quad \\bar{x}_{t} = A_1(\\lambda_1)^t \\\\\r\n\\bar{y}_{t+1} = \\lambda_2 \\bar{y}_{t} \\quad \\Rightarrow \\quad \\bar{y}_{t} = A_2(\\lambda_2)^t\r\n\\]\r\nCalculando os autovalores e autovetores da matriz A:\r\n\r\n\r\nA <- matrix( c(0, 0.125, 1, 0.25), ncol = 2)\r\nr <- eigen(A)\r\nlambda = r$values\r\nP <- r$vectors\r\nr\r\n\r\n\r\neigen() decomposition\r\n$values\r\n[1]  0.50 -0.25\r\n\r\n$vectors\r\n           [,1]       [,2]\r\n[1,] -0.8944272 -0.9701425\r\n[2,] -0.4472136  0.2425356\r\n\r\ntemos o caso de um sistema com autovalores reais e diferentes. Logo, é possível diagonalizar A e determinar a seguir a sua forma analítica, a partir dos seus autovetores L. I.:\r\n\r\n\r\ndet(P)\r\n\r\n\r\n[1] -0.6507914\r\n\r\nP é inversível, portanto podemos diagonalizar A.\r\nPara fins de análise de estabilidade, veja que como \\(\\small |\\lambda_1| = 0.5 < 1\\) e \\(\\small |\\lambda_2| = −0.25 < 1\\), logo, esperamos uma trajetória estável; e como \\(\\small |\\lambda_2| < 0\\) esperamos observar oscilações amortecidas nas tarjetórias de \\(\\small x_y\\) e \\(\\small y_t\\). Para validar a análise, podemos simular o sistema, dada uma condição inicial:\r\n\\[\r\n\\begin{align}\r\nZ_0 =\r\n  \\begin{bmatrix}\r\n    x_0 \\\\\r\n    y_0\r\n  \\end{bmatrix}\r\n  =\r\n  \\begin{bmatrix}\r\n    1 \\\\\r\n    0.1\r\n  \\end{bmatrix}\r\n\\end{align}\r\n\\]\r\nAssim, temos que:\r\n\r\n\r\nZ0 <- c(1, 0.1)\r\nt <- 20\r\n\r\n\r\n\r\nPara simular essa série vamos, antes, construir a função de órbita de um sistema de ordem 1:\r\n\r\n\r\n# Função que calcula a orbita de um sistema de Eq em diferença de ordem 1\r\norbita_sis_1 <- function(A, Z0, t) {\r\n  \r\n  Z <- matrix(data = 0, nrow = 2, ncol = t)\r\n  Z[, 1] <- Z0\r\n  \r\n  for (i in 1:(t-1)) {\r\n    Z[, i+1] <- A %*% Z[, i]\r\n  }\r\n  \r\n  Z <- t(Z)\r\n  colnames(Z) <- c(\"x\", \"y\")\r\n  \r\n  return(Z)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\norbita_sis_1(A = A, Z0 = Z0, t = t) %>% \r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 20, 2)) +\r\n  scale_y_continuous(breaks = seq(0, 1, 0.1)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nLembre do efeito da condição inicial e da janela de tempo considerada na simulação. Observe também que a raíz negativa possui um módulo pequeno (−0.25), que é atenuado rapidamente a medida que t aumenta. Analisando cada componente (referente à parte de cada autovalor e autovetor), podemos ter uma melhor compreensão da dinâmica observada neste caso. Primeiro, identificamos os valores das constantes arbitrárias, \\(\\small A_1\\) e \\(\\small A_2\\), considerando que \\(\\small Z_0 = A_1v_1 + A_2v_2 = P \\cdot X\\). Logo, \\(\\small X = (A_1, A_2) = P^{−1} \\cdot Z_0\\).\r\nVamos construir a função de órbita dos componentes:\r\n\r\n\r\n# Função que calcula a orbita dos componentes um sistema de Eq em diferença de ordem 1\r\norbita_sis_comp_1 <- function(A, Z0, t) {\r\n  \r\n  Z1 <- matrix(data = 0, nrow = 2, ncol = t)\r\n  Z2 <- matrix(data = 0, nrow = 2, ncol = t)\r\n  \r\n  r <- eigen(A)\r\n  lambda = r$values\r\n  P <- r$vectors\r\n  X <- inv(P) %*% Z0\r\n  \r\n  A1 <- X[1]\r\n  A2 <- X[2]\r\n  v1 <- P[, 1]\r\n  v2 <- P[, 2]\r\n  \r\n  for (i in 0:(t-1)) {\r\n    Z1[, i+1] <- A1 * v1 * lambda[1]^i\r\n    Z2[, i+1] <- A2 * v2 * lambda[2]^i\r\n  }\r\n  \r\n  out <- rbind(Z1, Z2) %>% \r\n    t()\r\n  colnames(out) <- c(\"X-Comp.1\", \"Y-Comp.1\", \"X-Comp.2\", \"Y-Comp.2\")\r\n\r\n  return(out)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\norbita_sis_comp_1(A = A, Z0 = Z0, t = t) %>%\r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 20, 2)) +\r\n  scale_y_continuous(breaks = seq(-1, 1, 0.1)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nRaízes reais e Iguais\r\nSeja a matriz:\r\n\\[\r\n\\begin{equation}\r\n  A = \r\n  \\begin{bmatrix}\r\n    4 & 1 \\\\\r\n    -1 & 2  \r\n  \\end{bmatrix}\r\n\\end{equation}\r\n\\]\r\nCalculamos os seus autovalores e autovetores:\r\n\r\n\r\nA <- matrix(c(4, -1, 1, 2), nrow=2)\r\nr <- eigen(A)\r\nP <- r$vectors %>% zapsmall()\r\nlambda <- r$values\r\nr\r\n\r\n\r\neigen() decomposition\r\n$values\r\n[1] 3 3\r\n\r\n$vectors\r\n           [,1]       [,2]\r\n[1,]  0.7071068 -0.7071068\r\n[2,] -0.7071068  0.7071068\r\n\r\nA simulação do sistema sai da mesma forma como antes:\r\n\r\n\r\nA <- matrix(c(4, -1, 1, 2), nrow=2)\r\nZ0 <- c(2, -1)\r\nt <- 10\r\n\r\n\r\n\r\n\r\n\r\norbita_sis_1(A = A, Z0 = Z0, t = t) %>% \r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 10, 1)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nSolução Analítica\r\nVamos agora para a forma analítica.\r\nVejamos se P é inversível (determinante diferente de zero):\r\n\r\n\r\ndet(P)\r\n\r\n\r\n[1] 0\r\n\r\nComo P não é inversível, não podemos diagonalizar A. Assim, não temos como transformar o sistema original a um sistema desacoplado, mas ainda é possível transforma-lo a um sistema quase desacoplado.\r\nDada que A não é diagonalizável, Precisamos fazer uso de uma matriz de transformação \\(\\small \\Lambda\\) quase diagonal, dada por:\r\n\\[\r\n\\begin{align}\r\n  \\Lambda = \r\n    \\begin{bmatrix}\r\n      \\lambda & 1 \\\\\r\n      0 & \\lambda\r\n    \\end{bmatrix}\r\n\\end{align}\r\n\\]\r\ntal que:\r\n\\[\r\nP^{-1}AP = \\Lambda\r\n\\]\r\nMultiplicando P à equerda em ambos os lados:\r\n\\[\r\nAP = P \\Lambda\r\n\\]\r\nonde \\(\\small P = [c_1 | c_2]\\) é inversível.\r\nAssim,\r\n\\[\r\nA \\cdot [c_1|c_2] = [c_1|c_2] \\cdot \r\n  \\begin{bmatrix}\r\n    \\lambda & 1 \\\\\r\n    0 & \\lambda\r\n  \\end{bmatrix}\r\n\\]\r\nRealizando os produtos matriciais, temos:\r\n\\[\r\n[Ac_1|Ac_2] = [\\lambda c_1|c_1 + \\lambda c_2]\r\n\\]\r\nPortanto:\r\n\\[\r\n\\begin{align}\r\n  \\cases{\r\n    Ac_1 = \\lambda c_1 \\\\\r\n    Ac_2 = c_1 + \\lambda c_2\r\n  } \\quad \\to \\quad\r\n  \\cases{\r\n    (A-\\lambda I)c_1 &=  0 \\\\\r\n    (A-\\lambda I)^2c_2 &=  0\r\n  }\r\n\\end{align}\r\n\\]\r\nPortanto, \\(\\small c_2\\) é autovetor generalizado de \\(\\small A\\) associado a \\(\\small \\lambda\\)!!\r\nAssim, precisamos do autovetor generalizado, c2. Que por definição:\r\n\\[\r\n(A - \\lambda I)c_2 = v_1\r\n\\] Onde \\(\\small v_1\\) é o único autovetor L.I associado a \\(\\small \\lambda\\).\r\nVoltando ao exercício (queremos achar \\(\\small P=[v_1|c_2]\\)):\r\n\r\n\r\nP\r\n\r\n\r\n           [,1]       [,2]\r\n[1,]  0.7071068 -0.7071068\r\n[2,] -0.7071068  0.7071068\r\n\r\ndet(P)\r\n\r\n\r\n[1] 0\r\n\r\n\r\n\r\nv1 <- P[, 1]\r\nv1\r\n\r\n\r\n[1]  0.7071068 -0.7071068\r\n\r\nLogo, resolvendo o sistema indeterminado:\r\n\r\n\r\nM <- A - diag(lambda[1], 2)\r\nM\r\n\r\n\r\n     [,1] [,2]\r\n[1,]    1    1\r\n[2,]   -1   -1\r\n\r\n\r\n\r\nB <- matrix(data = v1, nrow = 2)\r\nB\r\n\r\n\r\n           [,1]\r\n[1,]  0.7071068\r\n[2,] -0.7071068\r\n\r\n\r\n\r\nMhat <- cbind(M, B)\r\nMhat\r\n\r\n\r\n     [,1] [,2]       [,3]\r\n[1,]    1    1  0.7071068\r\n[2,]   -1   -1 -0.7071068\r\n\r\n\r\n\r\nMhat_esc <- echelon(Mhat)\r\nMhat_esc\r\n\r\n\r\n     [,1] [,2]      [,3]\r\n[1,]    1    1 0.7071068\r\n[2,]    0    0 0.0000000\r\n\r\nTemos portanto, um S.I., com o posto sendo igual a 1. Se \\(\\small c2 = (a, b)\\), da única linha não nula temos que:\r\n\\[\r\na + b = 0.707168\r\n\\]\r\nLogo, se b é a nossa variável livre (\\(\\small n − p = 2 − 1 = 1\\) grau de liberdade), temos que:\r\n\\[\r\na = 0.707168 - b\r\n\\]\r\nNote que a medida que b aumenta, a diminui. E vice versa. Logo, plotando todos os pares possíveis de a e b no espaço bidimensional, teríamos como resultado uma reta com inclinação negativa igual a −1. Uma solução possível seria, por exemplo, para o caso de \\(\\small b = 0\\). Com isso, \\(\\small a = 0.707168\\) e por tanto\r\n\\[\r\nc_2 = (0.707168, 0)\r\n\\]\r\nque poderia ser utilizado para a formulação da solução analítica.\r\nRaízes Complexas\r\nSeja o sistema (Shone, ex. 12, cap. 5):\r\n\\[\r\n\\begin{align}\r\n  &\\cases{\r\n    x_{t+1} = -5 + x_t - 2y_t \\\\\r\n    y_{t+1} = 4 + x_t - y_t\r\n  } \\\\[5pt]\r\n  &\\cases{\r\n    x_0 = 1 \\\\\r\n    y_0 = 2\r\n  }\r\n\\end{align}\r\n\\]\r\nA Matriz A é\r\n\\[\r\n\\begin{align}\r\n  A =\r\n    \\begin{bmatrix}\r\n      1 & -2 \\\\\r\n      1 & -1\r\n    \\end{bmatrix}\r\n\\end{align}\r\n\\]\r\nE o termo independente é\r\n\\[\r\n\\begin{align}\r\n  B =\r\n    \\begin{bmatrix}\r\n      -5 \\\\\r\n      4\r\n    \\end{bmatrix}\r\n\\end{align}\r\n\\]\r\nSimulando esse sistema:\r\n\r\n\r\nA <- matrix(c(1, 1, -2, -1), nrow=2)\r\nB <- matrix(c(-5, 4), nrow=2)\r\nZ0 <- c(1, 2)\r\nt <- 20\r\n\r\n\r\n\r\n\r\n\r\norbita_sis_1(A = A, Z0 = Z0, t = t) %>% \r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 20, 1)) +\r\n  scale_y_continuous(breaks = seq(-4, 4, 1)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nEssa, entretanto, é a órbita para o sistema homogêneo. Para a órbita que considera a solução particular, precisamos modificar a função, incluindo o termo independente:\r\n\r\n\r\n# Função que calcula a orbita de um sistema de Eq em diferença de ordem 1\r\norbita_sis_1_termind <- function(A, B, Z0, t) {\r\n  \r\n  Z <- matrix(data = 0, nrow = 2, ncol = t)\r\n  Z[, 1] <- Z0\r\n  \r\n  for (i in 1:(t-1)) {\r\n    Z[, i+1] <- A %*% Z[, i] + B\r\n  }\r\n  \r\n  Z <- t(Z)\r\n  colnames(Z) <- c(\"x\", \"y\")\r\n  \r\n  return(Z)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\norbita_sis_1_termind(A = A, B = B, Z0 = Z0, t = t) %>% \r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 20, 1)) +\r\n  scale_y_continuous(breaks = seq(-20, 4, 2)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nA partir da simulação, já sabemos que o sistema apresenta ciclo regulares, que não explodem e nem convergem, portanto, possui raízes complexas e com \\(\\small R = 1\\).\r\nSolução Analítica\r\nComo o sistema não é homogêneo, a solução geral será dada pela soma da solução homogênea com a solução particular \\(Z_t = Z^h_t + Z^p_t\\).\r\nRelembrando que\r\n\\[\r\n\\begin{align}\r\n  A =\r\n    \\begin{bmatrix}\r\n      1 & -2 \\\\\r\n      1 & -1\r\n    \\end{bmatrix} ; \\qquad\r\n  B =\r\n    \\begin{bmatrix}\r\n      -5 \\\\\r\n      4\r\n    \\end{bmatrix}\r\n\\end{align}\r\n\\]\r\nPrimeiro, obtemos os autovalores:\r\n\r\n\r\nA <- matrix(c(1, 1, -2, -1), nrow = 2)\r\nr <- eigen(A)\r\nlambda <- r$values\r\nP <- r$vectors\r\nr\r\n\r\n\r\neigen() decomposition\r\n$values\r\n[1] 0+1i 0-1i\r\n\r\n$vectors\r\n                     [,1]                 [,2]\r\n[1,] 0.8164966+0.0000000i 0.8164966+0.0000000i\r\n[2,] 0.4082483-0.4082483i 0.4082483+0.4082483i\r\n\r\nAo ser autovalores complexos, sabemos que a estabilidade incide sobre o módulo:\r\n\r\n\r\nR <- abs(lambda[1])\r\ntheta <- round(Arg(lambda[1]), 2)\r\nR\r\n\r\n\r\n[1] 1\r\n\r\ntheta\r\n\r\n\r\n[1] 1.57\r\n\r\nSendo \\(\\small R = 1\\), esperamos observar ciclos regulares nas séries temporais, como já apontando como gráfico.\r\nA parcela real e imaginâria dos autovetores nos permitem a construção da forma analítica da série:\r\n\r\n\r\nu <- round(Re(P[, 1]), 2)\r\nv <- round(Im(P[, 1]), 2)\r\nu\r\n\r\n\r\n[1] 0.82 0.41\r\n\r\nv\r\n\r\n\r\n[1]  0.00 -0.41\r\n\r\nAssim, a solução homogênea será dada por:\r\n\\[\r\n\\small\r\n\\begin{align}\r\n  \\begin{bmatrix}\r\n    x^h_t \\\\\r\n    y^h_t\r\n  \\end{bmatrix}\r\n  = (1)^t \\cdot \r\n  \\begin{bmatrix}\r\n    \\begin{pmatrix}\r\n      0.82 \\\\\r\n      0.41\r\n    \\end{pmatrix}\r\n  (A_1 cos(1.57t) + A_2 sin(1.57t)) + \r\n    \\begin{pmatrix}\r\n      0 \\\\\r\n      -0.41\r\n    \\end{pmatrix}\r\n  (A_2 cos(1.57t) - A_1 sin(1.57t))\r\n  \\end{bmatrix}\r\n\\end{align}\r\n\\]\r\nVejamos agora a solução particular.\r\nNo estado estacionário, sabemos que \\(\\small Z_{t+1} \\to Z_t \\approx Z^∗\\). Substituindo na equação matricial do sistema:\r\n\\[\r\nZ^∗ = A \\cdot Z^∗ + B = (I − A)^{−1} \\cdot B\r\n\\]\r\n\r\n\r\nB <- matrix(c(-5, 4), nrow = 2)\r\nZeq <- inv(diag(1, nrow(A)) - A ) %*% B\r\nZeq # Zeq é o Z*, ou seja, o Z de equilíbrio\r\n\r\n\r\n     [,1]\r\n[1,] -9.0\r\n[2,] -2.5\r\n\r\nPor tanto temos o ponto fixo \\(\\small (x^∗, y^∗) = (−9, − 2.5)\\) que não é nem atrator, nem repulsor.\r\nModelo de Cournot\r\nAnalisaremos a versão dinâmica do modelo (sec. 10.1 do Gandolfo). O modelo contempla n firmas, que ajustam as suas decisões a partir da observação do comportamento das suas concorrentes. Pragmaticamente, para cada período de tempo t, a firma i observa o comportamento das outras n−1 firmas (o produto) e assume que essas quantidades se manterão em t+1. Logo, dada a demanda, a firma i decidirá a quantidade a produzir visando a maximização dos seus lucros. Simularemos dois casos: quando n=2 e quando n>2. Seja então o mercado oligopolístico com n firmas produzindo um bem homogêneo. Assumindo uma curva de demanda linear, temos que:\r\n\\[\r\np_t = a - b \\sum^n_{i=1}x_{i,t}\r\n\\]\r\ncom a>0, b>0 e com \\(x_{i,t}\\) representando a produção atual da i−ésima firma no período t. Visando simplificar a representação, adotaremos também curvas lineares para as funções custo, \\(C_i\\), para cada firma. Com isto, garantimos que os custos marginais \\(c_i\\) sejam constantes:\r\n\\[\r\nC_{i,t} = d + c_i \\cdot x_{i,t}\r\n\\]\r\nConsiderando que as firmas maximizam os lucros e após algumas manipulações algébricas:\r\n\\[\r\nx_{i,t+1} = - \\dfrac{1}{2} \\sum^n_{j \\ne i} x_{j,t} + \\dfrac{a-c_i}{2b}\r\n\\]\r\nDuas Firmas\r\nNesse caso, as equações do sistema dinâmico são:\r\n\\[\r\n\\begin{align}\r\n  \\cases{\r\n    x_{1,t+1} = - \\dfrac{1}{2} x_{2,t} + \\dfrac{a-c_1}{2b} \\\\[7pt]\r\n    x_{2,t+1} = - \\dfrac{1}{2} x_{1,t} + \\dfrac{a-c_2}{2b}\r\n  }\r\n\\end{align}\r\n\\]\r\nA matriz de coeficientes do sistema não homogêneo é dada por:\r\n\\[\r\n\\begin{align}\r\n  A = \r\n    \\begin{bmatrix}\r\n      0 & -\\dfrac{1}{2} \\\\[7pt]\r\n      -\\dfrac{1}{2} & 0\r\n    \\end{bmatrix}\r\n\\end{align}\r\n\\]\r\ncom o termo independente sendo igual a\r\n\\[\r\n\\begin{align}\r\n  B = \r\n    \\begin{bmatrix}\r\n      \\dfrac{a-c_1}{2b} \\\\[7pt]\r\n      \\dfrac{a-c_2}{2b}\r\n    \\end{bmatrix}\r\n\\end{align}\r\n\\]\r\nDados os seguintes valores para os parâmetros:\r\n\r\n\r\nset.seed(1)\r\nn <- 2\r\na <- 10 # valor arbitrario\r\nb <- 0.5 # valor arbitrario\r\nd <- 10 # valor arbitrario\r\nc <- runif(n) # valores arbitrarios\r\nA <- matrix(-1/2, nrow = n, ncol = n) + diag(1/2, n)\r\nB <- matrix((a - c) / (2 * b), nrow = n)\r\nZ0 <- 100 * runif(n) # condicoes iniciais para cada uma das n firmas\r\nt <- 20\r\n\r\nlist(\"A\" = A, \"B\" = B, \"Z0\" = Z0)\r\n\r\n\r\n$A\r\n     [,1] [,2]\r\n[1,]  0.0 -0.5\r\n[2,] -0.5  0.0\r\n\r\n$B\r\n         [,1]\r\n[1,] 9.734491\r\n[2,] 9.627876\r\n\r\n$Z0\r\n[1] 57.28534 90.82078\r\n\r\nSimulando:\r\n\r\n\r\norbita_sis_1_termind(A = A, B = B, Z0 = Z0, t = t) %>% \r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 20, 1)) +\r\n  scale_y_continuous(breaks = seq(-50, 100, 10)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nAnalisando os autovalores de A:\r\n\r\n\r\nr <- eigen(A)\r\nlambda = r$values\r\nlambda\r\n\r\n\r\n[1]  0.5 -0.5\r\n\r\nVemos que ambos os autovalores são menores que um em módulo, havendo um autovalor negativo. Logo, ao simular as séries, esperaríamos observar (como de fato observamos) trajetórias amortecidas com oscilações transitórias. O estado estacionário será dado por (atrator):\r\n\r\n\r\nXeq = inv((diag(1, n) - A)) %*% B\r\nXeq \r\n\r\n\r\n         [,1]\r\n[1,] 6.560738\r\n[2,] 6.347507\r\n\r\nColocando no gráfico os valores de equilíbrio:\r\n\r\n\r\norbita_sis_1_termind(A = A, B = B, Z0 = Z0, t = t) %>% \r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 20, 1)) +\r\n  scale_y_continuous(breaks = seq(-50, 100, 10)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\") +\r\n  geom_hline(yintercept = Xeq[1], linetype = \"dashed\", color = \"red\") +\r\n  geom_hline(yintercept = Xeq[2], linetype = \"dotted\", color = \"blue\")\r\n\r\n\r\n\r\n\r\nMais de duas firmas\r\nAntes de analisar esse caso, vamos reescrever a função de órbita para admitir mais de 2 equações (basta acrescentar o parâmetro n):\r\n\r\n\r\n# Função que calcula a orbita de um sistema de Eq em diferença de ordem 1\r\norbita_sis_neqs <- function(A, B, Z0, n, t) {\r\n  \r\n  Z <- matrix(data = 0, nrow = n, ncol = t)\r\n  Z[, 1] <- Z0\r\n  \r\n  for (i in 1:(t-1)) {\r\n    Z[, i+1] <- A %*% Z[, i] + B\r\n  }\r\n  \r\n  Z <- t(Z)\r\n  colnames(Z) <- c(paste0(rep(\"X.\"), 1:n))\r\n  \r\n  return(Z)\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\nset.seed(1)\r\nn <- 6\r\na <- 10 # valor arbitrario\r\nb <- 0.5 # valor arbitrario\r\nd <- 10 # valor arbitrario\r\nc <- runif(n) # valores arbitrarios\r\nA <- matrix(-1/2, nrow = n, ncol = n) + diag(1/2, n)\r\nB <- matrix((a - c) / (2 * b), nrow = n)\r\nZ0 <- 100 * runif(n) # condicoes iniciais para cada uma das n firmas\r\nt <- 20\r\n\r\nlist(\"A\" = A, \"B\" = B, \"Z0\" = Z0)\r\n\r\n\r\n$A\r\n     [,1] [,2] [,3] [,4] [,5] [,6]\r\n[1,]  0.0 -0.5 -0.5 -0.5 -0.5 -0.5\r\n[2,] -0.5  0.0 -0.5 -0.5 -0.5 -0.5\r\n[3,] -0.5 -0.5  0.0 -0.5 -0.5 -0.5\r\n[4,] -0.5 -0.5 -0.5  0.0 -0.5 -0.5\r\n[5,] -0.5 -0.5 -0.5 -0.5  0.0 -0.5\r\n[6,] -0.5 -0.5 -0.5 -0.5 -0.5  0.0\r\n\r\n$B\r\n         [,1]\r\n[1,] 9.734491\r\n[2,] 9.627876\r\n[3,] 9.427147\r\n[4,] 9.091792\r\n[5,] 9.798318\r\n[6,] 9.101610\r\n\r\n$Z0\r\n[1] 94.467527 66.079779 62.911404  6.178627 20.597457 17.655675\r\n\r\n\r\n\r\norbita_sis_neqs(A = A, B = B, Z0 = Z0, n = n, t = t) %>% \r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 20, 1)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\nVoltando ao exercício, para \\(n = 3\\), as equações do sistema serão:\r\n\\[\r\n\\begin{align}\r\n  \\cases{\r\n    x_{1,t+1} = - \\dfrac{1}{2} x_{2,t} - \\dfrac{1}{2} x_{3,t} + \\dfrac{a-c_1}{2b} \\\\[7pt]\r\n    x_{2,t+1} = - \\dfrac{1}{2} x_{1,t} - \\dfrac{1}{2} x_{3,t} + \\dfrac{a-c_2}{2b} \\\\[7pt]\r\n    x_{3,t+1} = - \\dfrac{1}{2} x_{1,t} - \\dfrac{1}{2} x_{2,t} + \\dfrac{a-c_3}{2b} \\\\\r\n  }\r\n\\end{align}\r\n\\]\r\nLogo, a matriz A será dada por\r\n\\[\r\n\\begin{align}\r\n  A = \r\n    \\begin{bmatrix}\r\n      0 & -\\dfrac{1}{2} & -\\dfrac{1}{2} \\\\[7pt]\r\n      -\\dfrac{1}{2} & 0 & -\\dfrac{1}{2} \\\\[7pt]\r\n      -\\dfrac{1}{2} & -\\dfrac{1}{2} & 0\r\n    \\end{bmatrix}\r\n\\end{align}\r\n\\]\r\nSimulando:\r\n\r\n\r\nset.seed(1)\r\nn <- 3\r\na <- 10 # valor arbitrario\r\nb <- 0.5 # valor arbitrario\r\nd <- 10 # valor arbitrario\r\nc <- runif(n) # valores arbitrarios\r\nA <- matrix(-1/2, nrow = n, ncol = n) + diag(1/2, n)\r\nB <- matrix((a - c) / (2 * b), nrow = n)\r\nZ0 <- 100 * runif(n) # condicoes iniciais para cada uma das n firmas\r\nt <- 20\r\n\r\nlist(\"A\" = A, \"B\" = B, \"Z0\" = Z0)\r\n\r\n\r\n$A\r\n     [,1] [,2] [,3]\r\n[1,]  0.0 -0.5 -0.5\r\n[2,] -0.5  0.0 -0.5\r\n[3,] -0.5 -0.5  0.0\r\n\r\n$B\r\n         [,1]\r\n[1,] 9.734491\r\n[2,] 9.627876\r\n[3,] 9.427147\r\n\r\n$Z0\r\n[1] 90.82078 20.16819 89.83897\r\n\r\n\r\n\r\norbita_sis_neqs(A = A, B = B, Z0 = Z0, n = n, t = t) %>% \r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 20, 1)) +\r\n  scale_y_continuous(breaks = seq(-50, 100, 10)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\ne analisando os seus autovalores:\r\n\r\n\r\nr = eigen(A)\r\nlambda = r$values\r\nlambda\r\n\r\n\r\n[1]  0.5  0.5 -1.0\r\n\r\nobservamos a presenção de um autovalor com módulo unitário e oscilações regulares. Logo, o sistema não é estável no longo prazo.\r\nPara n = 4:\r\n\r\n\r\nset.seed(1)\r\nn <- 4\r\na <- 10 # valor arbitrario\r\nb <- 0.5 # valor arbitrario\r\nd <- 10 # valor arbitrario\r\nc <- runif(n) # valores arbitrarios\r\nA <- matrix(-1/2, nrow = n, ncol = n) + diag(1/2, n)\r\nB <- matrix((a - c) / (2 * b), nrow = n)\r\nZ0 <- 100 * runif(n) # condicoes iniciais para cada uma das n firmas\r\nt <- 20\r\n\r\nlist(\"A\" = A, \"B\" = B, \"Z0\" = Z0)\r\n\r\n\r\n$A\r\n     [,1] [,2] [,3] [,4]\r\n[1,]  0.0 -0.5 -0.5 -0.5\r\n[2,] -0.5  0.0 -0.5 -0.5\r\n[3,] -0.5 -0.5  0.0 -0.5\r\n[4,] -0.5 -0.5 -0.5  0.0\r\n\r\n$B\r\n         [,1]\r\n[1,] 9.734491\r\n[2,] 9.627876\r\n[3,] 9.427147\r\n[4,] 9.091792\r\n\r\n$Z0\r\n[1] 20.16819 89.83897 94.46753 66.07978\r\n\r\n\r\n\r\norbita_sis_neqs(A = A, B = B, Z0 = Z0, n = n, t = t) %>% \r\n  ts() %>%\r\n  autoplot(facets = F) +\r\n  theme_hc() +\r\n  scale_x_continuous(breaks = seq(0, 20, 1)) +\r\n  scale_color_discrete(\"\") +\r\n  theme(legend.position = \"top\")\r\n\r\n\r\n\r\n\r\ne os seus autovalores são\r\n\r\n\r\nr = eigen(A)\r\nlambda = r$values\r\nlambda\r\n\r\n\r\n[1]  0.5  0.5  0.5 -1.5\r\n\r\nteremos um autovalor com módulo maior que um e por tanto, obteremos trajetórias instáveis com oscilações explosivas, como o gráfico deixa claro.\r\nDe forma geral, para \\(n > 3\\) teremos trajetórias não convergentes, pois podemos demonstrar (ver o livro) que nesses casos, teremos sempre um autovalor \\(\\lambda = -(n-1)/2\\), que possui módulo maior que a unidade para o caso de três firmas em diante.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-06-17T11:05:14-03:00"
    }
  ],
  "collections": []
}
